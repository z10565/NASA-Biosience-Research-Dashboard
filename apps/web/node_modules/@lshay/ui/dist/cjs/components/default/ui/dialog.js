'use strict';

var t = require('react');
var e = require('@radix-ui/react-dialog');
var lucideReact = require('lucide-react');
var clsx = require('clsx');
var tailwindMerge = require('tailwind-merge');

function _interopNamespace(e) {
	if (e && e.__esModule) return e;
	var n = Object.create(null);
	if (e) {
		Object.keys(e).forEach(function (k) {
			if (k !== 'default') {
				var d = Object.getOwnPropertyDescriptor(e, k);
				Object.defineProperty(n, k, d.get ? d : {
					enumerable: true,
					get: function () { return e[k]; }
				});
			}
		});
	}
	n.default = e;
	return Object.freeze(n);
}

var t__namespace = /*#__PURE__*/_interopNamespace(t);
var e__namespace = /*#__PURE__*/_interopNamespace(e);

function s(...a){return tailwindMerge.twMerge(clsx.clsx(a))}var C=e__namespace.Root,T=e__namespace.Trigger,d=e__namespace.Portal,b=e__namespace.Close,l=t__namespace.forwardRef(({className:a,...i},o)=>t__namespace.createElement(e__namespace.Overlay,{ref:o,className:s("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",a),...i}));l.displayName=e__namespace.Overlay.displayName;var f=t__namespace.forwardRef(({className:a,children:i,...o},r)=>t__namespace.createElement(d,null,t__namespace.createElement(l,null),t__namespace.createElement(e__namespace.Content,{ref:r,className:s("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",a),...o},i,t__namespace.createElement(e__namespace.Close,{className:"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground"},t__namespace.createElement(lucideReact.X,{className:"h-4 w-4"}),t__namespace.createElement("span",{className:"sr-only"},"Close")))));f.displayName=e__namespace.Content.displayName;var g=({className:a,...i})=>t__namespace.createElement("div",{className:s("flex flex-col space-y-1.5 text-center sm:text-left",a),...i});g.displayName="DialogHeader";var p=({className:a,...i})=>t__namespace.createElement("div",{className:s("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",a),...i});p.displayName="DialogFooter";var D=t__namespace.forwardRef(({className:a,...i},o)=>t__namespace.createElement(e__namespace.Title,{ref:o,className:s("text-lg font-semibold leading-none tracking-tight",a),...i}));D.displayName=e__namespace.Title.displayName;var u=t__namespace.forwardRef(({className:a,...i},o)=>t__namespace.createElement(e__namespace.Description,{ref:o,className:s("text-sm text-muted-foreground",a),...i}));u.displayName=e__namespace.Description.displayName;

exports.Dialog = C;
exports.DialogClose = b;
exports.DialogContent = f;
exports.DialogDescription = u;
exports.DialogFooter = p;
exports.DialogHeader = g;
exports.DialogOverlay = l;
exports.DialogPortal = d;
exports.DialogTitle = D;
exports.DialogTrigger = T;
