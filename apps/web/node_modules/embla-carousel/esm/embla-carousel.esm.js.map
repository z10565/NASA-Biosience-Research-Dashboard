{"version":3,"file":"embla-carousel.esm.js","sources":["../src/components/utils.ts","../src/components/Alignment.ts","../src/components/Axis.ts","../src/components/Limit.ts","../src/components/Counter.ts","../src/components/Direction.ts","../src/components/EventStore.ts","../src/components/DragHandler.ts","../src/components/DragTracker.ts","../src/components/NodeRects.ts","../src/components/PercentOfView.ts","../src/components/ResizeHandler.ts","../src/components/ScrollBody.ts","../src/components/ScrollBounds.ts","../src/components/ScrollContain.ts","../src/components/ScrollLimit.ts","../src/components/ScrollLooper.ts","../src/components/ScrollProgress.ts","../src/components/ScrollSnaps.ts","../src/components/SlideRegistry.ts","../src/components/ScrollTarget.ts","../src/components/ScrollTo.ts","../src/components/SlideFocus.ts","../src/components/Vector1d.ts","../src/components/Translate.ts","../src/components/SlideLooper.ts","../src/components/SlidesHandler.ts","../src/components/SlidesInView.ts","../src/components/SlideSizes.ts","../src/components/SlidesToScroll.ts","../src/components/Engine.ts","../src/components/Animations.ts","../src/components/EventHandler.ts","../src/components/Options.ts","../src/components/OptionsHandler.ts","../src/components/PluginsHandler.ts","../src/components/EmblaCarousel.ts"],"sourcesContent":["import { PointerEventType } from './DragTracker'\n\nexport type WindowType = Window & typeof globalThis\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isBoolean(subject: unknown): subject is boolean {\n  return typeof subject === 'boolean'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return Math.sign(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function arrayIsLastIndex<Type>(array: Type[], index: number): boolean {\n  return index === arrayLastIndex(array)\n}\n\nexport function arrayFromNumber(n: number, startAt: number = 0): number[] {\n  return Array.from(Array(n), (_, i) => startAt + i)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function isMouseEvent(\n  evt: PointerEventType,\n  ownerWindow: WindowType\n): evt is MouseEvent {\n  return (\n    typeof ownerWindow.MouseEvent !== 'undefined' &&\n    evt instanceof ownerWindow.MouseEvent\n  )\n}\n","import { isString } from './utils'\n\nexport type AlignmentOptionType =\n  | 'start'\n  | 'center'\n  | 'end'\n  | ((viewSize: number, snapSize: number, index: number) => number)\n\nexport type AlignmentType = {\n  measure: (n: number, index: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function measure(n: number, index: number): number {\n    if (isString(align)) return predefined[align](n)\n    return align(viewSize, n, index)\n  }\n\n  const self: AlignmentType = {\n    measure\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\nimport { NodeRectType } from './NodeRects'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (nodeRect: NodeRectType) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  direction: DirectionOptionType\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(nodeRect: NodeRectType): number {\n    const { width, height } = nodeRect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return direction === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return direction === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean\n): CounterType {\n  const { constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return clone().set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    get,\n    set,\n    add,\n    clone\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  apply: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function apply(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    apply\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType\n  ) => EventStoreType\n  clear: () => void\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true }\n  ): EventStoreType {\n    let removeListener: EventRemoverType\n\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options)\n      removeListener = () => node.removeEventListener(type, handler, options)\n    } else {\n      const legacyMediaQueryList = <MediaQueryList>node\n      legacyMediaQueryList.addListener(handler)\n      removeListener = () => legacyMediaQueryList.removeListener(handler)\n    }\n\n    listeners.push(removeListener)\n    return self\n  }\n\n  function clear(): void {\n    listeners = listeners.filter((remove) => remove())\n  }\n\n  const self: EventStoreType = {\n    add,\n    clear\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { AnimationType } from './Animations'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1DType } from './Vector1d'\nimport { PercentOfViewType } from './PercentOfView'\nimport { Limit } from './Limit'\nimport {\n  deltaAbs,\n  factorAbs,\n  isBoolean,\n  isMouseEvent,\n  mathAbs,\n  mathSign,\n  WindowType\n} from './utils'\n\ntype DragHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: PointerEventType\n) => boolean | void\n\nexport type DragHandlerOptionType = boolean | DragHandlerCallbackType\n\nexport type DragHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n  pointerDown: () => boolean\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  dragFree: boolean,\n  dragThreshold: number,\n  skipSnaps: boolean,\n  baseFriction: number,\n  watchDrag: DragHandlerOptionType\n): DragHandlerType {\n  const { cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const initEvents = EventStore()\n  const dragEvents = EventStore()\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20))\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 43 : 25\n\n  let isMoving = false\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchDrag) return\n\n    function downIfAllowed(evt: PointerEventType): void {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt)\n    }\n\n    const node = rootNode\n    initEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', downIfAllowed)\n      .add(node, 'mousedown', downIfAllowed)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function destroy(): void {\n    initEvents.clear()\n    dragEvents.clear()\n  }\n\n  function addDragEvents(): void {\n    const node = isMouse ? ownerDocument : rootNode\n    dragEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const nodeName = node.nodeName || ''\n    return focusNodes.includes(nodeName)\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.add(mathSign(force) * -1)\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow)\n    isMouse = isMouseEvt\n    if (isMouseEvt && evt.button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving\n    isMoving = deltaAbs(target.get(), location.get()) >= 2\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    scrollBody.useFriction(0).useDuration(0)\n    target.set(location)\n    addDragEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n  }\n\n  function move(evt: PointerEventType): void {\n    const lastScroll = dragTracker.readPoint(evt)\n    const lastCross = dragTracker.readPoint(evt, crossAxis)\n    const diffScroll = deltaAbs(lastScroll, startScroll)\n    const diffCross = deltaAbs(lastCross, startCross)\n\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (diffScroll > dragThreshold) preventClick = true\n\n    scrollBody.useFriction(0.3).useDuration(1)\n    animation.start()\n    target.add(direction.apply(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction.apply(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const speed = baseSpeed - 10 * forceFactor\n    const friction = baseFriction + forceFactor / 50\n\n    preventScroll = false\n    pointerIsDown = false\n    dragEvents.clear()\n    scrollBody.useDuration(speed).useFriction(friction)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n    }\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    init,\n    pointerDown,\n    destroy\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { isMouseEvent, mathAbs, WindowType } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  ownerWindow: WindowType\n): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  }\n  return self\n}\n","export type NodeRectType = {\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport type NodeRectsType = {\n  measure: (node: HTMLElement) => NodeRectType\n}\n\nexport function NodeRects(): NodeRectsType {\n  function measure(node: HTMLElement): NodeRectType {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = node\n    const offset: NodeRectType = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    }\n\n    return offset\n  }\n\n  const self: NodeRectsType = {\n    measure\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { NodeRectsType } from './NodeRects'\nimport { isBoolean, mathAbs, WindowType } from './utils'\n\ntype ResizeHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  entries: ResizeObserverEntry[]\n) => boolean | void\n\nexport type ResizeHandlerOptionType = boolean | ResizeHandlerCallbackType\n\nexport type ResizeHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function ResizeHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  ownerWindow: WindowType,\n  slides: HTMLElement[],\n  axis: AxisType,\n  watchResize: ResizeHandlerOptionType,\n  nodeRects: NodeRectsType\n): ResizeHandlerType {\n  let resizeObserver: ResizeObserver\n  let containerSize: number\n  let slideSizes: number[] = []\n  let destroyed = false\n\n  function readSize(node: HTMLElement): number {\n    return axis.measureSize(nodeRects.measure(node))\n  }\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchResize) return\n\n    containerSize = readSize(container)\n    slideSizes = slides.map(readSize)\n\n    function defaultCallback(entries: ResizeObserverEntry[]): void {\n      for (const entry of entries) {\n        const isContainer = entry.target === container\n        const slideIndex = slides.indexOf(<HTMLElement>entry.target)\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex]\n        const newSize = readSize(isContainer ? container : slides[slideIndex])\n        const diffSize = mathAbs(newSize - lastSize)\n\n        if (diffSize >= 0.5) {\n          ownerWindow.requestAnimationFrame(() => {\n            emblaApi.reInit()\n            eventHandler.emit('resize')\n          })\n          break\n        }\n      }\n    }\n\n    resizeObserver = new ResizeObserver((entries) => {\n      if (destroyed) return\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries)\n      }\n    })\n\n    const observeNodes = [container].concat(slides)\n    observeNodes.forEach((node) => resizeObserver.observe(node))\n  }\n\n  function destroy(): void {\n    if (resizeObserver) resizeObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: ResizeHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { mathSign, mathAbs } from './utils'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  duration: () => number\n  velocity: () => number\n  seek: () => ScrollBodyType\n  settled: () => boolean\n  useBaseFriction: () => ScrollBodyType\n  useBaseDuration: () => ScrollBodyType\n  useFriction: (n: number) => ScrollBodyType\n  useDuration: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  offsetLocation: Vector1DType,\n  target: Vector1DType,\n  baseDuration: number,\n  baseFriction: number\n): ScrollBodyType {\n  let bodyVelocity = 0\n  let scrollDirection = 0\n  let scrollDuration = baseDuration\n  let scrollFriction = baseFriction\n  let rawLocation = location.get()\n  let rawLocationPrevious = 0\n\n  function seek(): ScrollBodyType {\n    const diff = target.get() - location.get()\n    const isInstant = !scrollDuration\n    let directionDiff = 0\n\n    if (isInstant) {\n      bodyVelocity = 0\n      location.set(target)\n\n      directionDiff = diff\n    } else {\n      bodyVelocity += diff / scrollDuration\n      bodyVelocity *= scrollFriction\n      rawLocation += bodyVelocity\n      location.add(bodyVelocity)\n\n      directionDiff = rawLocation - rawLocationPrevious\n    }\n\n    scrollDirection = mathSign(directionDiff)\n    rawLocationPrevious = rawLocation\n    return self\n  }\n\n  function settled(): boolean {\n    const diff = target.get() - offsetLocation.get()\n    return mathAbs(diff) < 0.001\n  }\n\n  function duration(): number {\n    return scrollDuration\n  }\n\n  function direction(): number {\n    return scrollDirection\n  }\n\n  function velocity(): number {\n    return bodyVelocity\n  }\n\n  function useBaseDuration(): ScrollBodyType {\n    return useDuration(baseDuration)\n  }\n\n  function useBaseFriction(): ScrollBodyType {\n    return useFriction(baseFriction)\n  }\n\n  function useDuration(n: number): ScrollBodyType {\n    scrollDuration = n\n    return self\n  }\n\n  function useFriction(n: number): ScrollBodyType {\n    scrollFriction = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const frictionLimit = Limit(0.1, 0.99)\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(location.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - location.get())\n    const diffToTarget = target.get() - location.get()\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useDuration(25).useBaseFriction()\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayIsLastIndex, arrayLast } from './utils'\n\nexport type ScrollContainOptionType = false | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n  scrollContainLimit: LimitType\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, 0)\n  const snapsBounded = measureBounded()\n  const scrollContainLimit = findScrollContainLimit()\n  const snapsContained = measureContained()\n\n  function findScrollContainLimit(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureBounded(): number[] {\n    return snapsAligned\n      .map((snapAligned, index) => {\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(snapsAligned, index)\n        if (isFirst) return scrollBounds.max\n        if (isLast) return scrollBounds.min\n        return scrollBounds.constrain(snapAligned)\n      })\n      .map((scrollBound) => parseFloat(scrollBound.toFixed(3)))\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = scrollContainLimit\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n    scrollContainLimit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean\n): ScrollLimitType {\n  const max = scrollSnaps[0]\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps)\n  const limit = Limit(min, max)\n\n  const self: ScrollLimitType = {\n    limit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  offsetLocation: Vector1DType,\n  vectors: Vector1DType[]\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(offsetLocation.get())\n    if (direction === -1) return reachedMin(offsetLocation.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return length ? currentLocation / -length : 0\n  }\n\n  const self: ScrollProgressType = {\n    get\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slidesToScroll: SlidesToScrollType\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport {\n  arrayFromNumber,\n  arrayIsLastIndex,\n  arrayLast,\n  arrayLastIndex\n} from './utils'\n\nexport type SlideRegistryType = {\n  slideRegistry: number[][]\n}\n\nexport function SlideRegistry(\n  viewSize: number,\n  contentSize: number,\n  containSnaps: boolean,\n  containScroll: ScrollContainOptionType,\n  scrollContainLimit: LimitType,\n  slidesToScroll: SlidesToScrollType,\n  slideIndexes: number[]\n): SlideRegistryType {\n  const { groupSlides } = slidesToScroll\n  const { min, max } = scrollContainLimit\n  const slideRegistry = createSlideRegistry()\n\n  function createSlideRegistry(): number[][] {\n    const groupedSlideIndexes = groupSlides(slideIndexes)\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps'\n    if (doNotContain || contentSize <= viewSize) return groupedSlideIndexes\n\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index\n      const isLast = arrayIsLastIndex(groups, index)\n\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1\n        return arrayFromNumber(range)\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1\n        return arrayFromNumber(range, arrayLast(groups)[0])\n      }\n      return group\n    })\n  }\n\n  const self: SlideRegistryType = {\n    slideRegistry\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { arrayLast, mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return targets[0]\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    if (matchingTargets.length) return minDistance(matchingTargets)\n    return arrayLast(targets) - contentSize\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut\n  }\n  return self\n}\n","import { AnimationType } from './Animations'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    targetVector.add(distanceDiff)\n    if (distanceDiff) animation.start()\n\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index\n  }\n  return self\n}\n","import { EventStoreType } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollToType } from './ScrollTo'\nimport { SlideRegistryType } from './SlideRegistry'\nimport { isNumber } from './utils'\n\nexport type SlideFocusType = {\n  init: () => void\n}\n\nexport function SlideFocus(\n  root: HTMLElement,\n  slides: HTMLElement[],\n  slideRegistry: SlideRegistryType['slideRegistry'],\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  eventStore: EventStoreType\n): SlideFocusType {\n  let lastTabPressTime = 0\n\n  function init(): void {\n    eventStore.add(document, 'keydown', registerTabPress, false)\n    slides.forEach(addSlideFocusEvent)\n  }\n\n  function registerTabPress(event: KeyboardEvent): void {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime()\n  }\n\n  function addSlideFocusEvent(slide: HTMLElement): void {\n    const focus = (): void => {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n\n      if (diffTime > 10) return\n\n      root.scrollLeft = 0\n      const index = slides.indexOf(slide)\n      const group = slideRegistry.findIndex((group) => group.includes(index))\n\n      if (!isNumber(group)) return\n\n      scrollBody.useDuration(0)\n      scrollTo.index(group, 0)\n    }\n\n    eventStore.add(slide, 'focus', focus, {\n      passive: true,\n      capture: true\n    })\n  }\n\n  const self: SlideFocusType = {\n    init\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (n: Vector1DType | number) => void\n  add: (n: Vector1DType | number) => void\n  subtract: (n: Vector1DType | number) => void\n}\n\nexport function Vector1D(initialValue: number): Vector1DType {\n  let value = initialValue\n\n  function get(): number {\n    return value\n  }\n\n  function set(n: Vector1DType | number): void {\n    value = normalizeInput(n)\n  }\n\n  function add(n: Vector1DType | number): void {\n    value += normalizeInput(n)\n  }\n\n  function subtract(n: Vector1DType | number): void {\n    value -= normalizeInput(n)\n  }\n\n  function normalizeInput(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    get,\n    set,\n    add,\n    subtract\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (target: number) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: number): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.apply(target))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\nimport { DirectionType } from './Direction'\n\ntype SlideBoundType = {\n  start: number\n  end: number\n}\n\ntype LoopPointType = {\n  loopPoint: number\n  index: number\n  translate: TranslateType\n  slideLocation: Vector1DType\n  target: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  slideSizesWithGaps: number[],\n  snaps: number[],\n  scrollSnaps: number[],\n  offsetLocation: Vector1DType,\n  slides: HTMLElement[]\n): SlideLooperType {\n  const roundingSafety = 0.5\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findSlideBounds(offset: number): SlideBoundType[] {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }))\n  }\n\n  function findLoopPoints(\n    indexes: number[],\n    offset: number,\n    isEndEdge: boolean\n  ): LoopPointType[] {\n    const slideBounds = findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isEndEdge ? 0 : -contentSize\n      const altered = isEndEdge ? contentSize : 0\n      const boundEdge = isEndEdge ? 'end' : 'start'\n      const loopPoint = slideBounds[index][boundEdge]\n\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, direction, slides[index]),\n        target: () => (offsetLocation.get() > loopPoint ? initial : altered)\n      }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0]\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, contentSize, false)\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, -contentSize, true)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, slideLocation } = loopPoint\n      const shiftLocation = target()\n      if (shiftLocation === slideLocation.get()) return\n      translate.to(shiftLocation)\n      slideLocation.set(shiftLocation)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { isBoolean } from './utils'\n\ntype SlidesHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  mutations: MutationRecord[]\n) => boolean | void\n\nexport type SlidesHandlerOptionType = boolean | SlidesHandlerCallbackType\n\nexport type SlidesHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function SlidesHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  watchSlides: SlidesHandlerOptionType\n): SlidesHandlerType {\n  let mutationObserver: MutationObserver\n  let destroyed = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchSlides) return\n\n    function defaultCallback(mutations: MutationRecord[]): void {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit()\n          eventHandler.emit('slidesChanged')\n          break\n        }\n      }\n    }\n\n    mutationObserver = new MutationObserver((mutations) => {\n      if (destroyed) return\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations)\n      }\n    })\n\n    mutationObserver.observe(container, { childList: true })\n  }\n\n  function destroy(): void {\n    if (mutationObserver) mutationObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: SlidesHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EventHandlerType } from './EventHandler'\nimport { objectKeys } from './utils'\n\ntype IntersectionEntryMapType = {\n  [key: number]: IntersectionObserverEntry\n}\n\nexport type SlidesInViewOptionsType = IntersectionObserverInit['threshold']\n\nexport type SlidesInViewType = {\n  init: () => void\n  destroy: () => void\n  get: (inView?: boolean) => number[]\n}\n\nexport function SlidesInView(\n  container: HTMLElement,\n  slides: HTMLElement[],\n  eventHandler: EventHandlerType,\n  threshold: SlidesInViewOptionsType\n): SlidesInViewType {\n  const intersectionEntryMap: IntersectionEntryMapType = {}\n  let inViewCache: number[] | null = null\n  let notInViewCache: number[] | null = null\n  let intersectionObserver: IntersectionObserver\n  let destroyed = false\n\n  function init(): void {\n    intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        if (destroyed) return\n\n        entries.forEach((entry) => {\n          const index = slides.indexOf(<HTMLElement>entry.target)\n          intersectionEntryMap[index] = entry\n        })\n\n        inViewCache = null\n        notInViewCache = null\n        eventHandler.emit('slidesInView')\n      },\n      {\n        root: container.parentElement,\n        threshold\n      }\n    )\n\n    slides.forEach((slide) => intersectionObserver.observe(slide))\n  }\n\n  function destroy(): void {\n    if (intersectionObserver) intersectionObserver.disconnect()\n    destroyed = true\n  }\n\n  function createInViewList(inView: boolean): number[] {\n    return objectKeys(intersectionEntryMap).reduce(\n      (list: number[], slideIndex) => {\n        const index = parseInt(slideIndex)\n        const { isIntersecting } = intersectionEntryMap[index]\n        const inViewMatch = inView && isIntersecting\n        const notInViewMatch = !inView && !isIntersecting\n\n        if (inViewMatch || notInViewMatch) list.push(index)\n        return list\n      },\n      []\n    )\n  }\n\n  function get(inView: boolean = true): number[] {\n    if (inView && inViewCache) return inViewCache\n    if (!inView && notInViewCache) return notInViewCache\n\n    const slideIndexes = createInViewList(inView)\n\n    if (inView) inViewCache = slideIndexes\n    if (!inView) notInViewCache = slideIndexes\n\n    return slideIndexes\n  }\n\n  const self: SlidesInViewType = {\n    init,\n    destroy,\n    get\n  }\n\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { arrayIsLastIndex, arrayLast, mathAbs, WindowType } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n  startGap: number\n  endGap: number\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n  ownerWindow: WindowType\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = ownerWindow.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(rects, index)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { NodeRectType } from './NodeRects'\nimport {\n  arrayKeys,\n  arrayLast,\n  arrayLastIndex,\n  isNumber,\n  mathAbs\n} from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  slidesToScroll: SlidesToScrollOptionType,\n  loop: boolean,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  startGap: number,\n  endGap: number\n): SlidesToScrollType {\n  const { startEdge, endEdge } = axis\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    if (!array.length) return []\n\n    return arrayKeys(array)\n      .reduce((groups: number[], rectB) => {\n        const rectA = arrayLast(groups) || 0\n        const isFirst = rectA === 0\n        const isLast = rectB === arrayLastIndex(array)\n\n        const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge]\n        const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge]\n        const gapA = !loop && isFirst ? direction.apply(startGap) : 0\n        const gapB = !loop && isLast ? direction.apply(endGap) : 0\n        const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA))\n\n        if (chunkSize > viewSize) groups.push(rectB)\n        if (isLast) groups.push(array.length)\n        return groups\n      }, [])\n      .map((currentSize, index, groups) => {\n        const previousSize = Math.max(groups[index - 1] || 0)\n        return array.slice(previousSize, currentSize)\n      })\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { NodeRectType, NodeRects } from './NodeRects'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ResizeHandler, ResizeHandlerType } from './ResizeHandler'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { SlideRegistry, SlideRegistryType } from './SlideRegistry'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideFocus, SlideFocusType } from './SlideFocus'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesHandler, SlidesHandlerType } from './SlidesHandler'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex, WindowType } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport {\n  AnimationType,\n  AnimationUpdateType,\n  AnimationsType,\n  AnimationRenderType\n} from './Animations'\n\nexport type EngineType = {\n  ownerDocument: Document\n  ownerWindow: WindowType\n  eventHandler: EventHandlerType\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  offsetLocation: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  resizeHandler: ResizeHandlerType\n  slidesHandler: SlidesHandlerType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnapList: number[]\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  slideFocus: SlideFocusType\n  slideRegistry: SlideRegistryType['slideRegistry']\n  containerRect: NodeRectType\n  slideRects: NodeRectType[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  options: OptionsType,\n  eventHandler: EventHandlerType,\n  animations: AnimationsType\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag\n  } = options\n\n  // Measurements\n  const nodeRects = NodeRects()\n  const containerRect = nodeRects.measure(container)\n  const slideRects = slides.map(nodeRects.measure)\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && !!containScroll\n  const readEdgeGap = loop || !!containScroll\n  const { slideSizes, slideSizesWithGaps, startGap, endGap } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n    ownerWindow\n  )\n  const slidesToScroll = SlidesToScroll(\n    axis,\n    direction,\n    viewSize,\n    groupSlides,\n    loop,\n    containerRect,\n    slideRects,\n    startGap,\n    endGap\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slidesToScroll\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained, scrollContainLimit } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Animation\n  const update: AnimationUpdateType = ({\n    dragHandler,\n    scrollBody,\n    scrollBounds,\n    options: { loop }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown())\n    scrollBody.seek()\n  }\n\n  const render: AnimationRenderType = (\n    {\n      scrollBody,\n      translate,\n      location,\n      offsetLocation,\n      scrollLooper,\n      slideLooper,\n      dragHandler,\n      animation,\n      eventHandler,\n      options: { loop }\n    },\n    lagOffset\n  ) => {\n    const velocity = scrollBody.velocity()\n    const hasSettled = scrollBody.settled()\n\n    if (hasSettled && !dragHandler.pointerDown()) {\n      animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!hasSettled) eventHandler.emit('scroll')\n\n    offsetLocation.set(location.get() - velocity + velocity * lagOffset)\n\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction())\n      slideLooper.loop()\n    }\n\n    translate.to(offsetLocation.get())\n  }\n\n  const animation: AnimationType = {\n    start: () => animations.start(engine),\n    stop: () => animations.stop(engine),\n    update: () => update(engine),\n    render: (lagOffset: number) => render(engine, lagOffset)\n  }\n\n  // Shared\n  const friction = 0.68\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const offsetLocation = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(\n    location,\n    offsetLocation,\n    target,\n    duration,\n    friction\n  )\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    eventHandler\n  )\n  const scrollProgress = ScrollProgress(limit)\n  const eventStore = EventStore()\n  const slidesInView = SlidesInView(\n    container,\n    slides,\n    eventHandler,\n    inViewThreshold\n  )\n  const { slideRegistry } = SlideRegistry(\n    viewSize,\n    contentSize,\n    containSnaps,\n    containScroll,\n    scrollContainLimit,\n    slidesToScroll,\n    slideIndexes\n  )\n  const slideFocus = SlideFocus(\n    root,\n    slides,\n    slideRegistry,\n    scrollTo,\n    scrollBody,\n    eventStore\n  )\n\n  // Engine\n  const engine: EngineType = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler: DragHandler(\n      axis,\n      direction,\n      root,\n      ownerDocument,\n      ownerWindow,\n      target,\n      DragTracker(axis, ownerWindow),\n      location,\n      animation,\n      scrollTo,\n      scrollBody,\n      scrollTarget,\n      index,\n      eventHandler,\n      percentOfView,\n      dragFree,\n      dragThreshold,\n      skipSnaps,\n      friction,\n      watchDrag\n    ),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    options,\n    resizeHandler: ResizeHandler(\n      container,\n      eventHandler,\n      ownerWindow,\n      slides,\n      axis,\n      watchResize,\n      nodeRects\n    ),\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      location,\n      target,\n      scrollBody,\n      percentOfView\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [\n      location,\n      offsetLocation,\n      target\n    ]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      direction,\n      viewSize,\n      contentSize,\n      slideSizes,\n      slideSizesWithGaps,\n      snaps,\n      scrollSnaps,\n      offsetLocation,\n      slides\n    ),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, direction, container)\n  }\n\n  return engine\n}\n","import { EngineType } from './Engine'\nimport { mathAbs, WindowType } from './utils'\n\nexport type AnimationUpdateType = (engine: EngineType) => void\nexport type AnimationRenderType = (\n  engine: EngineType,\n  lagFactor: number\n) => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  update: () => void\n  render: (lagFactor: number) => void\n}\n\nexport type AnimationsType = {\n  start: (engine: EngineType) => void\n  stop: (engine: EngineType) => void\n  reset: () => void\n  window: WindowType\n}\n\nexport function Animations(ownerWindow: WindowType): AnimationsType {\n  const timeStep = 1000 / 60\n  let engines: EngineType[] = []\n  let lastTimeStamp: number | null = null\n  let lag = 0\n  let animationFrame = 0\n\n  function animate(timeStamp: DOMHighResTimeStamp): void {\n    if (!lastTimeStamp) lastTimeStamp = timeStamp\n\n    const elapsed = timeStamp - lastTimeStamp\n    lastTimeStamp = timeStamp\n    lag += elapsed\n\n    while (lag >= timeStep) {\n      engines.forEach(({ animation }) => animation.update())\n      lag -= timeStep\n    }\n\n    const lagOffset = mathAbs(lag / timeStep)\n    engines.forEach(({ animation }) => animation.render(lagOffset))\n\n    if (animationFrame) ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function start(engine: EngineType): void {\n    if (!engines.includes(engine)) engines.push(engine)\n    if (animationFrame) return\n\n    animationFrame = ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function stop(engine: EngineType): void {\n    engines = engines.filter((e) => e !== engine)\n    if (engines.length) return\n\n    ownerWindow.cancelAnimationFrame(animationFrame)\n    lastTimeStamp = null\n    lag = 0\n    animationFrame = 0\n  }\n\n  function reset(): void {\n    lastTimeStamp = null\n    lag = 0\n  }\n\n  const self: AnimationsType = {\n    start,\n    stop,\n    reset,\n    window: ownerWindow\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\n\ntype CallbackType = (emblaApi: EmblaCarouselType, evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType = EmblaEventListType[keyof EmblaEventListType]\n\nexport interface EmblaEventListType {\n  init: 'init'\n  pointerDown: 'pointerDown'\n  pointerUp: 'pointerUp'\n  slidesChanged: 'slidesChanged'\n  slidesInView: 'slidesInView'\n  scroll: 'scroll'\n  select: 'select'\n  settle: 'settle'\n  destroy: 'destroy'\n  reInit: 'reInit'\n  resize: 'resize'\n}\n\nexport type EventHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n}\n\nexport function EventHandler(): EventHandlerType {\n  const listeners: ListenersType = {}\n  let api: EmblaCarouselType\n\n  function init(emblaApi: EmblaCarouselType): void {\n    api = emblaApi\n  }\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(api, evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventHandlerType = {\n    init,\n    emit,\n    off,\n    on\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { DragHandlerOptionType } from './DragHandler'\nimport { ResizeHandlerOptionType } from './ResizeHandler'\nimport { SlidesHandlerOptionType } from './SlidesHandler'\nimport { SlidesInViewOptionsType } from './SlidesInView'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  dragThreshold: number\n  inViewThreshold: SlidesInViewOptionsType\n  loop: boolean\n  skipSnaps: boolean\n  duration: number\n  startIndex: number\n  watchDrag: DragHandlerOptionType\n  watchResize: ResizeHandlerOptionType\n  watchSlides: SlidesHandlerOptionType\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsMergeDeep, WindowType } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  mergeOptions: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ) => TypeA\n  optionsAtMedia: <Type extends OptionsType>(options: Type) => Type\n  optionsMediaQueries: (optionsList: OptionsType[]) => MediaQueryList[]\n}\n\nexport function OptionsHandler(ownerWindow: WindowType): OptionsHandlerType {\n  function mergeOptions<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function optionsAtMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => ownerWindow.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => mergeOptions(a, mediaOption), {})\n\n    return mergeOptions(options, matchedMediaOptions)\n  }\n\n  function optionsMediaQueries(optionsList: OptionsType[]): MediaQueryList[] {\n    return optionsList\n      .map((options) => objectKeys(options.breakpoints || {}))\n      .reduce((acc, mediaQueries) => acc.concat(mediaQueries), [])\n      .map(ownerWindow.matchMedia)\n  }\n\n  const self: OptionsHandlerType = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { OptionsHandlerType } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type PluginsHandlerType = {\n  init: (\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ) => EmblaPluginsType\n  destroy: () => void\n}\n\nexport function PluginsHandler(\n  optionsHandler: OptionsHandlerType\n): PluginsHandlerType {\n  let activePlugins: EmblaPluginType[] = []\n\n  function init(\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ): EmblaPluginsType {\n    activePlugins = plugins.filter(\n      ({ options }) => optionsHandler.optionsAtMedia(options).active !== false\n    )\n    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler))\n\n    return plugins.reduce(\n      (map, plugin) => Object.assign(map, { [plugin.name]: plugin }),\n      {}\n    )\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { Animations, AnimationsType } from './Animations'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType, OptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString, WindowType } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  emit: EventHandlerType['emit']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: () => number[]\n  slidesNotInView: () => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[]\n): EmblaCarouselType {\n  const ownerDocument = root.ownerDocument\n  const ownerWindow = <WindowType>ownerDocument.defaultView\n  const optionsHandler = OptionsHandler(ownerWindow)\n  const pluginsHandler = PluginsHandler(optionsHandler)\n  const mediaHandlers = EventStore()\n  const documentVisibleHandler = EventStore()\n  const eventHandler = EventHandler()\n  const { animationRealms } = EmblaCarousel\n  const { mergeOptions, optionsAtMedia, optionsMediaQueries } = optionsHandler\n  const { on, off, emit } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions)\n  let options = mergeOptions(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function createEngine(\n    options: OptionsType,\n    animations: AnimationsType\n  ): EngineType {\n    const engine = Engine(\n      root,\n      container,\n      slides,\n      ownerDocument,\n      ownerWindow,\n      options,\n      eventHandler,\n      animations\n    )\n\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, { loop: false })\n      return createEngine(optionsWithoutLoop, animations)\n    }\n    return engine\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    if (destroyed) return\n\n    const animationRealm = animationRealms.find((a) => a.window === ownerWindow)\n    const animations = animationRealm || Animations(ownerWindow)\n    if (!animationRealm) animationRealms.push(animations)\n\n    optionsBase = mergeOptions(optionsBase, withOptions)\n    options = optionsAtMedia(optionsBase)\n    pluginList = withPlugins || pluginList\n\n    storeElements()\n\n    engine = createEngine(options, animations)\n\n    optionsMediaQueries([\n      optionsBase,\n      ...pluginList.map(({ options }) => options)\n    ]).forEach((query) => mediaHandlers.add(query, 'change', reActivate))\n\n    if (!options.active) return\n\n    engine.translate.to(engine.location.get())\n    engine.slidesInView.init()\n    engine.slideFocus.init()\n    engine.eventHandler.init(self)\n    engine.resizeHandler.init(self)\n    engine.slidesHandler.init(self)\n\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) animations.reset()\n    })\n\n    if (engine.options.loop) engine.slideLooper.loop()\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self)\n\n    pluginApis = pluginsHandler.init(self, pluginList)\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(mergeOptions({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.destroy()\n    engine.animation.stop()\n    engine.eventStore.clear()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    engine.resizeHandler.destroy()\n    engine.slidesHandler.destroy()\n    engine.slidesInView.destroy()\n    pluginsHandler.destroy()\n    mediaHandlers.clear()\n    documentVisibleHandler.clear()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    mediaHandlers.clear()\n    deActivate()\n    eventHandler.emit('destroy')\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody.useBaseFriction().useDuration(jump ? 0 : options.duration)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.add(1).get()\n    scrollTo(next, jump === true, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.add(-1).get()\n    scrollTo(prev, jump === true, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.add(1).get()\n    return next !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.add(-1).get()\n    return prev !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnapList\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function slidesInView(): number[] {\n    return engine.slidesInView.get()\n  }\n\n  function slidesNotInView(): number[] {\n    return engine.slidesInView.get(false)\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  }\n\n  activate(userOptions, userPlugins)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\nEmblaCarousel.animationRealms = <AnimationsType[]>[]\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\n\nexport default EmblaCarousel\n"],"names":["isNumber","subject","isString","isBoolean","isObject","Object","prototype","toString","call","mathAbs","n","Math","abs","mathSign","sign","deltaAbs","valueB","valueA","factorAbs","diff","arrayKeys","array","objectKeys","map","Number","arrayLast","arrayLastIndex","max","length","arrayIsLastIndex","index","arrayFromNumber","startAt","Array","from","_","i","object","keys","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","isMouseEvent","evt","ownerWindow","MouseEvent","Alignment","align","viewSize","predefined","start","center","end","measure","self","Axis","axis","direction","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","nodeRect","width","height","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","loopEnd","counter","withinLimit","get","set","add","clone","Direction","apply","EventStore","listeners","node","type","handler","options","passive","removeListener","addEventListener","removeEventListener","legacyMediaQueryList","addListener","push","clear","filter","remove","DragHandler","rootNode","ownerDocument","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","eventHandler","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","crossAxis","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","init","emblaApi","downIfAllowed","down","preventDefault","undefined","up","click","destroy","addDragEvents","move","isFocusNode","nodeName","includes","forceBoost","boost","allowedForce","force","targetChanged","next","baseForce","byDistance","distance","byIndex","isMouseEvt","button","buttons","pointerDown","useFriction","useDuration","readPoint","emit","lastScroll","lastCross","diffScroll","diffCross","cancelable","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","speed","friction","stopPropagation","DragTracker","logInterval","startEvent","lastEvent","readTime","timeStamp","evtAxis","property","coord","touches","expired","diffDrag","diffTime","isFlick","NodeRects","offsetTop","offsetLeft","offsetWidth","offsetHeight","offset","top","right","bottom","left","PercentOfView","ResizeHandler","container","slides","watchResize","nodeRects","resizeObserver","containerSize","slideSizes","destroyed","readSize","defaultCallback","entries","entry","isContainer","slideIndex","indexOf","lastSize","newSize","diffSize","requestAnimationFrame","reInit","ResizeObserver","observeNodes","concat","observe","disconnect","ScrollBody","offsetLocation","baseDuration","bodyVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","seek","isInstant","directionDiff","settled","duration","velocity","useBaseDuration","useBaseFriction","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","frictionLimit","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","subtract","toggleActive","active","ScrollContain","contentSize","snapsAligned","containScroll","scrollBounds","snapsBounded","measureBounded","scrollContainLimit","findScrollContainLimit","snapsContained","measureContained","startSnap","endSnap","lastIndexOf","snapAligned","isFirst","isLast","scrollBound","parseFloat","toFixed","slice","ScrollLimit","scrollSnaps","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","ScrollSnaps","alignment","containerRect","slideRects","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","rect","snap","g","SlideRegistry","containSnaps","slideIndexes","slideRegistry","createSlideRegistry","groupedSlideIndexes","doNotContain","group","groups","range","ScrollTarget","targetVector","minDistance","distances","sort","a","b","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","d1","d2","targets","matchingTargets","t","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideFocus","root","eventStore","lastTabPressTime","document","registerTabPress","addSlideFocusEvent","event","code","Date","getTime","slide","focus","nowTime","scrollLeft","findIndex","capture","Vector1D","initialValue","value","normalizeInput","Translate","translate","x","y","containerStyle","style","to","transform","getAttribute","removeAttribute","SlideLooper","slideSizesWithGaps","roundingSafety","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","slidesInGap","gap","remainingGap","findSlideBounds","findLoopPoints","isEndEdge","slideBounds","initial","altered","boundEdge","loopPoint","slideLocation","canLoop","every","otherIndexes","shiftLocation","SlidesHandler","watchSlides","mutationObserver","mutations","mutation","MutationObserver","childList","SlidesInView","threshold","intersectionEntryMap","inViewCache","notInViewCache","intersectionObserver","IntersectionObserver","parentElement","createInViewList","inView","list","parseInt","isIntersecting","inViewMatch","notInViewMatch","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","rectB","rectA","edgeA","edgeB","gapA","gapB","chunkSize","currentSize","previousSize","Engine","animations","scrollAxis","contentDirection","startIndex","inViewThreshold","update","dragHandler","render","scrollLooper","slideLooper","lagOffset","hasSettled","stop","engine","startLocation","scrollProgress","slidesInView","slideFocus","resizeHandler","scrollSnapList","slidesHandler","Animations","timeStep","engines","lastTimeStamp","lag","animationFrame","animate","elapsed","e","cancelAnimationFrame","reset","window","EventHandler","api","getListeners","on","cb","off","defaultOptions","breakpoints","OptionsHandler","mergeOptions","optionsA","optionsB","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","optionsMediaQueries","optionsList","acc","mediaQueries","PluginsHandler","optionsHandler","activePlugins","plugins","plugin","assign","name","EmblaCarousel","userOptions","userPlugins","defaultView","pluginsHandler","mediaHandlers","documentVisibleHandler","animationRealms","reActivate","optionsBase","globalOptions","pluginList","pluginApis","storeElements","userContainer","userSlides","customContainer","querySelector","children","customSlides","querySelectorAll","createEngine","optionsWithoutLoop","activate","withOptions","withPlugins","animationRealm","find","query","hidden","offsetParent","selectedScrollSnap","deActivate","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","previousScrollSnap","slidesNotInView","internalEngine","containerNode","slideNodes","setTimeout"],"mappings":"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"}