import { DevServerOptions } from '@hono/vite-dev-server';
import { Plugin } from 'vite';

type Runtime = "node" | "bun" | "cloudflare" | "aws";

type ReactRouterHonoServerPluginOptionsBase = {
    /**
     * The path to the server file, relative to `vite.config.ts`.
     *
     * If it is a folder (`app/server`), it will look for an `index.ts` file.
     *
     * Defaults to `${appDirectory}/server[.ts | /index.ts]` if present.
     *
     * Fallback to a virtual module `virtual:react-router-hono-server/server`.`
     */
    serverEntryPoint?: string;
    /**
     * The paths that are not served by the dev-server.
     *
     * Defaults include `appDirectory` content.
     */
    dev?: {
        /**
         * The paths that are not served by the dev-server.
         *
         * Defaults include `appDirectory` content.
         */
        exclude?: DevServerOptions["exclude"];
        /**
         * The name of the export to use for the server.
         *
         * Defaults to `default`.
         */
        export?: DevServerOptions["export"];
    };
};
type ReactRouterHonoServerPluginOptionsDefault = ReactRouterHonoServerPluginOptionsBase & {
    /**
     * The runtime to use for the server.
     *
     * Defaults to `node`.
     */
    runtime?: Runtime;
};
type ReactRouterHonoServerPluginOptionsCloudflare = ReactRouterHonoServerPluginOptionsBase & {
    /**
     * The runtime to use for the server.
     *
     * Defaults to `node`.
     */
    runtime: Extract<Runtime, "cloudflare">;
    flag?: {
        force_react_19?: boolean;
    };
};
type ReactRouterHonoServerPluginOptions = ReactRouterHonoServerPluginOptionsDefault | ReactRouterHonoServerPluginOptionsCloudflare;
declare function reactRouterHonoServer(options?: ReactRouterHonoServerPluginOptions): Plugin;

export { reactRouterHonoServer };
