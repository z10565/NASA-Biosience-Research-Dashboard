import * as hono_types from 'hono/types';
import { BlankEnv } from 'hono/types';
import { Env, Hono } from 'hono';
import { H as HonoServerOptionsBase, W as WithoutWebsocket } from '../helpers-BcJiNpMs.js';
export { c as createGetLoadContext } from '../helpers-BcJiNpMs.js';
import 'hono/ws';
import 'react-router';

interface HonoCloudflareOptions<E extends Env = BlankEnv> extends Omit<HonoServerOptionsBase<E>, "port"> {
}
type HonoServerOptions<E extends Env = BlankEnv> = HonoCloudflareOptions<E> & Omit<WithoutWebsocket<E>, "useWebSocket">;
/**
 * Create a Hono server
 *
 * @param config {@link HonoServerOptions} - The configuration options for the server
 */
declare function createHonoServer<E extends Env = BlankEnv>(options?: HonoServerOptions<E>): Promise<Hono<E, hono_types.BlankSchema, "/">>;

export { type HonoServerOptions, createHonoServer };
