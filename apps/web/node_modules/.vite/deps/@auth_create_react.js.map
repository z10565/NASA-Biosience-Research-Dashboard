{
  "version": 3,
  "sources": ["../../@hono/auth-js/dist/react.js"],
  "sourcesContent": ["// src/react.tsx\nimport * as React from \"react\";\nimport { useCallback, useContext, useEffect as useEffect2, useMemo, useState as useState3 } from \"react\";\n\n// src/client.ts\nimport { AuthError } from \"@auth/core/errors\";\nimport { useEffect, useState } from \"react\";\nvar ClientFetchError = class extends AuthError {\n};\nvar ClientSessionError = class extends AuthError {\n};\nasync function fetchData(path, config, logger2, req = {}) {\n  const url = `${config.baseUrl}${config.basePath}/${path}`;\n  try {\n    const options = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...req?.headers?.cookie ? { cookie: req.headers.cookie } : {}\n      },\n      credentials: config.credentials\n    };\n    if (req?.body) {\n      options.body = JSON.stringify(req.body);\n      options.method = \"POST\";\n    }\n    const res = await fetch(url, options);\n    const data = await res.json();\n    if (!res.ok) {\n      throw data;\n    }\n    return data;\n  } catch (error) {\n    logger2.error(new ClientFetchError(error.message, error));\n    return null;\n  }\n}\nfunction useOnline() {\n  const [isOnline, setIsOnline] = useState(\n    typeof navigator !== \"undefined\" ? navigator.onLine : false\n  );\n  useEffect(() => {\n    const abortController = new AbortController();\n    const { signal } = abortController;\n    const setOnline = () => {\n      setIsOnline(true);\n    };\n    const setOffline = () => {\n      setIsOnline(false);\n    };\n    window.addEventListener(\"online\", setOnline, { signal });\n    window.addEventListener(\"offline\", setOffline, { signal });\n    return () => {\n      abortController.abort();\n    };\n  }, []);\n  return isOnline;\n}\nfunction now() {\n  return Math.floor(Date.now() / 1e3);\n}\nfunction parseUrl(url) {\n  const defaultUrl = \"http://localhost:3000/api/auth\";\n  const parsedUrl = new URL(url ? url.startsWith(\"http\") ? url : `https://${url}` : defaultUrl);\n  const path = parsedUrl.pathname === \"/\" ? \"/api/auth\" : parsedUrl.pathname.replace(/\\/$/, \"\");\n  const base = `${parsedUrl.origin}${path}`;\n  return {\n    origin: parsedUrl.origin,\n    host: parsedUrl.host,\n    path,\n    base,\n    toString: () => base\n  };\n}\n\n// src/react.tsx\nvar logger = {\n  debug: console.debug,\n  error: console.error,\n  warn: console.warn\n};\nvar AuthConfigManager = class _AuthConfigManager {\n  static instance = null;\n  config;\n  constructor() {\n    this.config = this.createDefaultConfig();\n  }\n  createDefaultConfig() {\n    return {\n      baseUrl: typeof window !== \"undefined\" ? parseUrl(window.location.origin).origin : \"\",\n      basePath: typeof window !== \"undefined\" ? parseUrl(window.location.origin).path : \"/api/auth\",\n      credentials: \"same-origin\",\n      lastSync: 0,\n      session: null,\n      fetchSession: async () => void 0\n    };\n  }\n  static getInstance() {\n    if (!_AuthConfigManager.instance) {\n      _AuthConfigManager.instance = new _AuthConfigManager();\n    }\n    return _AuthConfigManager.instance;\n  }\n  setConfig(userConfig) {\n    this.config = { ...this.config, ...userConfig };\n  }\n  getConfig() {\n    return this.config;\n  }\n  initializeConfig(hasInitialSession) {\n    this.config.lastSync = hasInitialSession ? now() : 0;\n  }\n};\nvar authConfigManager = AuthConfigManager.getInstance();\nvar SessionContext = React.createContext(void 0);\nfunction useInitializeSession(hasInitialSession, initialSession) {\n  const authConfig = authConfigManager.getConfig();\n  const [session, setSession] = React.useState(initialSession);\n  const [loading, setLoading] = React.useState(!hasInitialSession);\n  useEffect2(() => {\n    authConfig.fetchSession = async ({ event } = {}) => {\n      try {\n        const isStorageEvent = event === \"storage\";\n        if (isStorageEvent || !authConfig.session) {\n          authConfig.lastSync = now();\n          authConfig.session = await getSession();\n          setSession(authConfig.session);\n          return;\n        }\n        if (!event || !authConfig.session || now() < authConfig.lastSync) {\n          return;\n        }\n        authConfig.lastSync = now();\n        authConfig.session = await getSession();\n        setSession(authConfig.session);\n      } catch (error) {\n        logger.error(new ClientSessionError(error.message, error));\n      } finally {\n        setLoading(false);\n      }\n    };\n    authConfig.fetchSession();\n    return () => {\n      authConfig.lastSync = 0;\n      authConfig.session = null;\n      authConfig.fetchSession = async () => void 0;\n    };\n  }, []);\n  return { session, setSession, loading, setLoading };\n}\nfunction useVisibilityChangeEventListener(authConfig, refetchOnWindowFocus) {\n  useEffect2(() => {\n    const abortController = new AbortController();\n    const handleVisibilityChange = () => {\n      if (refetchOnWindowFocus && document.visibilityState === \"visible\") {\n        authConfig.fetchSession({ event: \"visibilitychange\" });\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange, {\n      signal: abortController.signal\n    });\n    return () => {\n      abortController.abort();\n    };\n  }, [refetchOnWindowFocus]);\n}\nfunction useRefetchInterval(authConfig, refetchInterval, shouldRefetch) {\n  useEffect2(() => {\n    if (refetchInterval && shouldRefetch) {\n      const intervalId = setInterval(() => {\n        if (authConfig.session) {\n          authConfig.fetchSession({ event: \"poll\" });\n        }\n      }, refetchInterval * 1e3);\n      return () => {\n        clearInterval(intervalId);\n      };\n    }\n  }, [refetchInterval, shouldRefetch]);\n}\nasync function getSession(params) {\n  const { baseUrl, basePath, credentials } = authConfigManager.getConfig();\n  const session = await fetchData(\n    \"session\",\n    {\n      baseUrl,\n      basePath,\n      credentials\n    },\n    logger,\n    params\n  );\n  return session;\n}\nasync function getCsrfToken() {\n  const { baseUrl, basePath, credentials } = authConfigManager.getConfig();\n  const response = await fetchData(\n    \"csrf\",\n    {\n      baseUrl,\n      basePath,\n      credentials\n    },\n    logger\n  );\n  return response?.csrfToken ?? \"\";\n}\nfunction SessionProvider(props) {\n  if (!SessionContext) {\n    throw new Error(\"React Context is unavailable in Server Components\");\n  }\n  const { children, refetchInterval, refetchWhenOffline = true } = props;\n  const authConfig = authConfigManager.getConfig();\n  const hasInitialSession = !!props.session;\n  authConfigManager.initializeConfig(hasInitialSession);\n  const { session, setSession, loading, setLoading } = useInitializeSession(\n    hasInitialSession,\n    props.session ?? null\n  );\n  useVisibilityChangeEventListener(authConfig, props.refetchOnWindowFocus ?? true);\n  const isOnline = useOnline();\n  const shouldRefetch = refetchWhenOffline || isOnline;\n  useRefetchInterval(authConfig, refetchInterval, shouldRefetch);\n  const contextValue = useMemo(\n    () => ({\n      data: session,\n      status: loading ? \"loading\" : session ? \"authenticated\" : \"unauthenticated\",\n      update: async (data) => {\n        if (loading || !session) {\n          return;\n        }\n        setLoading(true);\n        const updatedSession = await fetchData(\n          \"session\",\n          authConfig,\n          logger,\n          data ? { body: { csrfToken: await getCsrfToken(), data } } : void 0\n        );\n        setLoading(false);\n        if (updatedSession) {\n          setSession(updatedSession);\n        }\n        return updatedSession;\n      }\n    }),\n    [session, loading, setSession]\n  );\n  return /* @__PURE__ */ React.createElement(SessionContext.Provider, { value: contextValue }, children);\n}\nfunction useSession(options) {\n  if (!SessionContext) {\n    throw new Error(\"React Context is unavailable in Server Components\");\n  }\n  const config = authConfigManager.getConfig();\n  const session = useContext(SessionContext);\n  const { required, onUnauthenticated } = options ?? {};\n  const requiredAndNotLoading = required && session?.status === \"unauthenticated\";\n  useEffect2(() => {\n    if (requiredAndNotLoading) {\n      const url = `${config.baseUrl}${config.basePath}/signin?${new URLSearchParams({\n        error: \"SessionRequired\",\n        callbackUrl: window.location.href\n      })}`;\n      if (onUnauthenticated) {\n        onUnauthenticated();\n      } else {\n        window.location.href = url;\n      }\n    }\n  }, [requiredAndNotLoading, onUnauthenticated]);\n  if (requiredAndNotLoading) {\n    return {\n      data: session?.data,\n      update: session?.update,\n      status: \"loading\"\n    };\n  }\n  return session;\n}\nasync function getProviders() {\n  return fetchData(\"providers\", authConfigManager.getConfig(), logger);\n}\nasync function signIn(provider, options = {}, authorizationParams = {}) {\n  const { callbackUrl = window.location.href, redirect = true, ...opts } = options;\n  const config = authConfigManager.getConfig();\n  const href = `${config.baseUrl}${config.basePath}`;\n  const providers = await getProviders();\n  if (!providers) {\n    window.location.href = `${href}/error`;\n    return;\n  }\n  if (!provider || !(provider in providers)) {\n    window.location.href = `${href}/signin?${new URLSearchParams({ callbackUrl })}`;\n    return;\n  }\n  const isCredentials = providers[provider].type === \"credentials\";\n  const isEmail = providers[provider].type === \"email\";\n  const signInUrl = `${href}/${isCredentials ? \"callback\" : \"signin\"}/${provider}`;\n  const csrfToken = await getCsrfToken();\n  const res = await fetch(`${signInUrl}?${new URLSearchParams(authorizationParams)}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"X-Auth-Return-Redirect\": \"1\"\n    },\n    body: new URLSearchParams({ ...opts, csrfToken, callbackUrl }),\n    credentials: config.credentials\n  });\n  const data = await res.json();\n  if (redirect) {\n    const url = data.url ?? callbackUrl;\n    window.location.href = url;\n    if (url.includes(\"#\")) {\n      window.location.reload();\n    }\n    return;\n  }\n  const error = new URL(data.url).searchParams.get(\"error\");\n  if (res.ok) {\n    await config.fetchSession?.({ event: \"storage\" });\n  }\n  return {\n    error,\n    status: res.status,\n    ok: res.ok,\n    url: error ? null : data.url\n  };\n}\nasync function signOut(options) {\n  const { callbackUrl = window.location.href, redirect = true } = options ?? {};\n  const config = authConfigManager.getConfig();\n  const csrfToken = await getCsrfToken();\n  const res = await fetch(`${config.baseUrl}${config.basePath}/signout`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"X-Auth-Return-Redirect\": \"1\"\n    },\n    body: new URLSearchParams({ csrfToken, callbackUrl }),\n    credentials: config.credentials\n  });\n  const data = await res.json();\n  if (redirect) {\n    const url = data.url ?? callbackUrl;\n    window.location.href = url;\n    if (url.includes(\"#\")) {\n      window.location.reload();\n    }\n    return void 0;\n  }\n  await config.fetchSession?.({ event: \"storage\" });\n  return data;\n}\nvar createPopup = ({ url, title, height, width }) => {\n  const left = window.screenX + (window.outerWidth - width) / 2;\n  const top = window.screenY + (window.outerHeight - height) / 2.5;\n  const externalPopup = window.open(\n    url,\n    title,\n    `width=${width},height=${height},left=${left},top=${top}`\n  );\n  return externalPopup;\n};\nvar useOauthPopupLogin = (provider, options = {}) => {\n  const { width = 500, height = 500, title = \"Signin\", onSuccess, callbackUrl = \"/\" } = options;\n  const [externalWindow, setExternalWindow] = useState3();\n  const [state, setState] = useState3({ status: \"loading\" });\n  const popUpSignin = useCallback(async () => {\n    const res = await signIn(provider, {\n      redirect: false,\n      callbackUrl\n    });\n    if (res?.error) {\n      setState({ status: \"errored\", error: res.error });\n      return;\n    }\n    setExternalWindow(\n      createPopup({\n        url: res?.url,\n        title,\n        width,\n        height\n      })\n    );\n  }, []);\n  useEffect2(() => {\n    const handleMessage = (event) => {\n      if (event.origin !== window.location.origin) {\n        return;\n      }\n      if (event.data.status) {\n        setState(event.data);\n        if (event.data.status === \"success\") {\n          onSuccess?.();\n        }\n        externalWindow?.close();\n      }\n    };\n    window.addEventListener(\"message\", handleMessage);\n    return () => {\n      window.removeEventListener(\"message\", handleMessage);\n      externalWindow?.close();\n    };\n  }, [externalWindow]);\n  return { popUpSignin, ...state };\n};\nexport {\n  SessionContext,\n  SessionProvider,\n  authConfigManager,\n  getCsrfToken,\n  getProviders,\n  getSession,\n  signIn,\n  signOut,\n  useOauthPopupLogin,\n  useSession\n};\n"],
  "mappings": ";;;;;;;;;AACA,YAAuB;AACvB,mBAAiG;AAIjG,IAAAA,gBAAoC;AADpC,SAAS,iBAAiB;AAE1B,IAAI,mBAAmB,cAAc,UAAU;AAC/C;AACA,IAAI,qBAAqB,cAAc,UAAU;AACjD;AACA,eAAe,UAAU,MAAM,QAAQ,SAAS,MAAM,CAAC,GAAG;AAX1D,MAAAC;AAYE,QAAM,MAAM,GAAG,OAAO,OAAO,GAAG,OAAO,QAAQ,IAAI,IAAI;AACvD,MAAI;AACF,UAAM,UAAU;AAAA,MACd,SAAS;AAAA,QACP,gBAAgB;AAAA,QAChB,KAAGA,MAAA,2BAAK,YAAL,gBAAAA,IAAc,UAAS,EAAE,QAAQ,IAAI,QAAQ,OAAO,IAAI,CAAC;AAAA,MAC9D;AAAA,MACA,aAAa,OAAO;AAAA,IACtB;AACA,QAAI,2BAAK,MAAM;AACb,cAAQ,OAAO,KAAK,UAAU,IAAI,IAAI;AACtC,cAAQ,SAAS;AAAA,IACnB;AACA,UAAM,MAAM,MAAM,MAAM,KAAK,OAAO;AACpC,UAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,QAAI,CAAC,IAAI,IAAI;AACX,YAAM;AAAA,IACR;AACA,WAAO;AAAA,EACT,SAAS,OAAO;AACd,YAAQ,MAAM,IAAI,iBAAiB,MAAM,SAAS,KAAK,CAAC;AACxD,WAAO;AAAA,EACT;AACF;AACA,SAAS,YAAY;AACnB,QAAM,CAAC,UAAU,WAAW,QAAI;AAAA,IAC9B,OAAO,cAAc,cAAc,UAAU,SAAS;AAAA,EACxD;AACA,+BAAU,MAAM;AACd,UAAM,kBAAkB,IAAI,gBAAgB;AAC5C,UAAM,EAAE,OAAO,IAAI;AACnB,UAAM,YAAY,MAAM;AACtB,kBAAY,IAAI;AAAA,IAClB;AACA,UAAM,aAAa,MAAM;AACvB,kBAAY,KAAK;AAAA,IACnB;AACA,WAAO,iBAAiB,UAAU,WAAW,EAAE,OAAO,CAAC;AACvD,WAAO,iBAAiB,WAAW,YAAY,EAAE,OAAO,CAAC;AACzD,WAAO,MAAM;AACX,sBAAgB,MAAM;AAAA,IACxB;AAAA,EACF,GAAG,CAAC,CAAC;AACL,SAAO;AACT;AACA,SAAS,MAAM;AACb,SAAO,KAAK,MAAM,KAAK,IAAI,IAAI,GAAG;AACpC;AACA,SAAS,SAAS,KAAK;AACrB,QAAM,aAAa;AACnB,QAAM,YAAY,IAAI,IAAI,MAAM,IAAI,WAAW,MAAM,IAAI,MAAM,WAAW,GAAG,KAAK,UAAU;AAC5F,QAAM,OAAO,UAAU,aAAa,MAAM,cAAc,UAAU,SAAS,QAAQ,OAAO,EAAE;AAC5F,QAAM,OAAO,GAAG,UAAU,MAAM,GAAG,IAAI;AACvC,SAAO;AAAA,IACL,QAAQ,UAAU;AAAA,IAClB,MAAM,UAAU;AAAA,IAChB;AAAA,IACA;AAAA,IACA,UAAU,MAAM;AAAA,EAClB;AACF;AAGA,IAAI,SAAS;AAAA,EACX,OAAO,QAAQ;AAAA,EACf,OAAO,QAAQ;AAAA,EACf,MAAM,QAAQ;AAChB;AA/EA;AAgFA,IAAI,qBAAoB,WAAyB;AAAA,EAG/C,cAAc;AADd;AAEE,SAAK,SAAS,KAAK,oBAAoB;AAAA,EACzC;AAAA,EACA,sBAAsB;AACpB,WAAO;AAAA,MACL,SAAS,OAAO,WAAW,cAAc,SAAS,OAAO,SAAS,MAAM,EAAE,SAAS;AAAA,MACnF,UAAU,OAAO,WAAW,cAAc,SAAS,OAAO,SAAS,MAAM,EAAE,OAAO;AAAA,MAClF,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,MACT,cAAc,YAAY;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,OAAO,cAAc;AACnB,QAAI,CAAC,GAAmB,UAAU;AAChC,SAAmB,WAAW,IAAI,GAAmB;AAAA,IACvD;AACA,WAAO,GAAmB;AAAA,EAC5B;AAAA,EACA,UAAU,YAAY;AACpB,SAAK,SAAS,EAAE,GAAG,KAAK,QAAQ,GAAG,WAAW;AAAA,EAChD;AAAA,EACA,YAAY;AACV,WAAO,KAAK;AAAA,EACd;AAAA,EACA,iBAAiB,mBAAmB;AAClC,SAAK,OAAO,WAAW,oBAAoB,IAAI,IAAI;AAAA,EACrD;AACF,GA9BE,cADsB,IACf,YAAW,OADI;AAgCxB,IAAI,oBAAoB,kBAAkB,YAAY;AACtD,IAAI,iBAAuB,oBAAc,MAAM;AAC/C,SAAS,qBAAqB,mBAAmB,gBAAgB;AAC/D,QAAM,aAAa,kBAAkB,UAAU;AAC/C,QAAM,CAAC,SAAS,UAAU,IAAU,eAAS,cAAc;AAC3D,QAAM,CAAC,SAAS,UAAU,IAAU,eAAS,CAAC,iBAAiB;AAC/D,mBAAAC,WAAW,MAAM;AACf,eAAW,eAAe,OAAO,EAAE,MAAM,IAAI,CAAC,MAAM;AAClD,UAAI;AACF,cAAM,iBAAiB,UAAU;AACjC,YAAI,kBAAkB,CAAC,WAAW,SAAS;AACzC,qBAAW,WAAW,IAAI;AAC1B,qBAAW,UAAU,MAAM,WAAW;AACtC,qBAAW,WAAW,OAAO;AAC7B;AAAA,QACF;AACA,YAAI,CAAC,SAAS,CAAC,WAAW,WAAW,IAAI,IAAI,WAAW,UAAU;AAChE;AAAA,QACF;AACA,mBAAW,WAAW,IAAI;AAC1B,mBAAW,UAAU,MAAM,WAAW;AACtC,mBAAW,WAAW,OAAO;AAAA,MAC/B,SAAS,OAAO;AACd,eAAO,MAAM,IAAI,mBAAmB,MAAM,SAAS,KAAK,CAAC;AAAA,MAC3D,UAAE;AACA,mBAAW,KAAK;AAAA,MAClB;AAAA,IACF;AACA,eAAW,aAAa;AACxB,WAAO,MAAM;AACX,iBAAW,WAAW;AACtB,iBAAW,UAAU;AACrB,iBAAW,eAAe,YAAY;AAAA,IACxC;AAAA,EACF,GAAG,CAAC,CAAC;AACL,SAAO,EAAE,SAAS,YAAY,SAAS,WAAW;AACpD;AACA,SAAS,iCAAiC,YAAY,sBAAsB;AAC1E,mBAAAA,WAAW,MAAM;AACf,UAAM,kBAAkB,IAAI,gBAAgB;AAC5C,UAAM,yBAAyB,MAAM;AACnC,UAAI,wBAAwB,SAAS,oBAAoB,WAAW;AAClE,mBAAW,aAAa,EAAE,OAAO,mBAAmB,CAAC;AAAA,MACvD;AAAA,IACF;AACA,aAAS,iBAAiB,oBAAoB,wBAAwB;AAAA,MACpE,QAAQ,gBAAgB;AAAA,IAC1B,CAAC;AACD,WAAO,MAAM;AACX,sBAAgB,MAAM;AAAA,IACxB;AAAA,EACF,GAAG,CAAC,oBAAoB,CAAC;AAC3B;AACA,SAAS,mBAAmB,YAAY,iBAAiB,eAAe;AACtE,mBAAAA,WAAW,MAAM;AACf,QAAI,mBAAmB,eAAe;AACpC,YAAM,aAAa,YAAY,MAAM;AACnC,YAAI,WAAW,SAAS;AACtB,qBAAW,aAAa,EAAE,OAAO,OAAO,CAAC;AAAA,QAC3C;AAAA,MACF,GAAG,kBAAkB,GAAG;AACxB,aAAO,MAAM;AACX,sBAAc,UAAU;AAAA,MAC1B;AAAA,IACF;AAAA,EACF,GAAG,CAAC,iBAAiB,aAAa,CAAC;AACrC;AACA,eAAe,WAAW,QAAQ;AAChC,QAAM,EAAE,SAAS,UAAU,YAAY,IAAI,kBAAkB,UAAU;AACvE,QAAM,UAAU,MAAM;AAAA,IACpB;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;AACA,eAAe,eAAe;AAC5B,QAAM,EAAE,SAAS,UAAU,YAAY,IAAI,kBAAkB,UAAU;AACvE,QAAM,WAAW,MAAM;AAAA,IACrB;AAAA,IACA;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,IACA;AAAA,EACF;AACA,UAAO,qCAAU,cAAa;AAChC;AACA,SAAS,gBAAgB,OAAO;AAC9B,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,MAAM,mDAAmD;AAAA,EACrE;AACA,QAAM,EAAE,UAAU,iBAAiB,qBAAqB,KAAK,IAAI;AACjE,QAAM,aAAa,kBAAkB,UAAU;AAC/C,QAAM,oBAAoB,CAAC,CAAC,MAAM;AAClC,oBAAkB,iBAAiB,iBAAiB;AACpD,QAAM,EAAE,SAAS,YAAY,SAAS,WAAW,IAAI;AAAA,IACnD;AAAA,IACA,MAAM,WAAW;AAAA,EACnB;AACA,mCAAiC,YAAY,MAAM,wBAAwB,IAAI;AAC/E,QAAM,WAAW,UAAU;AAC3B,QAAM,gBAAgB,sBAAsB;AAC5C,qBAAmB,YAAY,iBAAiB,aAAa;AAC7D,QAAM,mBAAe;AAAA,IACnB,OAAO;AAAA,MACL,MAAM;AAAA,MACN,QAAQ,UAAU,YAAY,UAAU,kBAAkB;AAAA,MAC1D,QAAQ,OAAO,SAAS;AACtB,YAAI,WAAW,CAAC,SAAS;AACvB;AAAA,QACF;AACA,mBAAW,IAAI;AACf,cAAM,iBAAiB,MAAM;AAAA,UAC3B;AAAA,UACA;AAAA,UACA;AAAA,UACA,OAAO,EAAE,MAAM,EAAE,WAAW,MAAM,aAAa,GAAG,KAAK,EAAE,IAAI;AAAA,QAC/D;AACA,mBAAW,KAAK;AAChB,YAAI,gBAAgB;AAClB,qBAAW,cAAc;AAAA,QAC3B;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,CAAC,SAAS,SAAS,UAAU;AAAA,EAC/B;AACA,SAA6B,oBAAc,eAAe,UAAU,EAAE,OAAO,aAAa,GAAG,QAAQ;AACvG;AACA,SAAS,WAAW,SAAS;AAC3B,MAAI,CAAC,gBAAgB;AACnB,UAAM,IAAI,MAAM,mDAAmD;AAAA,EACrE;AACA,QAAM,SAAS,kBAAkB,UAAU;AAC3C,QAAM,cAAU,yBAAW,cAAc;AACzC,QAAM,EAAE,UAAU,kBAAkB,IAAI,WAAW,CAAC;AACpD,QAAM,wBAAwB,aAAY,mCAAS,YAAW;AAC9D,mBAAAA,WAAW,MAAM;AACf,QAAI,uBAAuB;AACzB,YAAM,MAAM,GAAG,OAAO,OAAO,GAAG,OAAO,QAAQ,WAAW,IAAI,gBAAgB;AAAA,QAC5E,OAAO;AAAA,QACP,aAAa,OAAO,SAAS;AAAA,MAC/B,CAAC,CAAC;AACF,UAAI,mBAAmB;AACrB,0BAAkB;AAAA,MACpB,OAAO;AACL,eAAO,SAAS,OAAO;AAAA,MACzB;AAAA,IACF;AAAA,EACF,GAAG,CAAC,uBAAuB,iBAAiB,CAAC;AAC7C,MAAI,uBAAuB;AACzB,WAAO;AAAA,MACL,MAAM,mCAAS;AAAA,MACf,QAAQ,mCAAS;AAAA,MACjB,QAAQ;AAAA,IACV;AAAA,EACF;AACA,SAAO;AACT;AACA,eAAe,eAAe;AAC5B,SAAO,UAAU,aAAa,kBAAkB,UAAU,GAAG,MAAM;AACrE;AACA,eAAe,OAAO,UAAU,UAAU,CAAC,GAAG,sBAAsB,CAAC,GAAG;AAzRxE,MAAAD;AA0RE,QAAM,EAAE,cAAc,OAAO,SAAS,MAAM,WAAW,MAAM,GAAG,KAAK,IAAI;AACzE,QAAM,SAAS,kBAAkB,UAAU;AAC3C,QAAM,OAAO,GAAG,OAAO,OAAO,GAAG,OAAO,QAAQ;AAChD,QAAM,YAAY,MAAM,aAAa;AACrC,MAAI,CAAC,WAAW;AACd,WAAO,SAAS,OAAO,GAAG,IAAI;AAC9B;AAAA,EACF;AACA,MAAI,CAAC,YAAY,EAAE,YAAY,YAAY;AACzC,WAAO,SAAS,OAAO,GAAG,IAAI,WAAW,IAAI,gBAAgB,EAAE,YAAY,CAAC,CAAC;AAC7E;AAAA,EACF;AACA,QAAM,gBAAgB,UAAU,QAAQ,EAAE,SAAS;AACnD,QAAM,UAAU,UAAU,QAAQ,EAAE,SAAS;AAC7C,QAAM,YAAY,GAAG,IAAI,IAAI,gBAAgB,aAAa,QAAQ,IAAI,QAAQ;AAC9E,QAAM,YAAY,MAAM,aAAa;AACrC,QAAM,MAAM,MAAM,MAAM,GAAG,SAAS,IAAI,IAAI,gBAAgB,mBAAmB,CAAC,IAAI;AAAA,IAClF,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,0BAA0B;AAAA,IAC5B;AAAA,IACA,MAAM,IAAI,gBAAgB,EAAE,GAAG,MAAM,WAAW,YAAY,CAAC;AAAA,IAC7D,aAAa,OAAO;AAAA,EACtB,CAAC;AACD,QAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,MAAI,UAAU;AACZ,UAAM,MAAM,KAAK,OAAO;AACxB,WAAO,SAAS,OAAO;AACvB,QAAI,IAAI,SAAS,GAAG,GAAG;AACrB,aAAO,SAAS,OAAO;AAAA,IACzB;AACA;AAAA,EACF;AACA,QAAM,QAAQ,IAAI,IAAI,KAAK,GAAG,EAAE,aAAa,IAAI,OAAO;AACxD,MAAI,IAAI,IAAI;AACV,YAAMA,MAAA,OAAO,iBAAP,gBAAAA,IAAA,aAAsB,EAAE,OAAO,UAAU;AAAA,EACjD;AACA,SAAO;AAAA,IACL;AAAA,IACA,QAAQ,IAAI;AAAA,IACZ,IAAI,IAAI;AAAA,IACR,KAAK,QAAQ,OAAO,KAAK;AAAA,EAC3B;AACF;AACA,eAAe,QAAQ,SAAS;AAvUhC,MAAAA;AAwUE,QAAM,EAAE,cAAc,OAAO,SAAS,MAAM,WAAW,KAAK,IAAI,WAAW,CAAC;AAC5E,QAAM,SAAS,kBAAkB,UAAU;AAC3C,QAAM,YAAY,MAAM,aAAa;AACrC,QAAM,MAAM,MAAM,MAAM,GAAG,OAAO,OAAO,GAAG,OAAO,QAAQ,YAAY;AAAA,IACrE,QAAQ;AAAA,IACR,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,0BAA0B;AAAA,IAC5B;AAAA,IACA,MAAM,IAAI,gBAAgB,EAAE,WAAW,YAAY,CAAC;AAAA,IACpD,aAAa,OAAO;AAAA,EACtB,CAAC;AACD,QAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,MAAI,UAAU;AACZ,UAAM,MAAM,KAAK,OAAO;AACxB,WAAO,SAAS,OAAO;AACvB,QAAI,IAAI,SAAS,GAAG,GAAG;AACrB,aAAO,SAAS,OAAO;AAAA,IACzB;AACA,WAAO;AAAA,EACT;AACA,UAAMA,MAAA,OAAO,iBAAP,gBAAAA,IAAA,aAAsB,EAAE,OAAO,UAAU;AAC/C,SAAO;AACT;AACA,IAAI,cAAc,CAAC,EAAE,KAAK,OAAO,QAAQ,MAAM,MAAM;AACnD,QAAM,OAAO,OAAO,WAAW,OAAO,aAAa,SAAS;AAC5D,QAAM,MAAM,OAAO,WAAW,OAAO,cAAc,UAAU;AAC7D,QAAM,gBAAgB,OAAO;AAAA,IAC3B;AAAA,IACA;AAAA,IACA,SAAS,KAAK,WAAW,MAAM,SAAS,IAAI,QAAQ,GAAG;AAAA,EACzD;AACA,SAAO;AACT;AACA,IAAI,qBAAqB,CAAC,UAAU,UAAU,CAAC,MAAM;AACnD,QAAM,EAAE,QAAQ,KAAK,SAAS,KAAK,QAAQ,UAAU,WAAW,cAAc,IAAI,IAAI;AACtF,QAAM,CAAC,gBAAgB,iBAAiB,QAAI,aAAAE,UAAU;AACtD,QAAM,CAAC,OAAO,QAAQ,QAAI,aAAAA,UAAU,EAAE,QAAQ,UAAU,CAAC;AACzD,QAAM,kBAAc,0BAAY,YAAY;AAC1C,UAAM,MAAM,MAAM,OAAO,UAAU;AAAA,MACjC,UAAU;AAAA,MACV;AAAA,IACF,CAAC;AACD,QAAI,2BAAK,OAAO;AACd,eAAS,EAAE,QAAQ,WAAW,OAAO,IAAI,MAAM,CAAC;AAChD;AAAA,IACF;AACA;AAAA,MACE,YAAY;AAAA,QACV,KAAK,2BAAK;AAAA,QACV;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,GAAG,CAAC,CAAC;AACL,mBAAAD,WAAW,MAAM;AACf,UAAM,gBAAgB,CAAC,UAAU;AAC/B,UAAI,MAAM,WAAW,OAAO,SAAS,QAAQ;AAC3C;AAAA,MACF;AACA,UAAI,MAAM,KAAK,QAAQ;AACrB,iBAAS,MAAM,IAAI;AACnB,YAAI,MAAM,KAAK,WAAW,WAAW;AACnC;AAAA,QACF;AACA,yDAAgB;AAAA,MAClB;AAAA,IACF;AACA,WAAO,iBAAiB,WAAW,aAAa;AAChD,WAAO,MAAM;AACX,aAAO,oBAAoB,WAAW,aAAa;AACnD,uDAAgB;AAAA,IAClB;AAAA,EACF,GAAG,CAAC,cAAc,CAAC;AACnB,SAAO,EAAE,aAAa,GAAG,MAAM;AACjC;",
  "names": ["import_react", "_a", "useEffect2", "useState3"]
}
