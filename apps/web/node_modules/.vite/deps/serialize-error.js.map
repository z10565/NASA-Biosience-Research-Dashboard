{
  "version": 3,
  "sources": ["../../serialize-error/error-constructors.js", "../../serialize-error/index.js"],
  "sourcesContent": ["const list = [\n\t// Native ES errors https://262.ecma-international.org/12.0/#sec-well-known-intrinsic-objects\n\tError,\n\tEvalError,\n\tRangeError,\n\tReferenceError,\n\tSyntaxError,\n\tTypeError,\n\tURIError,\n\tAggregateError,\n\n\t// Built-in errors\n\tglobalThis.DOMException,\n\n\t// Node-specific errors\n\t// https://nodejs.org/api/errors.html\n\tglobalThis.AssertionError,\n\tglobalThis.SystemError,\n]\n\t// Non-native Errors are used with `globalThis` because they might be missing. This filter drops them when undefined.\n\t.filter(Boolean)\n\t.map(\n\t\tconstructor => [constructor.name, constructor],\n\t);\n\nexport const errorConstructors = new Map(list);\n\nexport function addKnownErrorConstructor(constructor) {\n\tconst {name} = constructor;\n\tif (errorConstructors.has(name)) {\n\t\tthrow new Error(`The error constructor \"${name}\" is already known.`);\n\t}\n\n\ttry {\n\t\t// eslint-disable-next-line no-new -- It just needs to be verified\n\t\tnew constructor();\n\t} catch (error) {\n\t\tthrow new Error(`The error constructor \"${name}\" is not compatible`, {cause: error});\n\t}\n\n\terrorConstructors.set(name, constructor);\n}\n", "import {errorConstructors} from './error-constructors.js';\n\nexport class NonError extends Error {\n\tname = 'NonError';\n\n\tconstructor(message) {\n\t\tsuper(NonError._prepareSuperMessage(message));\n\t}\n\n\tstatic _prepareSuperMessage(message) {\n\t\ttry {\n\t\t\treturn JSON.stringify(message);\n\t\t} catch {\n\t\t\treturn String(message);\n\t\t}\n\t}\n}\n\nconst errorProperties = [\n\t{\n\t\tproperty: 'name',\n\t\tenumerable: false,\n\t},\n\t{\n\t\tproperty: 'message',\n\t\tenumerable: false,\n\t},\n\t{\n\t\tproperty: 'stack',\n\t\tenumerable: false,\n\t},\n\t{\n\t\tproperty: 'code',\n\t\tenumerable: true,\n\t},\n\t{\n\t\tproperty: 'cause',\n\t\tenumerable: false,\n\t},\n\t{\n\t\tproperty: 'errors',\n\t\tenumerable: false,\n\t},\n];\n\nconst toJsonWasCalled = new WeakSet();\n\nconst toJSON = from => {\n\ttoJsonWasCalled.add(from);\n\tconst json = from.toJSON();\n\ttoJsonWasCalled.delete(from);\n\treturn json;\n};\n\nconst newError = name => {\n\tconst ErrorConstructor = errorConstructors.get(name) ?? Error;\n\treturn ErrorConstructor === AggregateError\n\t\t? new ErrorConstructor([])\n\t\t: new ErrorConstructor();\n};\n\n// eslint-disable-next-line complexity\nconst destroyCircular = ({\n\tfrom,\n\tseen,\n\tto,\n\tforceEnumerable,\n\tmaxDepth,\n\tdepth,\n\tuseToJSON,\n\tserialize,\n}) => {\n\tif (!to) {\n\t\tif (Array.isArray(from)) {\n\t\t\tto = [];\n\t\t} else if (!serialize && isErrorLike(from)) {\n\t\t\tto = newError(from.name);\n\t\t} else {\n\t\t\tto = {};\n\t\t}\n\t}\n\n\tseen.push(from);\n\n\tif (depth >= maxDepth) {\n\t\treturn to;\n\t}\n\n\tif (useToJSON && typeof from.toJSON === 'function' && !toJsonWasCalled.has(from)) {\n\t\treturn toJSON(from);\n\t}\n\n\tconst continueDestroyCircular = value => destroyCircular({\n\t\tfrom: value,\n\t\tseen: [...seen],\n\t\tforceEnumerable,\n\t\tmaxDepth,\n\t\tdepth,\n\t\tuseToJSON,\n\t\tserialize,\n\t});\n\n\tfor (const [key, value] of Object.entries(from)) {\n\t\tif (value && value instanceof Uint8Array && value.constructor.name === 'Buffer') {\n\t\t\tto[key] = '[object Buffer]';\n\t\t\tcontinue;\n\t\t}\n\n\t\t// TODO: Use `stream.isReadable()` when targeting Node.js 18.\n\t\tif (value !== null && typeof value === 'object' && typeof value.pipe === 'function') {\n\t\t\tto[key] = '[object Stream]';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (typeof value === 'function') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\t// Gracefully handle non-configurable errors like `DOMException`.\n\t\t\ttry {\n\t\t\t\tto[key] = value;\n\t\t\t} catch {}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!seen.includes(from[key])) {\n\t\t\tdepth++;\n\t\t\tto[key] = continueDestroyCircular(from[key]);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tto[key] = '[Circular]';\n\t}\n\n\tif (serialize || to instanceof Error) {\n\t\tfor (const {property, enumerable} of errorProperties) {\n\t\t\tif (from[property] !== undefined && from[property] !== null) {\n\t\t\t\tObject.defineProperty(to, property, {\n\t\t\t\t\tvalue: isErrorLike(from[property]) || Array.isArray(from[property])\n\t\t\t\t\t\t? continueDestroyCircular(from[property])\n\t\t\t\t\t\t: from[property],\n\t\t\t\t\tenumerable: forceEnumerable ? true : enumerable,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\nexport function serializeError(value, options = {}) {\n\tconst {\n\t\tmaxDepth = Number.POSITIVE_INFINITY,\n\t\tuseToJSON = true,\n\t} = options;\n\n\tif (typeof value === 'object' && value !== null) {\n\t\treturn destroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tforceEnumerable: true,\n\t\t\tmaxDepth,\n\t\t\tdepth: 0,\n\t\t\tuseToJSON,\n\t\t\tserialize: true,\n\t\t});\n\t}\n\n\t// People sometimes throw things besides Error objectsâ€¦\n\tif (typeof value === 'function') {\n\t\t// `JSON.stringify()` discards functions. We do too, unless a function is thrown directly.\n\t\t// We intentionally use `||` because `.name` is an empty string for anonymous functions.\n\t\treturn `[Function: ${value.name || 'anonymous'}]`;\n\t}\n\n\treturn value;\n}\n\nexport function deserializeError(value, options = {}) {\n\tconst {maxDepth = Number.POSITIVE_INFINITY} = options;\n\n\tif (value instanceof Error) {\n\t\treturn value;\n\t}\n\n\tif (isMinimumViableSerializedError(value)) {\n\t\treturn destroyCircular({\n\t\t\tfrom: value,\n\t\t\tseen: [],\n\t\t\tto: newError(value.name),\n\t\t\tmaxDepth,\n\t\t\tdepth: 0,\n\t\t\tserialize: false,\n\t\t});\n\t}\n\n\treturn new NonError(value);\n}\n\nexport function isErrorLike(value) {\n\treturn Boolean(value)\n\t&& typeof value === 'object'\n\t&& typeof value.name === 'string'\n\t&& typeof value.message === 'string'\n\t&& typeof value.stack === 'string';\n}\n\n// Used as a weak check for immediately-passed objects, whereas `isErrorLike` is used for nested values to avoid bad detection\nfunction isMinimumViableSerializedError(value) {\n\treturn Boolean(value)\n\t&& typeof value === 'object'\n\t&& typeof value.message === 'string'\n\t&& !Array.isArray(value);\n}\n\nexport {addKnownErrorConstructor} from './error-constructors.js';\n"],
  "mappings": "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",
  "names": []
}
