import {
  require_node_assert,
  require_node_crypto,
  require_node_module,
  require_node_util,
  require_node_v8
} from "./chunk-N5HBKQYR.js";
import {
  require_node_os
} from "./chunk-CUJJHL4M.js";
import {
  require_node_fs,
  require_node_path,
  require_node_perf_hooks,
  require_node_process
} from "./chunk-FWGMBMZS.js";
import {
  require_node_url
} from "./chunk-UBU6NWLL.js";
import {
  __commonJS,
  __toESM
} from "./chunk-OL46QLBJ.js";

// browser-external:node:tty
var require_node_tty = __commonJS({
  "browser-external:node:tty"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:tty" has been externalized for browser compatibility. Cannot access "node:tty.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// browser-external:node:vm
var require_node_vm = __commonJS({
  "browser-external:node:vm"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "node:vm" has been externalized for browser compatibility. Cannot access "node:vm.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/jiti/dist/jiti.cjs
var require_jiti = __commonJS({
  "node_modules/jiti/dist/jiti.cjs"(exports, module) {
    (() => {
      var e = { "./node_modules/.pnpm/mlly@1.8.0/node_modules/mlly/dist lazy recursive": function(e2) {
        function webpackEmptyAsyncContext(e3) {
          return Promise.resolve().then(function() {
            var t2 = Error("Cannot find module '" + e3 + "'");
            throw t2.code = "MODULE_NOT_FOUND", t2;
          });
        }
        webpackEmptyAsyncContext.keys = () => [], webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext, webpackEmptyAsyncContext.id = "./node_modules/.pnpm/mlly@1.8.0/node_modules/mlly/dist lazy recursive", e2.exports = webpackEmptyAsyncContext;
      } }, t = {};
      function __webpack_require__(i2) {
        var s = t[i2];
        if (void 0 !== s) return s.exports;
        var r = t[i2] = { exports: {} };
        return e[i2](r, r.exports, __webpack_require__), r.exports;
      }
      __webpack_require__.n = (e2) => {
        var t2 = e2 && e2.__esModule ? () => e2.default : () => e2;
        return __webpack_require__.d(t2, { a: t2 }), t2;
      }, __webpack_require__.d = (e2, t2) => {
        for (var i2 in t2) __webpack_require__.o(t2, i2) && !__webpack_require__.o(e2, i2) && Object.defineProperty(e2, i2, { enumerable: true, get: t2[i2] });
      }, __webpack_require__.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2);
      var i = {};
      (() => {
        "use strict";
        var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m;
        let e2, t2, s;
        __webpack_require__.d(i, { default: () => createJiti2 });
        let r = require_node_os();
        var n, a = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 7, 9, 32, 4, 318, 1, 80, 3, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 68, 8, 2, 0, 3, 0, 2, 3, 2, 4, 2, 0, 15, 1, 83, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 7, 19, 58, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 343, 9, 54, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 10, 5350, 0, 7, 14, 11465, 27, 2343, 9, 87, 9, 39, 4, 60, 6, 26, 9, 535, 9, 470, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4178, 9, 519, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 245, 1, 2, 9, 726, 6, 110, 6, 6, 9, 4759, 9, 787719, 239], o = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 4, 51, 13, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 39, 27, 10, 22, 251, 41, 7, 1, 17, 2, 60, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 31, 9, 2, 0, 3, 0, 2, 37, 2, 0, 26, 0, 2, 0, 45, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 200, 32, 32, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 26, 3994, 6, 582, 6842, 29, 1763, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 433, 44, 212, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 42, 9, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 229, 29, 3, 0, 496, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191], h = "ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙՠ-ֈא-תׯ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࡠ-ࡪࡰ-ࢇࢉ-ࢎࢠ-ࣉऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱৼਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౝౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೝೞೠೡೱೲഄ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄຆ-ຊຌ-ຣລວ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜑᜟ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡸᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭌᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲊᲐ-ᲺᲽ-Ჿᳩ-ᳬᳮ-ᳳᳵᳶᳺᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕ℘-ℝℤΩℨK-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⰀ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ々-〇〡-〩〱-〵〸-〼ぁ-ゖ゛-ゟァ-ヺー-ヿㄅ-ㄯㄱ-ㆎㆠ-ㆿㇰ-ㇿ㐀-䶿一-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꟍꟐꟑꟓꟕ-Ƛꟲ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꣾꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭩꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ", c = { 3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile", 5: "class enum extends super const export import", 6: "enum", strict: "implements interface let package private protected public static yield", strictBind: "eval arguments" }, p = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this", l = { 5: p, "5module": p + " export import", 6: p + " const class extends export import super" }, u = /^in(stanceof)?$/, d = RegExp("[" + h + "]"), f = RegExp("[" + h + "‌‍·̀-ͯ·҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-٩ٰۖ-ۜ۟-۪ۤۧۨ-ۭ۰-۹ܑܰ-݊ަ-ް߀-߉߫-߽߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࢗ-࢟࣊-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣ०-९ঁ-ঃ়া-ৄেৈো-্ৗৢৣ০-৯৾ਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑ੦-ੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣ૦-૯ૺ-૿ଁ-ଃ଼ା-ୄେୈୋ-୍୕-ୗୢୣ୦-୯ஂா-ூெ-ைொ-்ௗ௦-௯ఀ-ఄ఼ా-ౄె-ైొ-్ౕౖౢౣ౦-౯ಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣ೦-೯ೳഀ-ഃ഻഼ാ-ൄെ-ൈൊ-്ൗൢൣ൦-൯ඁ-ඃ්ා-ුූෘ-ෟ෦-෯ෲෳัิ-ฺ็-๎๐-๙ັິ-ຼ່-໎໐-໙༘༙༠-༩༹༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှ၀-၉ၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏ-ႝ፝-፟፩-፱ᜒ-᜕ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝០-៩᠋-᠍᠏-᠙ᢩᤠ-ᤫᤰ-᤻᥆-᥏᧐-᧚ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪰-᪽ᪿ-ᫎᬀ-ᬄ᬴-᭄᭐-᭙᭫-᭳ᮀ-ᮂᮡ-ᮭ᮰-᮹᯦-᯳ᰤ-᰷᱀-᱉᱐-᱙᳐-᳔᳒-᳨᳭᳴᳷-᳹᷀-᷿‌‍‿⁀⁔⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯・꘠-꘩꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧ꠬ꢀꢁꢴ-ꣅ꣐-꣙꣠-꣱ꣿ-꤉ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀꧐-꧙ꧥ꧰-꧹ꨩ-ꨶꩃꩌꩍ꩐-꩙ꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭꯰-꯹ﬞ︀-️︠-︯︳︴﹍-﹏０-９＿･]");
        function isInAstralSet(e10, t3) {
          for (var i2 = 65536, s2 = 0; s2 < t3.length && !((i2 += t3[s2]) > e10); s2 += 2) if ((i2 += t3[s2 + 1]) >= e10) return true;
          return false;
        }
        function isIdentifierStart(e10, t3) {
          return e10 < 65 ? 36 === e10 : e10 < 91 || (e10 < 97 ? 95 === e10 : e10 < 123 || (e10 <= 65535 ? e10 >= 170 && d.test(String.fromCharCode(e10)) : false !== t3 && isInAstralSet(e10, o)));
        }
        function isIdentifierChar(e10, t3) {
          return e10 < 48 ? 36 === e10 : e10 < 58 || !(e10 < 65) && (e10 < 91 || (e10 < 97 ? 95 === e10 : e10 < 123 || (e10 <= 65535 ? e10 >= 170 && f.test(String.fromCharCode(e10)) : false !== t3 && (isInAstralSet(e10, o) || isInAstralSet(e10, a)))));
        }
        var acorn_TokenType = function(e10, t3) {
          void 0 === t3 && (t3 = {}), this.label = e10, this.keyword = t3.keyword, this.beforeExpr = !!t3.beforeExpr, this.startsExpr = !!t3.startsExpr, this.isLoop = !!t3.isLoop, this.isAssign = !!t3.isAssign, this.prefix = !!t3.prefix, this.postfix = !!t3.postfix, this.binop = t3.binop || null, this.updateContext = null;
        };
        function binop(e10, t3) {
          return new acorn_TokenType(e10, { beforeExpr: true, binop: t3 });
        }
        var m = { beforeExpr: true }, g = { startsExpr: true }, _ = {};
        function kw(e10, t3) {
          return void 0 === t3 && (t3 = {}), t3.keyword = e10, _[e10] = new acorn_TokenType(e10, t3);
        }
        var x = { num: new acorn_TokenType("num", g), regexp: new acorn_TokenType("regexp", g), string: new acorn_TokenType("string", g), name: new acorn_TokenType("name", g), privateId: new acorn_TokenType("privateId", g), eof: new acorn_TokenType("eof"), bracketL: new acorn_TokenType("[", { beforeExpr: true, startsExpr: true }), bracketR: new acorn_TokenType("]"), braceL: new acorn_TokenType("{", { beforeExpr: true, startsExpr: true }), braceR: new acorn_TokenType("}"), parenL: new acorn_TokenType("(", { beforeExpr: true, startsExpr: true }), parenR: new acorn_TokenType(")"), comma: new acorn_TokenType(",", m), semi: new acorn_TokenType(";", m), colon: new acorn_TokenType(":", m), dot: new acorn_TokenType("."), question: new acorn_TokenType("?", m), questionDot: new acorn_TokenType("?."), arrow: new acorn_TokenType("=>", m), template: new acorn_TokenType("template"), invalidTemplate: new acorn_TokenType("invalidTemplate"), ellipsis: new acorn_TokenType("...", m), backQuote: new acorn_TokenType("`", g), dollarBraceL: new acorn_TokenType("${", { beforeExpr: true, startsExpr: true }), eq: new acorn_TokenType("=", { beforeExpr: true, isAssign: true }), assign: new acorn_TokenType("_=", { beforeExpr: true, isAssign: true }), incDec: new acorn_TokenType("++/--", { prefix: true, postfix: true, startsExpr: true }), prefix: new acorn_TokenType("!/~", { beforeExpr: true, prefix: true, startsExpr: true }), logicalOR: binop("||", 1), logicalAND: binop("&&", 2), bitwiseOR: binop("|", 3), bitwiseXOR: binop("^", 4), bitwiseAND: binop("&", 5), equality: binop("==/!=/===/!==", 6), relational: binop("</>/<=/>=", 7), bitShift: binop("<</>>/>>>", 8), plusMin: new acorn_TokenType("+/-", { beforeExpr: true, binop: 9, prefix: true, startsExpr: true }), modulo: binop("%", 10), star: binop("*", 10), slash: binop("/", 10), starstar: new acorn_TokenType("**", { beforeExpr: true }), coalesce: binop("??", 1), _break: kw("break"), _case: kw("case", m), _catch: kw("catch"), _continue: kw("continue"), _debugger: kw("debugger"), _default: kw("default", m), _do: kw("do", { isLoop: true, beforeExpr: true }), _else: kw("else", m), _finally: kw("finally"), _for: kw("for", { isLoop: true }), _function: kw("function", g), _if: kw("if"), _return: kw("return", m), _switch: kw("switch"), _throw: kw("throw", m), _try: kw("try"), _var: kw("var"), _const: kw("const"), _while: kw("while", { isLoop: true }), _with: kw("with"), _new: kw("new", { beforeExpr: true, startsExpr: true }), _this: kw("this", g), _super: kw("super", g), _class: kw("class", g), _extends: kw("extends", m), _export: kw("export"), _import: kw("import", g), _null: kw("null", g), _true: kw("true", g), _false: kw("false", g), _in: kw("in", { beforeExpr: true, binop: 7 }), _instanceof: kw("instanceof", { beforeExpr: true, binop: 7 }), _typeof: kw("typeof", { beforeExpr: true, prefix: true, startsExpr: true }), _void: kw("void", { beforeExpr: true, prefix: true, startsExpr: true }), _delete: kw("delete", { beforeExpr: true, prefix: true, startsExpr: true }) }, v = /\r\n?|\n|\u2028|\u2029/, y = RegExp(v.source, "g");
        function isNewLine(e10) {
          return 10 === e10 || 13 === e10 || 8232 === e10 || 8233 === e10;
        }
        function nextLineBreak(e10, t3, i2) {
          void 0 === i2 && (i2 = e10.length);
          for (var s2 = t3; s2 < i2; s2++) {
            var r2 = e10.charCodeAt(s2);
            if (isNewLine(r2)) return s2 < i2 - 1 && 13 === r2 && 10 === e10.charCodeAt(s2 + 1) ? s2 + 2 : s2 + 1;
          }
          return -1;
        }
        var b = /[\u1680\u2000-\u200a\u202f\u205f\u3000\ufeff]/, E = /(?:\s|\/\/.*|\/\*[^]*?\*\/)*/g, k = Object.prototype, S = k.hasOwnProperty, C = k.toString, w = Object.hasOwn || function(e10, t3) {
          return S.call(e10, t3);
        }, T = Array.isArray || function(e10) {
          return "[object Array]" === C.call(e10);
        }, I = /* @__PURE__ */ Object.create(null);
        function wordsRegexp(e10) {
          return I[e10] || (I[e10] = RegExp("^(?:" + e10.replace(/ /g, "|") + ")$"));
        }
        function codePointToString(e10) {
          return e10 <= 65535 ? String.fromCharCode(e10) : String.fromCharCode(((e10 -= 65536) >> 10) + 55296, (1023 & e10) + 56320);
        }
        var R = /(?:[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])/, acorn_Position = function(e10, t3) {
          this.line = e10, this.column = t3;
        };
        acorn_Position.prototype.offset = function(e10) {
          return new acorn_Position(this.line, this.column + e10);
        };
        var acorn_SourceLocation = function(e10, t3, i2) {
          this.start = t3, this.end = i2, null !== e10.sourceFile && (this.source = e10.sourceFile);
        };
        function getLineInfo(e10, t3) {
          for (var i2 = 1, s2 = 0; ; ) {
            var r2 = nextLineBreak(e10, s2, t3);
            if (r2 < 0) return new acorn_Position(i2, t3 - s2);
            ++i2, s2 = r2;
          }
        }
        var P = { ecmaVersion: null, sourceType: "script", onInsertedSemicolon: null, onTrailingComma: null, allowReserved: null, allowReturnOutsideFunction: false, allowImportExportEverywhere: false, allowAwaitOutsideFunction: null, allowSuperOutsideMethod: null, allowHashBang: false, checkPrivateFields: true, locations: false, onToken: null, onComment: null, ranges: false, program: null, sourceFile: null, directSourceFile: null, preserveParens: false }, A = false;
        function getOptions(e10) {
          var t3 = {};
          for (var i2 in P) t3[i2] = e10 && w(e10, i2) ? e10[i2] : P[i2];
          if ("latest" === t3.ecmaVersion ? t3.ecmaVersion = 1e8 : null == t3.ecmaVersion ? (!A && "object" == typeof console && console.warn && (A = true, console.warn("Since Acorn 8.0.0, options.ecmaVersion is required.\nDefaulting to 2020, but this will stop working in the future.")), t3.ecmaVersion = 11) : t3.ecmaVersion >= 2015 && (t3.ecmaVersion -= 2009), null == t3.allowReserved && (t3.allowReserved = t3.ecmaVersion < 5), e10 && null != e10.allowHashBang || (t3.allowHashBang = t3.ecmaVersion >= 14), T(t3.onToken)) {
            var s2 = t3.onToken;
            t3.onToken = function(e11) {
              return s2.push(e11);
            };
          }
          return T(t3.onComment) && (t3.onComment = pushComment(t3, t3.onComment)), t3;
        }
        function pushComment(e10, t3) {
          return function(i2, s2, r2, n2, a2, o2) {
            var h2 = { type: i2 ? "Block" : "Line", value: s2, start: r2, end: n2 };
            e10.locations && (h2.loc = new acorn_SourceLocation(this, a2, o2)), e10.ranges && (h2.range = [r2, n2]), t3.push(h2);
          };
        }
        function functionFlags(e10, t3) {
          return 2 | 4 * !!e10 | 8 * !!t3;
        }
        var acorn_Parser = function(e10, t3, i2) {
          this.options = e10 = getOptions(e10), this.sourceFile = e10.sourceFile, this.keywords = wordsRegexp(l[e10.ecmaVersion >= 6 ? 6 : "module" === e10.sourceType ? "5module" : 5]);
          var s2 = "";
          true !== e10.allowReserved && (s2 = c[e10.ecmaVersion >= 6 ? 6 : 5 === e10.ecmaVersion ? 5 : 3], "module" === e10.sourceType && (s2 += " await")), this.reservedWords = wordsRegexp(s2);
          var r2 = (s2 ? s2 + " " : "") + c.strict;
          this.reservedWordsStrict = wordsRegexp(r2), this.reservedWordsStrictBind = wordsRegexp(r2 + " " + c.strictBind), this.input = String(t3), this.containsEsc = false, i2 ? (this.pos = i2, this.lineStart = this.input.lastIndexOf("\n", i2 - 1) + 1, this.curLine = this.input.slice(0, this.lineStart).split(v).length) : (this.pos = this.lineStart = 0, this.curLine = 1), this.type = x.eof, this.value = null, this.start = this.end = this.pos, this.startLoc = this.endLoc = this.curPosition(), this.lastTokEndLoc = this.lastTokStartLoc = null, this.lastTokStart = this.lastTokEnd = this.pos, this.context = this.initialContext(), this.exprAllowed = true, this.inModule = "module" === e10.sourceType, this.strict = this.inModule || this.strictDirective(this.pos), this.potentialArrowAt = -1, this.potentialArrowInForAwait = false, this.yieldPos = this.awaitPos = this.awaitIdentPos = 0, this.labels = [], this.undefinedExports = /* @__PURE__ */ Object.create(null), 0 === this.pos && e10.allowHashBang && "#!" === this.input.slice(0, 2) && this.skipLineComment(2), this.scopeStack = [], this.enterScope(1), this.regexpState = null, this.privateNameStack = [];
        }, N = { inFunction: { configurable: true }, inGenerator: { configurable: true }, inAsync: { configurable: true }, canAwait: { configurable: true }, allowSuper: { configurable: true }, allowDirectSuper: { configurable: true }, treatFunctionsAsVar: { configurable: true }, allowNewDotTarget: { configurable: true }, inClassStaticBlock: { configurable: true } };
        acorn_Parser.prototype.parse = function() {
          var e10 = this.options.program || this.startNode();
          return this.nextToken(), this.parseTopLevel(e10);
        }, N.inFunction.get = function() {
          return (2 & this.currentVarScope().flags) > 0;
        }, N.inGenerator.get = function() {
          return (8 & this.currentVarScope().flags) > 0;
        }, N.inAsync.get = function() {
          return (4 & this.currentVarScope().flags) > 0;
        }, N.canAwait.get = function() {
          for (var e10 = this.scopeStack.length - 1; e10 >= 0; e10--) {
            var t3 = this.scopeStack[e10].flags;
            if (768 & t3) return false;
            if (2 & t3) return (4 & t3) > 0;
          }
          return this.inModule && this.options.ecmaVersion >= 13 || this.options.allowAwaitOutsideFunction;
        }, N.allowSuper.get = function() {
          return (64 & this.currentThisScope().flags) > 0 || this.options.allowSuperOutsideMethod;
        }, N.allowDirectSuper.get = function() {
          return (128 & this.currentThisScope().flags) > 0;
        }, N.treatFunctionsAsVar.get = function() {
          return this.treatFunctionsAsVarInScope(this.currentScope());
        }, N.allowNewDotTarget.get = function() {
          for (var e10 = this.scopeStack.length - 1; e10 >= 0; e10--) {
            var t3 = this.scopeStack[e10].flags;
            if (768 & t3 || 2 & t3 && !(16 & t3)) return true;
          }
          return false;
        }, N.inClassStaticBlock.get = function() {
          return (256 & this.currentVarScope().flags) > 0;
        }, acorn_Parser.extend = function() {
          for (var e10 = [], t3 = arguments.length; t3--; ) e10[t3] = arguments[t3];
          for (var i2 = this, s2 = 0; s2 < e10.length; s2++) i2 = e10[s2](i2);
          return i2;
        }, acorn_Parser.parse = function(e10, t3) {
          return new this(t3, e10).parse();
        }, acorn_Parser.parseExpressionAt = function(e10, t3, i2) {
          var s2 = new this(i2, e10, t3);
          return s2.nextToken(), s2.parseExpression();
        }, acorn_Parser.tokenizer = function(e10, t3) {
          return new this(t3, e10);
        }, Object.defineProperties(acorn_Parser.prototype, N);
        var L = acorn_Parser.prototype, D = /^(?:'((?:\\[^]|[^'\\])*?)'|"((?:\\[^]|[^"\\])*?)")/;
        L.strictDirective = function(e10) {
          if (this.options.ecmaVersion < 5) return false;
          for (; ; ) {
            E.lastIndex = e10, e10 += E.exec(this.input)[0].length;
            var t3 = D.exec(this.input.slice(e10));
            if (!t3) return false;
            if ("use strict" === (t3[1] || t3[2])) {
              E.lastIndex = e10 + t3[0].length;
              var i2 = E.exec(this.input), s2 = i2.index + i2[0].length, r2 = this.input.charAt(s2);
              return ";" === r2 || "}" === r2 || v.test(i2[0]) && !(/[(`.[+\-/*%<>=,?^&]/.test(r2) || "!" === r2 && "=" === this.input.charAt(s2 + 1));
            }
            E.lastIndex = e10 += t3[0].length, e10 += E.exec(this.input)[0].length, ";" === this.input[e10] && e10++;
          }
        }, L.eat = function(e10) {
          return this.type === e10 && (this.next(), true);
        }, L.isContextual = function(e10) {
          return this.type === x.name && this.value === e10 && !this.containsEsc;
        }, L.eatContextual = function(e10) {
          return !!this.isContextual(e10) && (this.next(), true);
        }, L.expectContextual = function(e10) {
          this.eatContextual(e10) || this.unexpected();
        }, L.canInsertSemicolon = function() {
          return this.type === x.eof || this.type === x.braceR || v.test(this.input.slice(this.lastTokEnd, this.start));
        }, L.insertSemicolon = function() {
          if (this.canInsertSemicolon()) return this.options.onInsertedSemicolon && this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc), true;
        }, L.semicolon = function() {
          this.eat(x.semi) || this.insertSemicolon() || this.unexpected();
        }, L.afterTrailingComma = function(e10, t3) {
          if (this.type === e10) return this.options.onTrailingComma && this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc), t3 || this.next(), true;
        }, L.expect = function(e10) {
          this.eat(e10) || this.unexpected();
        }, L.unexpected = function(e10) {
          this.raise(null != e10 ? e10 : this.start, "Unexpected token");
        };
        var acorn_DestructuringErrors = function() {
          this.shorthandAssign = this.trailingComma = this.parenthesizedAssign = this.parenthesizedBind = this.doubleProto = -1;
        };
        L.checkPatternErrors = function(e10, t3) {
          if (e10) {
            e10.trailingComma > -1 && this.raiseRecoverable(e10.trailingComma, "Comma is not permitted after the rest element");
            var i2 = t3 ? e10.parenthesizedAssign : e10.parenthesizedBind;
            i2 > -1 && this.raiseRecoverable(i2, t3 ? "Assigning to rvalue" : "Parenthesized pattern");
          }
        }, L.checkExpressionErrors = function(e10, t3) {
          if (!e10) return false;
          var i2 = e10.shorthandAssign, s2 = e10.doubleProto;
          if (!t3) return i2 >= 0 || s2 >= 0;
          i2 >= 0 && this.raise(i2, "Shorthand property assignments are valid only in destructuring patterns"), s2 >= 0 && this.raiseRecoverable(s2, "Redefinition of __proto__ property");
        }, L.checkYieldAwaitInDefaultParams = function() {
          this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos) && this.raise(this.yieldPos, "Yield expression cannot be a default value"), this.awaitPos && this.raise(this.awaitPos, "Await expression cannot be a default value");
        }, L.isSimpleAssignTarget = function(e10) {
          return "ParenthesizedExpression" === e10.type ? this.isSimpleAssignTarget(e10.expression) : "Identifier" === e10.type || "MemberExpression" === e10.type;
        };
        var O = acorn_Parser.prototype;
        O.parseTopLevel = function(e10) {
          var t3 = /* @__PURE__ */ Object.create(null);
          for (e10.body || (e10.body = []); this.type !== x.eof; ) {
            var i2 = this.parseStatement(null, true, t3);
            e10.body.push(i2);
          }
          if (this.inModule) for (var s2 = 0, r2 = Object.keys(this.undefinedExports); s2 < r2.length; s2 += 1) {
            var n2 = r2[s2];
            this.raiseRecoverable(this.undefinedExports[n2].start, "Export '" + n2 + "' is not defined");
          }
          return this.adaptDirectivePrologue(e10.body), this.next(), e10.sourceType = this.options.sourceType, this.finishNode(e10, "Program");
        };
        var V = { kind: "loop" }, U = { kind: "switch" };
        O.isLet = function(e10) {
          if (this.options.ecmaVersion < 6 || !this.isContextual("let")) return false;
          E.lastIndex = this.pos;
          var t3 = E.exec(this.input), i2 = this.pos + t3[0].length, s2 = this.input.charCodeAt(i2);
          if (91 === s2 || 92 === s2) return true;
          if (e10) return false;
          if (123 === s2 || s2 > 55295 && s2 < 56320) return true;
          if (isIdentifierStart(s2, true)) {
            for (var r2 = i2 + 1; isIdentifierChar(s2 = this.input.charCodeAt(r2), true); ) ++r2;
            if (92 === s2 || s2 > 55295 && s2 < 56320) return true;
            var n2 = this.input.slice(i2, r2);
            if (!u.test(n2)) return true;
          }
          return false;
        }, O.isAsyncFunction = function() {
          if (this.options.ecmaVersion < 8 || !this.isContextual("async")) return false;
          E.lastIndex = this.pos;
          var e10, t3 = E.exec(this.input), i2 = this.pos + t3[0].length;
          return !v.test(this.input.slice(this.pos, i2)) && "function" === this.input.slice(i2, i2 + 8) && (i2 + 8 === this.input.length || !(isIdentifierChar(e10 = this.input.charCodeAt(i2 + 8)) || e10 > 55295 && e10 < 56320));
        }, O.isUsingKeyword = function(e10, t3) {
          if (this.options.ecmaVersion < 17 || !this.isContextual(e10 ? "await" : "using")) return false;
          E.lastIndex = this.pos;
          var i2 = E.exec(this.input), s2 = this.pos + i2[0].length;
          if (v.test(this.input.slice(this.pos, s2))) return false;
          if (e10) {
            var r2, n2 = s2 + 5;
            if ("using" !== this.input.slice(s2, n2) || n2 === this.input.length || isIdentifierChar(r2 = this.input.charCodeAt(n2)) || r2 > 55295 && r2 < 56320) return false;
            E.lastIndex = n2;
            var a2 = E.exec(this.input);
            if (a2 && v.test(this.input.slice(n2, n2 + a2[0].length))) return false;
          }
          if (t3) {
            var o2, h2 = s2 + 2;
            if ("of" === this.input.slice(s2, h2) && (h2 === this.input.length || !isIdentifierChar(o2 = this.input.charCodeAt(h2)) && !(o2 > 55295 && o2 < 56320))) return false;
          }
          var c2 = this.input.charCodeAt(s2);
          return isIdentifierStart(c2, true) || 92 === c2;
        }, O.isAwaitUsing = function(e10) {
          return this.isUsingKeyword(true, e10);
        }, O.isUsing = function(e10) {
          return this.isUsingKeyword(false, e10);
        }, O.parseStatement = function(e10, t3, i2) {
          var s2, r2 = this.type, n2 = this.startNode();
          switch (this.isLet(e10) && (r2 = x._var, s2 = "let"), r2) {
            case x._break:
            case x._continue:
              return this.parseBreakContinueStatement(n2, r2.keyword);
            case x._debugger:
              return this.parseDebuggerStatement(n2);
            case x._do:
              return this.parseDoStatement(n2);
            case x._for:
              return this.parseForStatement(n2);
            case x._function:
              return e10 && (this.strict || "if" !== e10 && "label" !== e10) && this.options.ecmaVersion >= 6 && this.unexpected(), this.parseFunctionStatement(n2, false, !e10);
            case x._class:
              return e10 && this.unexpected(), this.parseClass(n2, true);
            case x._if:
              return this.parseIfStatement(n2);
            case x._return:
              return this.parseReturnStatement(n2);
            case x._switch:
              return this.parseSwitchStatement(n2);
            case x._throw:
              return this.parseThrowStatement(n2);
            case x._try:
              return this.parseTryStatement(n2);
            case x._const:
            case x._var:
              return s2 = s2 || this.value, e10 && "var" !== s2 && this.unexpected(), this.parseVarStatement(n2, s2);
            case x._while:
              return this.parseWhileStatement(n2);
            case x._with:
              return this.parseWithStatement(n2);
            case x.braceL:
              return this.parseBlock(true, n2);
            case x.semi:
              return this.parseEmptyStatement(n2);
            case x._export:
            case x._import:
              if (this.options.ecmaVersion > 10 && r2 === x._import) {
                E.lastIndex = this.pos;
                var a2 = E.exec(this.input), o2 = this.pos + a2[0].length, h2 = this.input.charCodeAt(o2);
                if (40 === h2 || 46 === h2) return this.parseExpressionStatement(n2, this.parseExpression());
              }
              return !this.options.allowImportExportEverywhere && (t3 || this.raise(this.start, "'import' and 'export' may only appear at the top level"), this.inModule || this.raise(this.start, "'import' and 'export' may appear only with 'sourceType: module'")), r2 === x._import ? this.parseImport(n2) : this.parseExport(n2, i2);
            default:
              if (this.isAsyncFunction()) return e10 && this.unexpected(), this.next(), this.parseFunctionStatement(n2, true, !e10);
              var c2 = this.isAwaitUsing(false) ? "await using" : this.isUsing(false) ? "using" : null;
              if (c2) return t3 && "script" === this.options.sourceType && this.raise(this.start, "Using declaration cannot appear in the top level when source type is `script`"), "await using" === c2 && (this.canAwait || this.raise(this.start, "Await using cannot appear outside of async function"), this.next()), this.next(), this.parseVar(n2, false, c2), this.semicolon(), this.finishNode(n2, "VariableDeclaration");
              var p2 = this.value, l2 = this.parseExpression();
              if (r2 === x.name && "Identifier" === l2.type && this.eat(x.colon)) return this.parseLabeledStatement(n2, p2, l2, e10);
              return this.parseExpressionStatement(n2, l2);
          }
        }, O.parseBreakContinueStatement = function(e10, t3) {
          var i2 = "break" === t3;
          this.next(), this.eat(x.semi) || this.insertSemicolon() ? e10.label = null : this.type !== x.name ? this.unexpected() : (e10.label = this.parseIdent(), this.semicolon());
          for (var s2 = 0; s2 < this.labels.length; ++s2) {
            var r2 = this.labels[s2];
            if ((null == e10.label || r2.name === e10.label.name) && (null != r2.kind && (i2 || "loop" === r2.kind) || e10.label && i2)) break;
          }
          return s2 === this.labels.length && this.raise(e10.start, "Unsyntactic " + t3), this.finishNode(e10, i2 ? "BreakStatement" : "ContinueStatement");
        }, O.parseDebuggerStatement = function(e10) {
          return this.next(), this.semicolon(), this.finishNode(e10, "DebuggerStatement");
        }, O.parseDoStatement = function(e10) {
          return this.next(), this.labels.push(V), e10.body = this.parseStatement("do"), this.labels.pop(), this.expect(x._while), e10.test = this.parseParenExpression(), this.options.ecmaVersion >= 6 ? this.eat(x.semi) : this.semicolon(), this.finishNode(e10, "DoWhileStatement");
        }, O.parseForStatement = function(e10) {
          this.next();
          var t3 = this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await") ? this.lastTokStart : -1;
          if (this.labels.push(V), this.enterScope(0), this.expect(x.parenL), this.type === x.semi) return t3 > -1 && this.unexpected(t3), this.parseFor(e10, null);
          var i2 = this.isLet();
          if (this.type === x._var || this.type === x._const || i2) {
            var s2 = this.startNode(), r2 = i2 ? "let" : this.value;
            return this.next(), this.parseVar(s2, true, r2), this.finishNode(s2, "VariableDeclaration"), this.parseForAfterInit(e10, s2, t3);
          }
          var n2 = this.isContextual("let"), a2 = false, o2 = this.isUsing(true) ? "using" : this.isAwaitUsing(true) ? "await using" : null;
          if (o2) {
            var h2 = this.startNode();
            return this.next(), "await using" === o2 && this.next(), this.parseVar(h2, true, o2), this.finishNode(h2, "VariableDeclaration"), this.parseForAfterInit(e10, h2, t3);
          }
          var c2 = this.containsEsc, p2 = new acorn_DestructuringErrors(), l2 = this.start, u2 = t3 > -1 ? this.parseExprSubscripts(p2, "await") : this.parseExpression(true, p2);
          return this.type === x._in || (a2 = this.options.ecmaVersion >= 6 && this.isContextual("of")) ? (t3 > -1 ? (this.type === x._in && this.unexpected(t3), e10.await = true) : a2 && this.options.ecmaVersion >= 8 && (u2.start !== l2 || c2 || "Identifier" !== u2.type || "async" !== u2.name ? this.options.ecmaVersion >= 9 && (e10.await = false) : this.unexpected()), n2 && a2 && this.raise(u2.start, "The left-hand side of a for-of loop may not start with 'let'."), this.toAssignable(u2, false, p2), this.checkLValPattern(u2), this.parseForIn(e10, u2)) : (this.checkExpressionErrors(p2, true), t3 > -1 && this.unexpected(t3), this.parseFor(e10, u2));
        }, O.parseForAfterInit = function(e10, t3, i2) {
          return (this.type === x._in || this.options.ecmaVersion >= 6 && this.isContextual("of")) && 1 === t3.declarations.length ? (this.options.ecmaVersion >= 9 && (this.type === x._in ? i2 > -1 && this.unexpected(i2) : e10.await = i2 > -1), this.parseForIn(e10, t3)) : (i2 > -1 && this.unexpected(i2), this.parseFor(e10, t3));
        }, O.parseFunctionStatement = function(e10, t3, i2) {
          return this.next(), this.parseFunction(e10, j | (i2 ? 0 : B), false, t3);
        }, O.parseIfStatement = function(e10) {
          return this.next(), e10.test = this.parseParenExpression(), e10.consequent = this.parseStatement("if"), e10.alternate = this.eat(x._else) ? this.parseStatement("if") : null, this.finishNode(e10, "IfStatement");
        }, O.parseReturnStatement = function(e10) {
          return this.inFunction || this.options.allowReturnOutsideFunction || this.raise(this.start, "'return' outside of function"), this.next(), this.eat(x.semi) || this.insertSemicolon() ? e10.argument = null : (e10.argument = this.parseExpression(), this.semicolon()), this.finishNode(e10, "ReturnStatement");
        }, O.parseSwitchStatement = function(e10) {
          this.next(), e10.discriminant = this.parseParenExpression(), e10.cases = [], this.expect(x.braceL), this.labels.push(U), this.enterScope(0);
          for (var t3, i2 = false; this.type !== x.braceR; ) if (this.type === x._case || this.type === x._default) {
            var s2 = this.type === x._case;
            t3 && this.finishNode(t3, "SwitchCase"), e10.cases.push(t3 = this.startNode()), t3.consequent = [], this.next(), s2 ? t3.test = this.parseExpression() : (i2 && this.raiseRecoverable(this.lastTokStart, "Multiple default clauses"), i2 = true, t3.test = null), this.expect(x.colon);
          } else t3 || this.unexpected(), t3.consequent.push(this.parseStatement(null));
          return this.exitScope(), t3 && this.finishNode(t3, "SwitchCase"), this.next(), this.labels.pop(), this.finishNode(e10, "SwitchStatement");
        }, O.parseThrowStatement = function(e10) {
          return this.next(), v.test(this.input.slice(this.lastTokEnd, this.start)) && this.raise(this.lastTokEnd, "Illegal newline after throw"), e10.argument = this.parseExpression(), this.semicolon(), this.finishNode(e10, "ThrowStatement");
        };
        var M = [];
        O.parseCatchClauseParam = function() {
          var e10 = this.parseBindingAtom(), t3 = "Identifier" === e10.type;
          return this.enterScope(32 * !!t3), this.checkLValPattern(e10, t3 ? 4 : 2), this.expect(x.parenR), e10;
        }, O.parseTryStatement = function(e10) {
          if (this.next(), e10.block = this.parseBlock(), e10.handler = null, this.type === x._catch) {
            var t3 = this.startNode();
            this.next(), this.eat(x.parenL) ? t3.param = this.parseCatchClauseParam() : (this.options.ecmaVersion < 10 && this.unexpected(), t3.param = null, this.enterScope(0)), t3.body = this.parseBlock(false), this.exitScope(), e10.handler = this.finishNode(t3, "CatchClause");
          }
          return e10.finalizer = this.eat(x._finally) ? this.parseBlock() : null, e10.handler || e10.finalizer || this.raise(e10.start, "Missing catch or finally clause"), this.finishNode(e10, "TryStatement");
        }, O.parseVarStatement = function(e10, t3, i2) {
          return this.next(), this.parseVar(e10, false, t3, i2), this.semicolon(), this.finishNode(e10, "VariableDeclaration");
        }, O.parseWhileStatement = function(e10) {
          return this.next(), e10.test = this.parseParenExpression(), this.labels.push(V), e10.body = this.parseStatement("while"), this.labels.pop(), this.finishNode(e10, "WhileStatement");
        }, O.parseWithStatement = function(e10) {
          return this.strict && this.raise(this.start, "'with' in strict mode"), this.next(), e10.object = this.parseParenExpression(), e10.body = this.parseStatement("with"), this.finishNode(e10, "WithStatement");
        }, O.parseEmptyStatement = function(e10) {
          return this.next(), this.finishNode(e10, "EmptyStatement");
        }, O.parseLabeledStatement = function(e10, t3, i2, s2) {
          for (var r2 = 0, n2 = this.labels; r2 < n2.length; r2 += 1) n2[r2].name === t3 && this.raise(i2.start, "Label '" + t3 + "' is already declared");
          for (var a2 = this.type.isLoop ? "loop" : this.type === x._switch ? "switch" : null, o2 = this.labels.length - 1; o2 >= 0; o2--) {
            var h2 = this.labels[o2];
            if (h2.statementStart === e10.start) h2.statementStart = this.start, h2.kind = a2;
            else break;
          }
          return this.labels.push({ name: t3, kind: a2, statementStart: this.start }), e10.body = this.parseStatement(s2 ? -1 === s2.indexOf("label") ? s2 + "label" : s2 : "label"), this.labels.pop(), e10.label = i2, this.finishNode(e10, "LabeledStatement");
        }, O.parseExpressionStatement = function(e10, t3) {
          return e10.expression = t3, this.semicolon(), this.finishNode(e10, "ExpressionStatement");
        }, O.parseBlock = function(e10, t3, i2) {
          for (void 0 === e10 && (e10 = true), void 0 === t3 && (t3 = this.startNode()), t3.body = [], this.expect(x.braceL), e10 && this.enterScope(0); this.type !== x.braceR; ) {
            var s2 = this.parseStatement(null);
            t3.body.push(s2);
          }
          return i2 && (this.strict = false), this.next(), e10 && this.exitScope(), this.finishNode(t3, "BlockStatement");
        }, O.parseFor = function(e10, t3) {
          return e10.init = t3, this.expect(x.semi), e10.test = this.type === x.semi ? null : this.parseExpression(), this.expect(x.semi), e10.update = this.type === x.parenR ? null : this.parseExpression(), this.expect(x.parenR), e10.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(e10, "ForStatement");
        }, O.parseForIn = function(e10, t3) {
          var i2 = this.type === x._in;
          return this.next(), "VariableDeclaration" === t3.type && null != t3.declarations[0].init && (!i2 || this.options.ecmaVersion < 8 || this.strict || "var" !== t3.kind || "Identifier" !== t3.declarations[0].id.type) && this.raise(t3.start, (i2 ? "for-in" : "for-of") + " loop variable declaration may not have an initializer"), e10.left = t3, e10.right = i2 ? this.parseExpression() : this.parseMaybeAssign(), this.expect(x.parenR), e10.body = this.parseStatement("for"), this.exitScope(), this.labels.pop(), this.finishNode(e10, i2 ? "ForInStatement" : "ForOfStatement");
        }, O.parseVar = function(e10, t3, i2, s2) {
          for (e10.declarations = [], e10.kind = i2; ; ) {
            var r2 = this.startNode();
            if (this.parseVarId(r2, i2), this.eat(x.eq) ? r2.init = this.parseMaybeAssign(t3) : s2 || "const" !== i2 || this.type === x._in || this.options.ecmaVersion >= 6 && this.isContextual("of") ? s2 || "using" !== i2 && "await using" !== i2 || !(this.options.ecmaVersion >= 17) || this.type === x._in || this.isContextual("of") ? s2 || "Identifier" === r2.id.type || t3 && (this.type === x._in || this.isContextual("of")) ? r2.init = null : this.raise(this.lastTokEnd, "Complex binding patterns require an initialization value") : this.raise(this.lastTokEnd, "Missing initializer in " + i2 + " declaration") : this.unexpected(), e10.declarations.push(this.finishNode(r2, "VariableDeclarator")), !this.eat(x.comma)) break;
          }
          return e10;
        }, O.parseVarId = function(e10, t3) {
          e10.id = "using" === t3 || "await using" === t3 ? this.parseIdent() : this.parseBindingAtom(), this.checkLValPattern(e10.id, "var" === t3 ? 1 : 2, false);
        };
        var j = 1, B = 2;
        function isPrivateNameConflicted(e10, t3) {
          var i2 = t3.key.name, s2 = e10[i2], r2 = "true";
          return ("MethodDefinition" === t3.type && ("get" === t3.kind || "set" === t3.kind) && (r2 = (t3.static ? "s" : "i") + t3.kind), "iget" === s2 && "iset" === r2 || "iset" === s2 && "iget" === r2 || "sget" === s2 && "sset" === r2 || "sset" === s2 && "sget" === r2) ? (e10[i2] = "true", false) : !!s2 || (e10[i2] = r2, false);
        }
        function checkKeyName(e10, t3) {
          var i2 = e10.computed, s2 = e10.key;
          return !i2 && ("Identifier" === s2.type && s2.name === t3 || "Literal" === s2.type && s2.value === t3);
        }
        O.parseFunction = function(e10, t3, i2, s2, r2) {
          this.initFunction(e10), (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !s2) && (this.type === x.star && t3 & B && this.unexpected(), e10.generator = this.eat(x.star)), this.options.ecmaVersion >= 8 && (e10.async = !!s2), t3 & j && (e10.id = 4 & t3 && this.type !== x.name ? null : this.parseIdent(), e10.id && !(t3 & B) && this.checkLValSimple(e10.id, this.strict || e10.generator || e10.async ? this.treatFunctionsAsVar ? 1 : 2 : 3));
          var n2 = this.yieldPos, a2 = this.awaitPos, o2 = this.awaitIdentPos;
          return this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(functionFlags(e10.async, e10.generator)), t3 & j || (e10.id = this.type === x.name ? this.parseIdent() : null), this.parseFunctionParams(e10), this.parseFunctionBody(e10, i2, false, r2), this.yieldPos = n2, this.awaitPos = a2, this.awaitIdentPos = o2, this.finishNode(e10, t3 & j ? "FunctionDeclaration" : "FunctionExpression");
        }, O.parseFunctionParams = function(e10) {
          this.expect(x.parenL), e10.params = this.parseBindingList(x.parenR, false, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams();
        }, O.parseClass = function(e10, t3) {
          this.next();
          var i2 = this.strict;
          this.strict = true, this.parseClassId(e10, t3), this.parseClassSuper(e10);
          var s2 = this.enterClassBody(), r2 = this.startNode(), n2 = false;
          for (r2.body = [], this.expect(x.braceL); this.type !== x.braceR; ) {
            var a2 = this.parseClassElement(null !== e10.superClass);
            a2 && (r2.body.push(a2), "MethodDefinition" === a2.type && "constructor" === a2.kind ? (n2 && this.raiseRecoverable(a2.start, "Duplicate constructor in the same class"), n2 = true) : a2.key && "PrivateIdentifier" === a2.key.type && isPrivateNameConflicted(s2, a2) && this.raiseRecoverable(a2.key.start, "Identifier '#" + a2.key.name + "' has already been declared"));
          }
          return this.strict = i2, this.next(), e10.body = this.finishNode(r2, "ClassBody"), this.exitClassBody(), this.finishNode(e10, t3 ? "ClassDeclaration" : "ClassExpression");
        }, O.parseClassElement = function(e10) {
          if (this.eat(x.semi)) return null;
          var t3 = this.options.ecmaVersion, i2 = this.startNode(), s2 = "", r2 = false, n2 = false, a2 = "method", o2 = false;
          if (this.eatContextual("static")) {
            if (t3 >= 13 && this.eat(x.braceL)) return this.parseClassStaticBlock(i2), i2;
            this.isClassElementNameStart() || this.type === x.star ? o2 = true : s2 = "static";
          }
          if (i2.static = o2, !s2 && t3 >= 8 && this.eatContextual("async") && ((this.isClassElementNameStart() || this.type === x.star) && !this.canInsertSemicolon() ? n2 = true : s2 = "async"), !s2 && (t3 >= 9 || !n2) && this.eat(x.star) && (r2 = true), !s2 && !n2 && !r2) {
            var h2 = this.value;
            (this.eatContextual("get") || this.eatContextual("set")) && (this.isClassElementNameStart() ? a2 = h2 : s2 = h2);
          }
          if (s2 ? (i2.computed = false, i2.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc), i2.key.name = s2, this.finishNode(i2.key, "Identifier")) : this.parseClassElementName(i2), t3 < 13 || this.type === x.parenL || "method" !== a2 || r2 || n2) {
            var c2 = !i2.static && checkKeyName(i2, "constructor");
            c2 && "method" !== a2 && this.raise(i2.key.start, "Constructor can't have get/set modifier"), i2.kind = c2 ? "constructor" : a2, this.parseClassMethod(i2, r2, n2, c2 && e10);
          } else this.parseClassField(i2);
          return i2;
        }, O.isClassElementNameStart = function() {
          return this.type === x.name || this.type === x.privateId || this.type === x.num || this.type === x.string || this.type === x.bracketL || this.type.keyword;
        }, O.parseClassElementName = function(e10) {
          this.type === x.privateId ? ("constructor" === this.value && this.raise(this.start, "Classes can't have an element named '#constructor'"), e10.computed = false, e10.key = this.parsePrivateIdent()) : this.parsePropertyName(e10);
        }, O.parseClassMethod = function(e10, t3, i2, s2) {
          var r2 = e10.key;
          "constructor" === e10.kind ? (t3 && this.raise(r2.start, "Constructor can't be a generator"), i2 && this.raise(r2.start, "Constructor can't be an async method")) : e10.static && checkKeyName(e10, "prototype") && this.raise(r2.start, "Classes may not have a static property named prototype");
          var n2 = e10.value = this.parseMethod(t3, i2, s2);
          return "get" === e10.kind && 0 !== n2.params.length && this.raiseRecoverable(n2.start, "getter should have no params"), "set" === e10.kind && 1 !== n2.params.length && this.raiseRecoverable(n2.start, "setter should have exactly one param"), "set" === e10.kind && "RestElement" === n2.params[0].type && this.raiseRecoverable(n2.params[0].start, "Setter cannot use rest params"), this.finishNode(e10, "MethodDefinition");
        }, O.parseClassField = function(e10) {
          return checkKeyName(e10, "constructor") ? this.raise(e10.key.start, "Classes can't have a field named 'constructor'") : e10.static && checkKeyName(e10, "prototype") && this.raise(e10.key.start, "Classes can't have a static field named 'prototype'"), this.eat(x.eq) ? (this.enterScope(576), e10.value = this.parseMaybeAssign(), this.exitScope()) : e10.value = null, this.semicolon(), this.finishNode(e10, "PropertyDefinition");
        }, O.parseClassStaticBlock = function(e10) {
          e10.body = [];
          var t3 = this.labels;
          for (this.labels = [], this.enterScope(320); this.type !== x.braceR; ) {
            var i2 = this.parseStatement(null);
            e10.body.push(i2);
          }
          return this.next(), this.exitScope(), this.labels = t3, this.finishNode(e10, "StaticBlock");
        }, O.parseClassId = function(e10, t3) {
          this.type === x.name ? (e10.id = this.parseIdent(), t3 && this.checkLValSimple(e10.id, 2, false)) : (true === t3 && this.unexpected(), e10.id = null);
        }, O.parseClassSuper = function(e10) {
          e10.superClass = this.eat(x._extends) ? this.parseExprSubscripts(null, false) : null;
        }, O.enterClassBody = function() {
          var e10 = { declared: /* @__PURE__ */ Object.create(null), used: [] };
          return this.privateNameStack.push(e10), e10.declared;
        }, O.exitClassBody = function() {
          var e10 = this.privateNameStack.pop(), t3 = e10.declared, i2 = e10.used;
          if (this.options.checkPrivateFields) for (var s2 = this.privateNameStack.length, r2 = 0 === s2 ? null : this.privateNameStack[s2 - 1], n2 = 0; n2 < i2.length; ++n2) {
            var a2 = i2[n2];
            w(t3, a2.name) || (r2 ? r2.used.push(a2) : this.raiseRecoverable(a2.start, "Private field '#" + a2.name + "' must be declared in an enclosing class"));
          }
        }, O.parseExportAllDeclaration = function(e10, t3) {
          return this.options.ecmaVersion >= 11 && (this.eatContextual("as") ? (e10.exported = this.parseModuleExportName(), this.checkExport(t3, e10.exported, this.lastTokStart)) : e10.exported = null), this.expectContextual("from"), this.type !== x.string && this.unexpected(), e10.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (e10.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(e10, "ExportAllDeclaration");
        }, O.parseExport = function(e10, t3) {
          if (this.next(), this.eat(x.star)) return this.parseExportAllDeclaration(e10, t3);
          if (this.eat(x._default)) return this.checkExport(t3, "default", this.lastTokStart), e10.declaration = this.parseExportDefaultDeclaration(), this.finishNode(e10, "ExportDefaultDeclaration");
          if (this.shouldParseExportStatement()) e10.declaration = this.parseExportDeclaration(e10), "VariableDeclaration" === e10.declaration.type ? this.checkVariableExport(t3, e10.declaration.declarations) : this.checkExport(t3, e10.declaration.id, e10.declaration.id.start), e10.specifiers = [], e10.source = null, this.options.ecmaVersion >= 16 && (e10.attributes = []);
          else {
            if (e10.declaration = null, e10.specifiers = this.parseExportSpecifiers(t3), this.eatContextual("from")) this.type !== x.string && this.unexpected(), e10.source = this.parseExprAtom(), this.options.ecmaVersion >= 16 && (e10.attributes = this.parseWithClause());
            else {
              for (var i2 = 0, s2 = e10.specifiers; i2 < s2.length; i2 += 1) {
                var r2 = s2[i2];
                this.checkUnreserved(r2.local), this.checkLocalExport(r2.local), "Literal" === r2.local.type && this.raise(r2.local.start, "A string literal cannot be used as an exported binding without `from`.");
              }
              e10.source = null, this.options.ecmaVersion >= 16 && (e10.attributes = []);
            }
            this.semicolon();
          }
          return this.finishNode(e10, "ExportNamedDeclaration");
        }, O.parseExportDeclaration = function(e10) {
          return this.parseStatement(null);
        }, O.parseExportDefaultDeclaration = function() {
          if (this.type === x._function || (e10 = this.isAsyncFunction())) {
            var e10, t3 = this.startNode();
            return this.next(), e10 && this.next(), this.parseFunction(t3, 4 | j, false, e10);
          }
          if (this.type === x._class) {
            var i2 = this.startNode();
            return this.parseClass(i2, "nullableID");
          }
          var s2 = this.parseMaybeAssign();
          return this.semicolon(), s2;
        }, O.checkExport = function(e10, t3, i2) {
          e10 && ("string" != typeof t3 && (t3 = "Identifier" === t3.type ? t3.name : t3.value), w(e10, t3) && this.raiseRecoverable(i2, "Duplicate export '" + t3 + "'"), e10[t3] = true);
        }, O.checkPatternExport = function(e10, t3) {
          var i2 = t3.type;
          if ("Identifier" === i2) this.checkExport(e10, t3, t3.start);
          else if ("ObjectPattern" === i2) for (var s2 = 0, r2 = t3.properties; s2 < r2.length; s2 += 1) {
            var n2 = r2[s2];
            this.checkPatternExport(e10, n2);
          }
          else if ("ArrayPattern" === i2) for (var a2 = 0, o2 = t3.elements; a2 < o2.length; a2 += 1) {
            var h2 = o2[a2];
            h2 && this.checkPatternExport(e10, h2);
          }
          else "Property" === i2 ? this.checkPatternExport(e10, t3.value) : "AssignmentPattern" === i2 ? this.checkPatternExport(e10, t3.left) : "RestElement" === i2 && this.checkPatternExport(e10, t3.argument);
        }, O.checkVariableExport = function(e10, t3) {
          if (e10) for (var i2 = 0; i2 < t3.length; i2 += 1) {
            var s2 = t3[i2];
            this.checkPatternExport(e10, s2.id);
          }
        }, O.shouldParseExportStatement = function() {
          return "var" === this.type.keyword || "const" === this.type.keyword || "class" === this.type.keyword || "function" === this.type.keyword || this.isLet() || this.isAsyncFunction();
        }, O.parseExportSpecifier = function(e10) {
          var t3 = this.startNode();
          return t3.local = this.parseModuleExportName(), t3.exported = this.eatContextual("as") ? this.parseModuleExportName() : t3.local, this.checkExport(e10, t3.exported, t3.exported.start), this.finishNode(t3, "ExportSpecifier");
        }, O.parseExportSpecifiers = function(e10) {
          var t3 = [], i2 = true;
          for (this.expect(x.braceL); !this.eat(x.braceR); ) {
            if (i2) i2 = false;
            else if (this.expect(x.comma), this.afterTrailingComma(x.braceR)) break;
            t3.push(this.parseExportSpecifier(e10));
          }
          return t3;
        }, O.parseImport = function(e10) {
          return this.next(), this.type === x.string ? (e10.specifiers = M, e10.source = this.parseExprAtom()) : (e10.specifiers = this.parseImportSpecifiers(), this.expectContextual("from"), e10.source = this.type === x.string ? this.parseExprAtom() : this.unexpected()), this.options.ecmaVersion >= 16 && (e10.attributes = this.parseWithClause()), this.semicolon(), this.finishNode(e10, "ImportDeclaration");
        }, O.parseImportSpecifier = function() {
          var e10 = this.startNode();
          return e10.imported = this.parseModuleExportName(), this.eatContextual("as") ? e10.local = this.parseIdent() : (this.checkUnreserved(e10.imported), e10.local = e10.imported), this.checkLValSimple(e10.local, 2), this.finishNode(e10, "ImportSpecifier");
        }, O.parseImportDefaultSpecifier = function() {
          var e10 = this.startNode();
          return e10.local = this.parseIdent(), this.checkLValSimple(e10.local, 2), this.finishNode(e10, "ImportDefaultSpecifier");
        }, O.parseImportNamespaceSpecifier = function() {
          var e10 = this.startNode();
          return this.next(), this.expectContextual("as"), e10.local = this.parseIdent(), this.checkLValSimple(e10.local, 2), this.finishNode(e10, "ImportNamespaceSpecifier");
        }, O.parseImportSpecifiers = function() {
          var e10 = [], t3 = true;
          if (this.type === x.name && (e10.push(this.parseImportDefaultSpecifier()), !this.eat(x.comma))) return e10;
          if (this.type === x.star) return e10.push(this.parseImportNamespaceSpecifier()), e10;
          for (this.expect(x.braceL); !this.eat(x.braceR); ) {
            if (t3) t3 = false;
            else if (this.expect(x.comma), this.afterTrailingComma(x.braceR)) break;
            e10.push(this.parseImportSpecifier());
          }
          return e10;
        }, O.parseWithClause = function() {
          var e10 = [];
          if (!this.eat(x._with)) return e10;
          this.expect(x.braceL);
          for (var t3 = {}, i2 = true; !this.eat(x.braceR); ) {
            if (i2) i2 = false;
            else if (this.expect(x.comma), this.afterTrailingComma(x.braceR)) break;
            var s2 = this.parseImportAttribute(), r2 = "Identifier" === s2.key.type ? s2.key.name : s2.key.value;
            w(t3, r2) && this.raiseRecoverable(s2.key.start, "Duplicate attribute key '" + r2 + "'"), t3[r2] = true, e10.push(s2);
          }
          return e10;
        }, O.parseImportAttribute = function() {
          var e10 = this.startNode();
          return e10.key = this.type === x.string ? this.parseExprAtom() : this.parseIdent("never" !== this.options.allowReserved), this.expect(x.colon), this.type !== x.string && this.unexpected(), e10.value = this.parseExprAtom(), this.finishNode(e10, "ImportAttribute");
        }, O.parseModuleExportName = function() {
          if (this.options.ecmaVersion >= 13 && this.type === x.string) {
            var e10 = this.parseLiteral(this.value);
            return R.test(e10.value) && this.raise(e10.start, "An export name cannot include a lone surrogate."), e10;
          }
          return this.parseIdent(true);
        }, O.adaptDirectivePrologue = function(e10) {
          for (var t3 = 0; t3 < e10.length && this.isDirectiveCandidate(e10[t3]); ++t3) e10[t3].directive = e10[t3].expression.raw.slice(1, -1);
        }, O.isDirectiveCandidate = function(e10) {
          return this.options.ecmaVersion >= 5 && "ExpressionStatement" === e10.type && "Literal" === e10.expression.type && "string" == typeof e10.expression.value && ('"' === this.input[e10.start] || "'" === this.input[e10.start]);
        };
        var F = acorn_Parser.prototype;
        F.toAssignable = function(e10, t3, i2) {
          if (this.options.ecmaVersion >= 6 && e10) switch (e10.type) {
            case "Identifier":
              this.inAsync && "await" === e10.name && this.raise(e10.start, "Cannot use 'await' as identifier inside an async function");
              break;
            case "ObjectPattern":
            case "ArrayPattern":
            case "AssignmentPattern":
            case "RestElement":
              break;
            case "ObjectExpression":
              e10.type = "ObjectPattern", i2 && this.checkPatternErrors(i2, true);
              for (var s2 = 0, r2 = e10.properties; s2 < r2.length; s2 += 1) {
                var n2 = r2[s2];
                this.toAssignable(n2, t3), "RestElement" === n2.type && ("ArrayPattern" === n2.argument.type || "ObjectPattern" === n2.argument.type) && this.raise(n2.argument.start, "Unexpected token");
              }
              break;
            case "Property":
              "init" !== e10.kind && this.raise(e10.key.start, "Object pattern can't contain getter or setter"), this.toAssignable(e10.value, t3);
              break;
            case "ArrayExpression":
              e10.type = "ArrayPattern", i2 && this.checkPatternErrors(i2, true), this.toAssignableList(e10.elements, t3);
              break;
            case "SpreadElement":
              e10.type = "RestElement", this.toAssignable(e10.argument, t3), "AssignmentPattern" === e10.argument.type && this.raise(e10.argument.start, "Rest elements cannot have a default value");
              break;
            case "AssignmentExpression":
              "=" !== e10.operator && this.raise(e10.left.end, "Only '=' operator can be used for specifying default value."), e10.type = "AssignmentPattern", delete e10.operator, this.toAssignable(e10.left, t3);
              break;
            case "ParenthesizedExpression":
              this.toAssignable(e10.expression, t3, i2);
              break;
            case "ChainExpression":
              this.raiseRecoverable(e10.start, "Optional chaining cannot appear in left-hand side");
              break;
            case "MemberExpression":
              if (!t3) break;
            default:
              this.raise(e10.start, "Assigning to rvalue");
          }
          else i2 && this.checkPatternErrors(i2, true);
          return e10;
        }, F.toAssignableList = function(e10, t3) {
          for (var i2 = e10.length, s2 = 0; s2 < i2; s2++) {
            var r2 = e10[s2];
            r2 && this.toAssignable(r2, t3);
          }
          if (i2) {
            var n2 = e10[i2 - 1];
            6 === this.options.ecmaVersion && t3 && n2 && "RestElement" === n2.type && "Identifier" !== n2.argument.type && this.unexpected(n2.argument.start);
          }
          return e10;
        }, F.parseSpread = function(e10) {
          var t3 = this.startNode();
          return this.next(), t3.argument = this.parseMaybeAssign(false, e10), this.finishNode(t3, "SpreadElement");
        }, F.parseRestBinding = function() {
          var e10 = this.startNode();
          return this.next(), 6 === this.options.ecmaVersion && this.type !== x.name && this.unexpected(), e10.argument = this.parseBindingAtom(), this.finishNode(e10, "RestElement");
        }, F.parseBindingAtom = function() {
          if (this.options.ecmaVersion >= 6) switch (this.type) {
            case x.bracketL:
              var e10 = this.startNode();
              return this.next(), e10.elements = this.parseBindingList(x.bracketR, true, true), this.finishNode(e10, "ArrayPattern");
            case x.braceL:
              return this.parseObj(true);
          }
          return this.parseIdent();
        }, F.parseBindingList = function(e10, t3, i2, s2) {
          for (var r2 = [], n2 = true; !this.eat(e10); ) if (n2 ? n2 = false : this.expect(x.comma), t3 && this.type === x.comma) r2.push(null);
          else if (i2 && this.afterTrailingComma(e10)) break;
          else if (this.type === x.ellipsis) {
            var a2 = this.parseRestBinding();
            this.parseBindingListItem(a2), r2.push(a2), this.type === x.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.expect(e10);
            break;
          } else r2.push(this.parseAssignableListItem(s2));
          return r2;
        }, F.parseAssignableListItem = function(e10) {
          var t3 = this.parseMaybeDefault(this.start, this.startLoc);
          return this.parseBindingListItem(t3), t3;
        }, F.parseBindingListItem = function(e10) {
          return e10;
        }, F.parseMaybeDefault = function(e10, t3, i2) {
          if (i2 = i2 || this.parseBindingAtom(), this.options.ecmaVersion < 6 || !this.eat(x.eq)) return i2;
          var s2 = this.startNodeAt(e10, t3);
          return s2.left = i2, s2.right = this.parseMaybeAssign(), this.finishNode(s2, "AssignmentPattern");
        }, F.checkLValSimple = function(e10, t3, i2) {
          void 0 === t3 && (t3 = 0);
          var s2 = 0 !== t3;
          switch (e10.type) {
            case "Identifier":
              this.strict && this.reservedWordsStrictBind.test(e10.name) && this.raiseRecoverable(e10.start, (s2 ? "Binding " : "Assigning to ") + e10.name + " in strict mode"), s2 && (2 === t3 && "let" === e10.name && this.raiseRecoverable(e10.start, "let is disallowed as a lexically bound name"), i2 && (w(i2, e10.name) && this.raiseRecoverable(e10.start, "Argument name clash"), i2[e10.name] = true), 5 !== t3 && this.declareName(e10.name, t3, e10.start));
              break;
            case "ChainExpression":
              this.raiseRecoverable(e10.start, "Optional chaining cannot appear in left-hand side");
              break;
            case "MemberExpression":
              s2 && this.raiseRecoverable(e10.start, "Binding member expression");
              break;
            case "ParenthesizedExpression":
              return s2 && this.raiseRecoverable(e10.start, "Binding parenthesized expression"), this.checkLValSimple(e10.expression, t3, i2);
            default:
              this.raise(e10.start, (s2 ? "Binding" : "Assigning to") + " rvalue");
          }
        }, F.checkLValPattern = function(e10, t3, i2) {
          switch (void 0 === t3 && (t3 = 0), e10.type) {
            case "ObjectPattern":
              for (var s2 = 0, r2 = e10.properties; s2 < r2.length; s2 += 1) {
                var n2 = r2[s2];
                this.checkLValInnerPattern(n2, t3, i2);
              }
              break;
            case "ArrayPattern":
              for (var a2 = 0, o2 = e10.elements; a2 < o2.length; a2 += 1) {
                var h2 = o2[a2];
                h2 && this.checkLValInnerPattern(h2, t3, i2);
              }
              break;
            default:
              this.checkLValSimple(e10, t3, i2);
          }
        }, F.checkLValInnerPattern = function(e10, t3, i2) {
          switch (void 0 === t3 && (t3 = 0), e10.type) {
            case "Property":
              this.checkLValInnerPattern(e10.value, t3, i2);
              break;
            case "AssignmentPattern":
              this.checkLValPattern(e10.left, t3, i2);
              break;
            case "RestElement":
              this.checkLValPattern(e10.argument, t3, i2);
              break;
            default:
              this.checkLValPattern(e10, t3, i2);
          }
        };
        var acorn_TokContext = function(e10, t3, i2, s2, r2) {
          this.token = e10, this.isExpr = !!t3, this.preserveSpace = !!i2, this.override = s2, this.generator = !!r2;
        }, $ = { b_stat: new acorn_TokContext("{", false), b_expr: new acorn_TokContext("{", true), b_tmpl: new acorn_TokContext("${", false), p_stat: new acorn_TokContext("(", false), p_expr: new acorn_TokContext("(", true), q_tmpl: new acorn_TokContext("`", true, true, function(e10) {
          return e10.tryReadTemplateToken();
        }), f_stat: new acorn_TokContext("function", false), f_expr: new acorn_TokContext("function", true), f_expr_gen: new acorn_TokContext("function", true, false, null, true), f_gen: new acorn_TokContext("function", false, false, null, true) }, q = acorn_Parser.prototype;
        q.initialContext = function() {
          return [$.b_stat];
        }, q.curContext = function() {
          return this.context[this.context.length - 1];
        }, q.braceIsBlock = function(e10) {
          var t3 = this.curContext();
          return t3 === $.f_expr || t3 === $.f_stat || (e10 === x.colon && (t3 === $.b_stat || t3 === $.b_expr) ? !t3.isExpr : e10 === x._return || e10 === x.name && this.exprAllowed ? v.test(this.input.slice(this.lastTokEnd, this.start)) : e10 === x._else || e10 === x.semi || e10 === x.eof || e10 === x.parenR || e10 === x.arrow || (e10 === x.braceL ? t3 === $.b_stat : e10 !== x._var && e10 !== x._const && e10 !== x.name && !this.exprAllowed));
        }, q.inGeneratorContext = function() {
          for (var e10 = this.context.length - 1; e10 >= 1; e10--) {
            var t3 = this.context[e10];
            if ("function" === t3.token) return t3.generator;
          }
          return false;
        }, q.updateContext = function(e10) {
          var t3, i2 = this.type;
          i2.keyword && e10 === x.dot ? this.exprAllowed = false : (t3 = i2.updateContext) ? t3.call(this, e10) : this.exprAllowed = i2.beforeExpr;
        }, q.overrideContext = function(e10) {
          this.curContext() !== e10 && (this.context[this.context.length - 1] = e10);
        }, x.parenR.updateContext = x.braceR.updateContext = function() {
          if (1 === this.context.length) {
            this.exprAllowed = true;
            return;
          }
          var e10 = this.context.pop();
          e10 === $.b_stat && "function" === this.curContext().token && (e10 = this.context.pop()), this.exprAllowed = !e10.isExpr;
        }, x.braceL.updateContext = function(e10) {
          this.context.push(this.braceIsBlock(e10) ? $.b_stat : $.b_expr), this.exprAllowed = true;
        }, x.dollarBraceL.updateContext = function() {
          this.context.push($.b_tmpl), this.exprAllowed = true;
        }, x.parenL.updateContext = function(e10) {
          var t3 = e10 === x._if || e10 === x._for || e10 === x._with || e10 === x._while;
          this.context.push(t3 ? $.p_stat : $.p_expr), this.exprAllowed = true;
        }, x.incDec.updateContext = function() {
        }, x._function.updateContext = x._class.updateContext = function(e10) {
          e10.beforeExpr && e10 !== x._else && (e10 !== x.semi || this.curContext() === $.p_stat) && !(e10 === x._return && v.test(this.input.slice(this.lastTokEnd, this.start))) && (e10 !== x.colon && e10 !== x.braceL || this.curContext() !== $.b_stat) ? this.context.push($.f_expr) : this.context.push($.f_stat), this.exprAllowed = false;
        }, x.colon.updateContext = function() {
          "function" === this.curContext().token && this.context.pop(), this.exprAllowed = true;
        }, x.backQuote.updateContext = function() {
          this.curContext() === $.q_tmpl ? this.context.pop() : this.context.push($.q_tmpl), this.exprAllowed = false;
        }, x.star.updateContext = function(e10) {
          if (e10 === x._function) {
            var t3 = this.context.length - 1;
            this.context[t3] === $.f_expr ? this.context[t3] = $.f_expr_gen : this.context[t3] = $.f_gen;
          }
          this.exprAllowed = true;
        }, x.name.updateContext = function(e10) {
          var t3 = false;
          this.options.ecmaVersion >= 6 && e10 !== x.dot && ("of" === this.value && !this.exprAllowed || "yield" === this.value && this.inGeneratorContext()) && (t3 = true), this.exprAllowed = t3;
        };
        var W = acorn_Parser.prototype;
        function isLocalVariableAccess(e10) {
          return "Identifier" === e10.type || "ParenthesizedExpression" === e10.type && isLocalVariableAccess(e10.expression);
        }
        function isPrivateFieldAccess(e10) {
          return "MemberExpression" === e10.type && "PrivateIdentifier" === e10.property.type || "ChainExpression" === e10.type && isPrivateFieldAccess(e10.expression) || "ParenthesizedExpression" === e10.type && isPrivateFieldAccess(e10.expression);
        }
        W.checkPropClash = function(e10, t3, i2) {
          if ((!(this.options.ecmaVersion >= 9) || "SpreadElement" !== e10.type) && (!(this.options.ecmaVersion >= 6) || !e10.computed && !e10.method && !e10.shorthand)) {
            var s2, r2 = e10.key;
            switch (r2.type) {
              case "Identifier":
                s2 = r2.name;
                break;
              case "Literal":
                s2 = String(r2.value);
                break;
              default:
                return;
            }
            var n2 = e10.kind;
            if (this.options.ecmaVersion >= 6) {
              "__proto__" === s2 && "init" === n2 && (t3.proto && (i2 ? i2.doubleProto < 0 && (i2.doubleProto = r2.start) : this.raiseRecoverable(r2.start, "Redefinition of __proto__ property")), t3.proto = true);
              return;
            }
            var a2 = t3[s2 = "$" + s2];
            a2 ? ("init" === n2 ? this.strict && a2.init || a2.get || a2.set : a2.init || a2[n2]) && this.raiseRecoverable(r2.start, "Redefinition of property") : a2 = t3[s2] = { init: false, get: false, set: false }, a2[n2] = true;
          }
        }, W.parseExpression = function(e10, t3) {
          var i2 = this.start, s2 = this.startLoc, r2 = this.parseMaybeAssign(e10, t3);
          if (this.type === x.comma) {
            var n2 = this.startNodeAt(i2, s2);
            for (n2.expressions = [r2]; this.eat(x.comma); ) n2.expressions.push(this.parseMaybeAssign(e10, t3));
            return this.finishNode(n2, "SequenceExpression");
          }
          return r2;
        }, W.parseMaybeAssign = function(e10, t3, i2) {
          if (this.isContextual("yield")) if (this.inGenerator) return this.parseYield(e10);
          else this.exprAllowed = false;
          var s2 = false, r2 = -1, n2 = -1, a2 = -1;
          t3 ? (r2 = t3.parenthesizedAssign, n2 = t3.trailingComma, a2 = t3.doubleProto, t3.parenthesizedAssign = t3.trailingComma = -1) : (t3 = new acorn_DestructuringErrors(), s2 = true);
          var o2 = this.start, h2 = this.startLoc;
          (this.type === x.parenL || this.type === x.name) && (this.potentialArrowAt = this.start, this.potentialArrowInForAwait = "await" === e10);
          var c2 = this.parseMaybeConditional(e10, t3);
          if (i2 && (c2 = i2.call(this, c2, o2, h2)), this.type.isAssign) {
            var p2 = this.startNodeAt(o2, h2);
            return p2.operator = this.value, this.type === x.eq && (c2 = this.toAssignable(c2, false, t3)), s2 || (t3.parenthesizedAssign = t3.trailingComma = t3.doubleProto = -1), t3.shorthandAssign >= c2.start && (t3.shorthandAssign = -1), this.type === x.eq ? this.checkLValPattern(c2) : this.checkLValSimple(c2), p2.left = c2, this.next(), p2.right = this.parseMaybeAssign(e10), a2 > -1 && (t3.doubleProto = a2), this.finishNode(p2, "AssignmentExpression");
          }
          return s2 && this.checkExpressionErrors(t3, true), r2 > -1 && (t3.parenthesizedAssign = r2), n2 > -1 && (t3.trailingComma = n2), c2;
        }, W.parseMaybeConditional = function(e10, t3) {
          var i2 = this.start, s2 = this.startLoc, r2 = this.parseExprOps(e10, t3);
          if (this.checkExpressionErrors(t3)) return r2;
          if (this.eat(x.question)) {
            var n2 = this.startNodeAt(i2, s2);
            return n2.test = r2, n2.consequent = this.parseMaybeAssign(), this.expect(x.colon), n2.alternate = this.parseMaybeAssign(e10), this.finishNode(n2, "ConditionalExpression");
          }
          return r2;
        }, W.parseExprOps = function(e10, t3) {
          var i2 = this.start, s2 = this.startLoc, r2 = this.parseMaybeUnary(t3, false, false, e10);
          return this.checkExpressionErrors(t3) || r2.start === i2 && "ArrowFunctionExpression" === r2.type ? r2 : this.parseExprOp(r2, i2, s2, -1, e10);
        }, W.parseExprOp = function(e10, t3, i2, s2, r2) {
          var n2 = this.type.binop;
          if (null != n2 && (!r2 || this.type !== x._in) && n2 > s2) {
            var a2 = this.type === x.logicalOR || this.type === x.logicalAND, o2 = this.type === x.coalesce;
            o2 && (n2 = x.logicalAND.binop);
            var h2 = this.value;
            this.next();
            var c2 = this.start, p2 = this.startLoc, l2 = this.parseExprOp(this.parseMaybeUnary(null, false, false, r2), c2, p2, n2, r2), u2 = this.buildBinary(t3, i2, e10, l2, h2, a2 || o2);
            return (a2 && this.type === x.coalesce || o2 && (this.type === x.logicalOR || this.type === x.logicalAND)) && this.raiseRecoverable(this.start, "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses"), this.parseExprOp(u2, t3, i2, s2, r2);
          }
          return e10;
        }, W.buildBinary = function(e10, t3, i2, s2, r2, n2) {
          "PrivateIdentifier" === s2.type && this.raise(s2.start, "Private identifier can only be left side of binary expression");
          var a2 = this.startNodeAt(e10, t3);
          return a2.left = i2, a2.operator = r2, a2.right = s2, this.finishNode(a2, n2 ? "LogicalExpression" : "BinaryExpression");
        }, W.parseMaybeUnary = function(e10, t3, i2, s2) {
          var r2, n2 = this.start, a2 = this.startLoc;
          if (this.isContextual("await") && this.canAwait) r2 = this.parseAwait(s2), t3 = true;
          else if (this.type.prefix) {
            var o2 = this.startNode(), h2 = this.type === x.incDec;
            o2.operator = this.value, o2.prefix = true, this.next(), o2.argument = this.parseMaybeUnary(null, true, h2, s2), this.checkExpressionErrors(e10, true), h2 ? this.checkLValSimple(o2.argument) : this.strict && "delete" === o2.operator && isLocalVariableAccess(o2.argument) ? this.raiseRecoverable(o2.start, "Deleting local variable in strict mode") : "delete" === o2.operator && isPrivateFieldAccess(o2.argument) ? this.raiseRecoverable(o2.start, "Private fields can not be deleted") : t3 = true, r2 = this.finishNode(o2, h2 ? "UpdateExpression" : "UnaryExpression");
          } else if (t3 || this.type !== x.privateId) {
            if (r2 = this.parseExprSubscripts(e10, s2), this.checkExpressionErrors(e10)) return r2;
            for (; this.type.postfix && !this.canInsertSemicolon(); ) {
              var c2 = this.startNodeAt(n2, a2);
              c2.operator = this.value, c2.prefix = false, c2.argument = r2, this.checkLValSimple(r2), this.next(), r2 = this.finishNode(c2, "UpdateExpression");
            }
          } else (s2 || 0 === this.privateNameStack.length) && this.options.checkPrivateFields && this.unexpected(), r2 = this.parsePrivateIdent(), this.type !== x._in && this.unexpected();
          return !i2 && this.eat(x.starstar) ? t3 ? void this.unexpected(this.lastTokStart) : this.buildBinary(n2, a2, r2, this.parseMaybeUnary(null, false, false, s2), "**", false) : r2;
        }, W.parseExprSubscripts = function(e10, t3) {
          var i2 = this.start, s2 = this.startLoc, r2 = this.parseExprAtom(e10, t3);
          if ("ArrowFunctionExpression" === r2.type && ")" !== this.input.slice(this.lastTokStart, this.lastTokEnd)) return r2;
          var n2 = this.parseSubscripts(r2, i2, s2, false, t3);
          return e10 && "MemberExpression" === n2.type && (e10.parenthesizedAssign >= n2.start && (e10.parenthesizedAssign = -1), e10.parenthesizedBind >= n2.start && (e10.parenthesizedBind = -1), e10.trailingComma >= n2.start && (e10.trailingComma = -1)), n2;
        }, W.parseSubscripts = function(e10, t3, i2, s2, r2) {
          for (var n2 = this.options.ecmaVersion >= 8 && "Identifier" === e10.type && "async" === e10.name && this.lastTokEnd === e10.end && !this.canInsertSemicolon() && e10.end - e10.start == 5 && this.potentialArrowAt === e10.start, a2 = false; ; ) {
            var o2 = this.parseSubscript(e10, t3, i2, s2, n2, a2, r2);
            if (o2.optional && (a2 = true), o2 === e10 || "ArrowFunctionExpression" === o2.type) {
              if (a2) {
                var h2 = this.startNodeAt(t3, i2);
                h2.expression = o2, o2 = this.finishNode(h2, "ChainExpression");
              }
              return o2;
            }
            e10 = o2;
          }
        }, W.shouldParseAsyncArrow = function() {
          return !this.canInsertSemicolon() && this.eat(x.arrow);
        }, W.parseSubscriptAsyncArrow = function(e10, t3, i2, s2) {
          return this.parseArrowExpression(this.startNodeAt(e10, t3), i2, true, s2);
        }, W.parseSubscript = function(e10, t3, i2, s2, r2, n2, a2) {
          var o2 = this.options.ecmaVersion >= 11, h2 = o2 && this.eat(x.questionDot);
          s2 && h2 && this.raise(this.lastTokStart, "Optional chaining cannot appear in the callee of new expressions");
          var c2 = this.eat(x.bracketL);
          if (c2 || h2 && this.type !== x.parenL && this.type !== x.backQuote || this.eat(x.dot)) {
            var p2 = this.startNodeAt(t3, i2);
            p2.object = e10, c2 ? (p2.property = this.parseExpression(), this.expect(x.bracketR)) : this.type === x.privateId && "Super" !== e10.type ? p2.property = this.parsePrivateIdent() : p2.property = this.parseIdent("never" !== this.options.allowReserved), p2.computed = !!c2, o2 && (p2.optional = h2), e10 = this.finishNode(p2, "MemberExpression");
          } else if (!s2 && this.eat(x.parenL)) {
            var l2 = new acorn_DestructuringErrors(), u2 = this.yieldPos, d2 = this.awaitPos, f2 = this.awaitIdentPos;
            this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0;
            var m2 = this.parseExprList(x.parenR, this.options.ecmaVersion >= 8, false, l2);
            if (r2 && !h2 && this.shouldParseAsyncArrow()) return this.checkPatternErrors(l2, false), this.checkYieldAwaitInDefaultParams(), this.awaitIdentPos > 0 && this.raise(this.awaitIdentPos, "Cannot use 'await' as identifier inside an async function"), this.yieldPos = u2, this.awaitPos = d2, this.awaitIdentPos = f2, this.parseSubscriptAsyncArrow(t3, i2, m2, a2);
            this.checkExpressionErrors(l2, true), this.yieldPos = u2 || this.yieldPos, this.awaitPos = d2 || this.awaitPos, this.awaitIdentPos = f2 || this.awaitIdentPos;
            var g2 = this.startNodeAt(t3, i2);
            g2.callee = e10, g2.arguments = m2, o2 && (g2.optional = h2), e10 = this.finishNode(g2, "CallExpression");
          } else if (this.type === x.backQuote) {
            (h2 || n2) && this.raise(this.start, "Optional chaining cannot appear in the tag of tagged template expressions");
            var _2 = this.startNodeAt(t3, i2);
            _2.tag = e10, _2.quasi = this.parseTemplate({ isTagged: true }), e10 = this.finishNode(_2, "TaggedTemplateExpression");
          }
          return e10;
        }, W.parseExprAtom = function(e10, t3, i2) {
          this.type === x.slash && this.readRegexp();
          var s2, r2 = this.potentialArrowAt === this.start;
          switch (this.type) {
            case x._super:
              return this.allowSuper || this.raise(this.start, "'super' keyword outside a method"), s2 = this.startNode(), this.next(), this.type !== x.parenL || this.allowDirectSuper || this.raise(s2.start, "super() call outside constructor of a subclass"), this.type !== x.dot && this.type !== x.bracketL && this.type !== x.parenL && this.unexpected(), this.finishNode(s2, "Super");
            case x._this:
              return s2 = this.startNode(), this.next(), this.finishNode(s2, "ThisExpression");
            case x.name:
              var n2 = this.start, a2 = this.startLoc, o2 = this.containsEsc, h2 = this.parseIdent(false);
              if (this.options.ecmaVersion >= 8 && !o2 && "async" === h2.name && !this.canInsertSemicolon() && this.eat(x._function)) return this.overrideContext($.f_expr), this.parseFunction(this.startNodeAt(n2, a2), 0, false, true, t3);
              if (r2 && !this.canInsertSemicolon()) {
                if (this.eat(x.arrow)) return this.parseArrowExpression(this.startNodeAt(n2, a2), [h2], false, t3);
                if (this.options.ecmaVersion >= 8 && "async" === h2.name && this.type === x.name && !o2 && (!this.potentialArrowInForAwait || "of" !== this.value || this.containsEsc)) return h2 = this.parseIdent(false), (this.canInsertSemicolon() || !this.eat(x.arrow)) && this.unexpected(), this.parseArrowExpression(this.startNodeAt(n2, a2), [h2], true, t3);
              }
              return h2;
            case x.regexp:
              var c2 = this.value;
              return (s2 = this.parseLiteral(c2.value)).regex = { pattern: c2.pattern, flags: c2.flags }, s2;
            case x.num:
            case x.string:
              return this.parseLiteral(this.value);
            case x._null:
            case x._true:
            case x._false:
              return (s2 = this.startNode()).value = this.type === x._null ? null : this.type === x._true, s2.raw = this.type.keyword, this.next(), this.finishNode(s2, "Literal");
            case x.parenL:
              var p2 = this.start, l2 = this.parseParenAndDistinguishExpression(r2, t3);
              return e10 && (e10.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(l2) && (e10.parenthesizedAssign = p2), e10.parenthesizedBind < 0 && (e10.parenthesizedBind = p2)), l2;
            case x.bracketL:
              return s2 = this.startNode(), this.next(), s2.elements = this.parseExprList(x.bracketR, true, true, e10), this.finishNode(s2, "ArrayExpression");
            case x.braceL:
              return this.overrideContext($.b_expr), this.parseObj(false, e10);
            case x._function:
              return s2 = this.startNode(), this.next(), this.parseFunction(s2, 0);
            case x._class:
              return this.parseClass(this.startNode(), false);
            case x._new:
              return this.parseNew();
            case x.backQuote:
              return this.parseTemplate();
            case x._import:
              if (this.options.ecmaVersion >= 11) return this.parseExprImport(i2);
              return this.unexpected();
            default:
              return this.parseExprAtomDefault();
          }
        }, W.parseExprAtomDefault = function() {
          this.unexpected();
        }, W.parseExprImport = function(e10) {
          var t3 = this.startNode();
          if (this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword import"), this.next(), this.type === x.parenL && !e10) return this.parseDynamicImport(t3);
          if (this.type === x.dot) {
            var i2 = this.startNodeAt(t3.start, t3.loc && t3.loc.start);
            return i2.name = "import", t3.meta = this.finishNode(i2, "Identifier"), this.parseImportMeta(t3);
          }
          this.unexpected();
        }, W.parseDynamicImport = function(e10) {
          if (this.next(), e10.source = this.parseMaybeAssign(), this.options.ecmaVersion >= 16) this.eat(x.parenR) ? e10.options = null : (this.expect(x.comma), this.afterTrailingComma(x.parenR) ? e10.options = null : (e10.options = this.parseMaybeAssign(), !this.eat(x.parenR) && (this.expect(x.comma), this.afterTrailingComma(x.parenR) || this.unexpected())));
          else if (!this.eat(x.parenR)) {
            var t3 = this.start;
            this.eat(x.comma) && this.eat(x.parenR) ? this.raiseRecoverable(t3, "Trailing comma is not allowed in import()") : this.unexpected(t3);
          }
          return this.finishNode(e10, "ImportExpression");
        }, W.parseImportMeta = function(e10) {
          this.next();
          var t3 = this.containsEsc;
          return e10.property = this.parseIdent(true), "meta" !== e10.property.name && this.raiseRecoverable(e10.property.start, "The only valid meta property for import is 'import.meta'"), t3 && this.raiseRecoverable(e10.start, "'import.meta' must not contain escaped characters"), "module" === this.options.sourceType || this.options.allowImportExportEverywhere || this.raiseRecoverable(e10.start, "Cannot use 'import.meta' outside a module"), this.finishNode(e10, "MetaProperty");
        }, W.parseLiteral = function(e10) {
          var t3 = this.startNode();
          return t3.value = e10, t3.raw = this.input.slice(this.start, this.end), 110 === t3.raw.charCodeAt(t3.raw.length - 1) && (t3.bigint = null != t3.value ? t3.value.toString() : t3.raw.slice(0, -1).replace(/_/g, "")), this.next(), this.finishNode(t3, "Literal");
        }, W.parseParenExpression = function() {
          this.expect(x.parenL);
          var e10 = this.parseExpression();
          return this.expect(x.parenR), e10;
        }, W.shouldParseArrow = function(e10) {
          return !this.canInsertSemicolon();
        }, W.parseParenAndDistinguishExpression = function(e10, t3) {
          var i2, s2 = this.start, r2 = this.startLoc, n2 = this.options.ecmaVersion >= 8;
          if (this.options.ecmaVersion >= 6) {
            this.next();
            var a2, o2 = this.start, h2 = this.startLoc, c2 = [], p2 = true, l2 = false, u2 = new acorn_DestructuringErrors(), d2 = this.yieldPos, f2 = this.awaitPos;
            for (this.yieldPos = 0, this.awaitPos = 0; this.type !== x.parenR; ) {
              if (p2 ? p2 = false : this.expect(x.comma), n2 && this.afterTrailingComma(x.parenR, true)) {
                l2 = true;
                break;
              }
              if (this.type === x.ellipsis) {
                a2 = this.start, c2.push(this.parseParenItem(this.parseRestBinding())), this.type === x.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element");
                break;
              }
              c2.push(this.parseMaybeAssign(false, u2, this.parseParenItem));
            }
            var m2 = this.lastTokEnd, g2 = this.lastTokEndLoc;
            if (this.expect(x.parenR), e10 && this.shouldParseArrow(c2) && this.eat(x.arrow)) return this.checkPatternErrors(u2, false), this.checkYieldAwaitInDefaultParams(), this.yieldPos = d2, this.awaitPos = f2, this.parseParenArrowList(s2, r2, c2, t3);
            (!c2.length || l2) && this.unexpected(this.lastTokStart), a2 && this.unexpected(a2), this.checkExpressionErrors(u2, true), this.yieldPos = d2 || this.yieldPos, this.awaitPos = f2 || this.awaitPos, c2.length > 1 ? ((i2 = this.startNodeAt(o2, h2)).expressions = c2, this.finishNodeAt(i2, "SequenceExpression", m2, g2)) : i2 = c2[0];
          } else i2 = this.parseParenExpression();
          if (!this.options.preserveParens) return i2;
          var _2 = this.startNodeAt(s2, r2);
          return _2.expression = i2, this.finishNode(_2, "ParenthesizedExpression");
        }, W.parseParenItem = function(e10) {
          return e10;
        }, W.parseParenArrowList = function(e10, t3, i2, s2) {
          return this.parseArrowExpression(this.startNodeAt(e10, t3), i2, false, s2);
        };
        var G = [];
        W.parseNew = function() {
          this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword new");
          var e10 = this.startNode();
          if (this.next(), this.options.ecmaVersion >= 6 && this.type === x.dot) {
            var t3 = this.startNodeAt(e10.start, e10.loc && e10.loc.start);
            t3.name = "new", e10.meta = this.finishNode(t3, "Identifier"), this.next();
            var i2 = this.containsEsc;
            return e10.property = this.parseIdent(true), "target" !== e10.property.name && this.raiseRecoverable(e10.property.start, "The only valid meta property for new is 'new.target'"), i2 && this.raiseRecoverable(e10.start, "'new.target' must not contain escaped characters"), this.allowNewDotTarget || this.raiseRecoverable(e10.start, "'new.target' can only be used in functions and class static block"), this.finishNode(e10, "MetaProperty");
          }
          var s2 = this.start, r2 = this.startLoc;
          return e10.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), s2, r2, true, false), this.eat(x.parenL) ? e10.arguments = this.parseExprList(x.parenR, this.options.ecmaVersion >= 8, false) : e10.arguments = G, this.finishNode(e10, "NewExpression");
        }, W.parseTemplateElement = function(e10) {
          var t3 = e10.isTagged, i2 = this.startNode();
          return this.type === x.invalidTemplate ? (t3 || this.raiseRecoverable(this.start, "Bad escape sequence in untagged template literal"), i2.value = { raw: this.value.replace(/\r\n?/g, "\n"), cooked: null }) : i2.value = { raw: this.input.slice(this.start, this.end).replace(/\r\n?/g, "\n"), cooked: this.value }, this.next(), i2.tail = this.type === x.backQuote, this.finishNode(i2, "TemplateElement");
        }, W.parseTemplate = function(e10) {
          void 0 === e10 && (e10 = {});
          var t3 = e10.isTagged;
          void 0 === t3 && (t3 = false);
          var i2 = this.startNode();
          this.next(), i2.expressions = [];
          var s2 = this.parseTemplateElement({ isTagged: t3 });
          for (i2.quasis = [s2]; !s2.tail; ) this.type === x.eof && this.raise(this.pos, "Unterminated template literal"), this.expect(x.dollarBraceL), i2.expressions.push(this.parseExpression()), this.expect(x.braceR), i2.quasis.push(s2 = this.parseTemplateElement({ isTagged: t3 }));
          return this.next(), this.finishNode(i2, "TemplateLiteral");
        }, W.isAsyncProp = function(e10) {
          return !e10.computed && "Identifier" === e10.key.type && "async" === e10.key.name && (this.type === x.name || this.type === x.num || this.type === x.string || this.type === x.bracketL || this.type.keyword || this.options.ecmaVersion >= 9 && this.type === x.star) && !v.test(this.input.slice(this.lastTokEnd, this.start));
        }, W.parseObj = function(e10, t3) {
          var i2 = this.startNode(), s2 = true, r2 = {};
          for (i2.properties = [], this.next(); !this.eat(x.braceR); ) {
            if (s2) s2 = false;
            else if (this.expect(x.comma), this.options.ecmaVersion >= 5 && this.afterTrailingComma(x.braceR)) break;
            var n2 = this.parseProperty(e10, t3);
            e10 || this.checkPropClash(n2, r2, t3), i2.properties.push(n2);
          }
          return this.finishNode(i2, e10 ? "ObjectPattern" : "ObjectExpression");
        }, W.parseProperty = function(e10, t3) {
          var i2, s2, r2, n2, a2 = this.startNode();
          if (this.options.ecmaVersion >= 9 && this.eat(x.ellipsis)) return e10 ? (a2.argument = this.parseIdent(false), this.type === x.comma && this.raiseRecoverable(this.start, "Comma is not permitted after the rest element"), this.finishNode(a2, "RestElement")) : (a2.argument = this.parseMaybeAssign(false, t3), this.type === x.comma && t3 && t3.trailingComma < 0 && (t3.trailingComma = this.start), this.finishNode(a2, "SpreadElement"));
          this.options.ecmaVersion >= 6 && (a2.method = false, a2.shorthand = false, (e10 || t3) && (r2 = this.start, n2 = this.startLoc), e10 || (i2 = this.eat(x.star)));
          var o2 = this.containsEsc;
          return this.parsePropertyName(a2), !e10 && !o2 && this.options.ecmaVersion >= 8 && !i2 && this.isAsyncProp(a2) ? (s2 = true, i2 = this.options.ecmaVersion >= 9 && this.eat(x.star), this.parsePropertyName(a2)) : s2 = false, this.parsePropertyValue(a2, e10, i2, s2, r2, n2, t3, o2), this.finishNode(a2, "Property");
        }, W.parseGetterSetter = function(e10) {
          var t3 = e10.key.name;
          this.parsePropertyName(e10), e10.value = this.parseMethod(false), e10.kind = t3;
          var i2 = +("get" !== e10.kind);
          if (e10.value.params.length !== i2) {
            var s2 = e10.value.start;
            "get" === e10.kind ? this.raiseRecoverable(s2, "getter should have no params") : this.raiseRecoverable(s2, "setter should have exactly one param");
          } else "set" === e10.kind && "RestElement" === e10.value.params[0].type && this.raiseRecoverable(e10.value.params[0].start, "Setter cannot use rest params");
        }, W.parsePropertyValue = function(e10, t3, i2, s2, r2, n2, a2, o2) {
          (i2 || s2) && this.type === x.colon && this.unexpected(), this.eat(x.colon) ? (e10.value = t3 ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, a2), e10.kind = "init") : this.options.ecmaVersion >= 6 && this.type === x.parenL ? (t3 && this.unexpected(), e10.method = true, e10.value = this.parseMethod(i2, s2), e10.kind = "init") : t3 || o2 || !(this.options.ecmaVersion >= 5) || e10.computed || "Identifier" !== e10.key.type || "get" !== e10.key.name && "set" !== e10.key.name || this.type === x.comma || this.type === x.braceR || this.type === x.eq ? this.options.ecmaVersion >= 6 && !e10.computed && "Identifier" === e10.key.type ? ((i2 || s2) && this.unexpected(), this.checkUnreserved(e10.key), "await" !== e10.key.name || this.awaitIdentPos || (this.awaitIdentPos = r2), t3 ? e10.value = this.parseMaybeDefault(r2, n2, this.copyNode(e10.key)) : this.type === x.eq && a2 ? (a2.shorthandAssign < 0 && (a2.shorthandAssign = this.start), e10.value = this.parseMaybeDefault(r2, n2, this.copyNode(e10.key))) : e10.value = this.copyNode(e10.key), e10.kind = "init", e10.shorthand = true) : this.unexpected() : ((i2 || s2) && this.unexpected(), this.parseGetterSetter(e10));
        }, W.parsePropertyName = function(e10) {
          if (this.options.ecmaVersion >= 6) if (this.eat(x.bracketL)) return e10.computed = true, e10.key = this.parseMaybeAssign(), this.expect(x.bracketR), e10.key;
          else e10.computed = false;
          return e10.key = this.type === x.num || this.type === x.string ? this.parseExprAtom() : this.parseIdent("never" !== this.options.allowReserved);
        }, W.initFunction = function(e10) {
          e10.id = null, this.options.ecmaVersion >= 6 && (e10.generator = e10.expression = false), this.options.ecmaVersion >= 8 && (e10.async = false);
        }, W.parseMethod = function(e10, t3, i2) {
          var s2 = this.startNode(), r2 = this.yieldPos, n2 = this.awaitPos, a2 = this.awaitIdentPos;
          return this.initFunction(s2), this.options.ecmaVersion >= 6 && (s2.generator = e10), this.options.ecmaVersion >= 8 && (s2.async = !!t3), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, this.enterScope(64 | functionFlags(t3, s2.generator) | 128 * !!i2), this.expect(x.parenL), s2.params = this.parseBindingList(x.parenR, false, this.options.ecmaVersion >= 8), this.checkYieldAwaitInDefaultParams(), this.parseFunctionBody(s2, false, true, false), this.yieldPos = r2, this.awaitPos = n2, this.awaitIdentPos = a2, this.finishNode(s2, "FunctionExpression");
        }, W.parseArrowExpression = function(e10, t3, i2, s2) {
          var r2 = this.yieldPos, n2 = this.awaitPos, a2 = this.awaitIdentPos;
          return this.enterScope(16 | functionFlags(i2, false)), this.initFunction(e10), this.options.ecmaVersion >= 8 && (e10.async = !!i2), this.yieldPos = 0, this.awaitPos = 0, this.awaitIdentPos = 0, e10.params = this.toAssignableList(t3, true), this.parseFunctionBody(e10, true, false, s2), this.yieldPos = r2, this.awaitPos = n2, this.awaitIdentPos = a2, this.finishNode(e10, "ArrowFunctionExpression");
        }, W.parseFunctionBody = function(e10, t3, i2, s2) {
          var r2 = t3 && this.type !== x.braceL, n2 = this.strict, a2 = false;
          if (r2) e10.body = this.parseMaybeAssign(s2), e10.expression = true, this.checkParams(e10, false);
          else {
            var o2 = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(e10.params);
            (!n2 || o2) && (a2 = this.strictDirective(this.end)) && o2 && this.raiseRecoverable(e10.start, "Illegal 'use strict' directive in function with non-simple parameter list");
            var h2 = this.labels;
            this.labels = [], a2 && (this.strict = true), this.checkParams(e10, !n2 && !a2 && !t3 && !i2 && this.isSimpleParamList(e10.params)), this.strict && e10.id && this.checkLValSimple(e10.id, 5), e10.body = this.parseBlock(false, void 0, a2 && !n2), e10.expression = false, this.adaptDirectivePrologue(e10.body.body), this.labels = h2;
          }
          this.exitScope();
        }, W.isSimpleParamList = function(e10) {
          for (var t3 = 0; t3 < e10.length; t3 += 1) if ("Identifier" !== e10[t3].type) return false;
          return true;
        }, W.checkParams = function(e10, t3) {
          for (var i2 = /* @__PURE__ */ Object.create(null), s2 = 0, r2 = e10.params; s2 < r2.length; s2 += 1) {
            var n2 = r2[s2];
            this.checkLValInnerPattern(n2, 1, t3 ? null : i2);
          }
        }, W.parseExprList = function(e10, t3, i2, s2) {
          for (var r2 = [], n2 = true; !this.eat(e10); ) {
            if (n2) n2 = false;
            else if (this.expect(x.comma), t3 && this.afterTrailingComma(e10)) break;
            var a2 = void 0;
            i2 && this.type === x.comma ? a2 = null : this.type === x.ellipsis ? (a2 = this.parseSpread(s2), s2 && this.type === x.comma && s2.trailingComma < 0 && (s2.trailingComma = this.start)) : a2 = this.parseMaybeAssign(false, s2), r2.push(a2);
          }
          return r2;
        }, W.checkUnreserved = function(e10) {
          var t3 = e10.start, i2 = e10.end, s2 = e10.name;
          this.inGenerator && "yield" === s2 && this.raiseRecoverable(t3, "Cannot use 'yield' as identifier inside a generator"), this.inAsync && "await" === s2 && this.raiseRecoverable(t3, "Cannot use 'await' as identifier inside an async function"), 259 & this.currentThisScope().flags || "arguments" !== s2 || this.raiseRecoverable(t3, "Cannot use 'arguments' in class field initializer"), this.inClassStaticBlock && ("arguments" === s2 || "await" === s2) && this.raise(t3, "Cannot use " + s2 + " in class static initialization block"), this.keywords.test(s2) && this.raise(t3, "Unexpected keyword '" + s2 + "'"), (!(this.options.ecmaVersion < 6) || -1 === this.input.slice(t3, i2).indexOf("\\")) && (this.strict ? this.reservedWordsStrict : this.reservedWords).test(s2) && (this.inAsync || "await" !== s2 || this.raiseRecoverable(t3, "Cannot use keyword 'await' outside an async function"), this.raiseRecoverable(t3, "The keyword '" + s2 + "' is reserved"));
        }, W.parseIdent = function(e10) {
          var t3 = this.parseIdentNode();
          return this.next(!!e10), this.finishNode(t3, "Identifier"), !e10 && (this.checkUnreserved(t3), "await" !== t3.name || this.awaitIdentPos || (this.awaitIdentPos = t3.start)), t3;
        }, W.parseIdentNode = function() {
          var e10 = this.startNode();
          return this.type === x.name ? e10.name = this.value : this.type.keyword ? (e10.name = this.type.keyword, ("class" === e10.name || "function" === e10.name) && (this.lastTokEnd !== this.lastTokStart + 1 || 46 !== this.input.charCodeAt(this.lastTokStart)) && this.context.pop(), this.type = x.name) : this.unexpected(), e10;
        }, W.parsePrivateIdent = function() {
          var e10 = this.startNode();
          return this.type === x.privateId ? e10.name = this.value : this.unexpected(), this.next(), this.finishNode(e10, "PrivateIdentifier"), this.options.checkPrivateFields && (0 === this.privateNameStack.length ? this.raise(e10.start, "Private field '#" + e10.name + "' must be declared in an enclosing class") : this.privateNameStack[this.privateNameStack.length - 1].used.push(e10)), e10;
        }, W.parseYield = function(e10) {
          this.yieldPos || (this.yieldPos = this.start);
          var t3 = this.startNode();
          return this.next(), this.type === x.semi || this.canInsertSemicolon() || this.type !== x.star && !this.type.startsExpr ? (t3.delegate = false, t3.argument = null) : (t3.delegate = this.eat(x.star), t3.argument = this.parseMaybeAssign(e10)), this.finishNode(t3, "YieldExpression");
        }, W.parseAwait = function(e10) {
          this.awaitPos || (this.awaitPos = this.start);
          var t3 = this.startNode();
          return this.next(), t3.argument = this.parseMaybeUnary(null, true, false, e10), this.finishNode(t3, "AwaitExpression");
        };
        var H = acorn_Parser.prototype;
        H.raise = function(e10, t3) {
          var i2 = getLineInfo(this.input, e10);
          t3 += " (" + i2.line + ":" + i2.column + ")", this.sourceFile && (t3 += " in " + this.sourceFile);
          var s2 = SyntaxError(t3);
          throw s2.pos = e10, s2.loc = i2, s2.raisedAt = this.pos, s2;
        }, H.raiseRecoverable = H.raise, H.curPosition = function() {
          if (this.options.locations) return new acorn_Position(this.curLine, this.pos - this.lineStart);
        };
        var z = acorn_Parser.prototype, acorn_Scope = function(e10) {
          this.flags = e10, this.var = [], this.lexical = [], this.functions = [];
        };
        z.enterScope = function(e10) {
          this.scopeStack.push(new acorn_Scope(e10));
        }, z.exitScope = function() {
          this.scopeStack.pop();
        }, z.treatFunctionsAsVarInScope = function(e10) {
          return 2 & e10.flags || !this.inModule && 1 & e10.flags;
        }, z.declareName = function(e10, t3, i2) {
          var s2 = false;
          if (2 === t3) {
            var r2 = this.currentScope();
            s2 = r2.lexical.indexOf(e10) > -1 || r2.functions.indexOf(e10) > -1 || r2.var.indexOf(e10) > -1, r2.lexical.push(e10), this.inModule && 1 & r2.flags && delete this.undefinedExports[e10];
          } else if (4 === t3) this.currentScope().lexical.push(e10);
          else if (3 === t3) {
            var n2 = this.currentScope();
            s2 = this.treatFunctionsAsVar ? n2.lexical.indexOf(e10) > -1 : n2.lexical.indexOf(e10) > -1 || n2.var.indexOf(e10) > -1, n2.functions.push(e10);
          } else for (var a2 = this.scopeStack.length - 1; a2 >= 0; --a2) {
            var o2 = this.scopeStack[a2];
            if (o2.lexical.indexOf(e10) > -1 && !(32 & o2.flags && o2.lexical[0] === e10) || !this.treatFunctionsAsVarInScope(o2) && o2.functions.indexOf(e10) > -1) {
              s2 = true;
              break;
            }
            if (o2.var.push(e10), this.inModule && 1 & o2.flags && delete this.undefinedExports[e10], 259 & o2.flags) break;
          }
          s2 && this.raiseRecoverable(i2, "Identifier '" + e10 + "' has already been declared");
        }, z.checkLocalExport = function(e10) {
          -1 === this.scopeStack[0].lexical.indexOf(e10.name) && -1 === this.scopeStack[0].var.indexOf(e10.name) && (this.undefinedExports[e10.name] = e10);
        }, z.currentScope = function() {
          return this.scopeStack[this.scopeStack.length - 1];
        }, z.currentVarScope = function() {
          for (var e10 = this.scopeStack.length - 1; ; e10--) {
            var t3 = this.scopeStack[e10];
            if (771 & t3.flags) return t3;
          }
        }, z.currentThisScope = function() {
          for (var e10 = this.scopeStack.length - 1; ; e10--) {
            var t3 = this.scopeStack[e10];
            if (771 & t3.flags && !(16 & t3.flags)) return t3;
          }
        };
        var acorn_Node = function(e10, t3, i2) {
          this.type = "", this.start = t3, this.end = 0, e10.options.locations && (this.loc = new acorn_SourceLocation(e10, i2)), e10.options.directSourceFile && (this.sourceFile = e10.options.directSourceFile), e10.options.ranges && (this.range = [t3, 0]);
        }, K = acorn_Parser.prototype;
        function finishNodeAt(e10, t3, i2, s2) {
          return e10.type = t3, e10.end = i2, this.options.locations && (e10.loc.end = s2), this.options.ranges && (e10.range[1] = i2), e10;
        }
        K.startNode = function() {
          return new acorn_Node(this, this.start, this.startLoc);
        }, K.startNodeAt = function(e10, t3) {
          return new acorn_Node(this, e10, t3);
        }, K.finishNode = function(e10, t3) {
          return finishNodeAt.call(this, e10, t3, this.lastTokEnd, this.lastTokEndLoc);
        }, K.finishNodeAt = function(e10, t3, i2, s2) {
          return finishNodeAt.call(this, e10, t3, i2, s2);
        }, K.copyNode = function(e10) {
          var t3 = new acorn_Node(this, e10.start, this.startLoc);
          for (var i2 in e10) t3[i2] = e10[i2];
          return t3;
        };
        var Z = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS", J = Z + " Extended_Pictographic", Y = J + " EBase EComp EMod EPres ExtPict", Q = { 9: Z, 10: J, 11: J, 12: Y, 13: Y, 14: Y }, X = { 9: "", 10: "", 11: "", 12: "", 13: "", 14: "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji" }, ee = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu", et = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb", ei = et + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd", es = ei + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho", er = es + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi", en = er + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith", ea = { 9: et, 10: ei, 11: es, 12: er, 13: en, 14: en + " Gara Garay Gukh Gurung_Khema Hrkt Katakana_Or_Hiragana Kawi Kirat_Rai Krai Nag_Mundari Nagm Ol_Onal Onao Sunu Sunuwar Todhri Todr Tulu_Tigalari Tutg Unknown Zzzz" }, eo = {};
        function buildUnicodeData(e10) {
          var t3 = eo[e10] = { binary: wordsRegexp(Q[e10] + " " + ee), binaryOfStrings: wordsRegexp(X[e10]), nonBinary: { General_Category: wordsRegexp(ee), Script: wordsRegexp(ea[e10]) } };
          t3.nonBinary.Script_Extensions = t3.nonBinary.Script, t3.nonBinary.gc = t3.nonBinary.General_Category, t3.nonBinary.sc = t3.nonBinary.Script, t3.nonBinary.scx = t3.nonBinary.Script_Extensions;
        }
        for (var eh = 0, ec = [9, 10, 11, 12, 13, 14]; eh < ec.length; eh += 1) buildUnicodeData(ec[eh]);
        var ep = acorn_Parser.prototype, acorn_BranchID = function(e10, t3) {
          this.parent = e10, this.base = t3 || this;
        };
        acorn_BranchID.prototype.separatedFrom = function(e10) {
          for (var t3 = this; t3; t3 = t3.parent) for (var i2 = e10; i2; i2 = i2.parent) if (t3.base === i2.base && t3 !== i2) return true;
          return false;
        }, acorn_BranchID.prototype.sibling = function() {
          return new acorn_BranchID(this.parent, this.base);
        };
        var acorn_RegExpValidationState = function(e10) {
          this.parser = e10, this.validFlags = "gim" + (e10.options.ecmaVersion >= 6 ? "uy" : "") + (e10.options.ecmaVersion >= 9 ? "s" : "") + (e10.options.ecmaVersion >= 13 ? "d" : "") + (e10.options.ecmaVersion >= 15 ? "v" : ""), this.unicodeProperties = eo[e10.options.ecmaVersion >= 14 ? 14 : e10.options.ecmaVersion], this.source = "", this.flags = "", this.start = 0, this.switchU = false, this.switchV = false, this.switchN = false, this.pos = 0, this.lastIntValue = 0, this.lastStringValue = "", this.lastAssertionIsQuantifiable = false, this.numCapturingParens = 0, this.maxBackReference = 0, this.groupNames = /* @__PURE__ */ Object.create(null), this.backReferenceNames = [], this.branchID = null;
        };
        function hasProp(e10) {
          for (var t3 in e10) return true;
          return false;
        }
        function isRegularExpressionModifier(e10) {
          return 105 === e10 || 109 === e10 || 115 === e10;
        }
        function isSyntaxCharacter(e10) {
          return 36 === e10 || e10 >= 40 && e10 <= 43 || 46 === e10 || 63 === e10 || e10 >= 91 && e10 <= 94 || e10 >= 123 && e10 <= 125;
        }
        function isRegExpIdentifierStart(e10) {
          return isIdentifierStart(e10, true) || 36 === e10 || 95 === e10;
        }
        function isRegExpIdentifierPart(e10) {
          return isIdentifierChar(e10, true) || 36 === e10 || 95 === e10 || 8204 === e10 || 8205 === e10;
        }
        function isControlLetter(e10) {
          return e10 >= 65 && e10 <= 90 || e10 >= 97 && e10 <= 122;
        }
        function isValidUnicode(e10) {
          return e10 >= 0 && e10 <= 1114111;
        }
        function isCharacterClassEscape(e10) {
          return 100 === e10 || 68 === e10 || 115 === e10 || 83 === e10 || 119 === e10 || 87 === e10;
        }
        function isUnicodePropertyNameCharacter(e10) {
          return isControlLetter(e10) || 95 === e10;
        }
        function isUnicodePropertyValueCharacter(e10) {
          return isUnicodePropertyNameCharacter(e10) || isDecimalDigit(e10);
        }
        function isClassSetReservedDoublePunctuatorCharacter(e10) {
          return 33 === e10 || e10 >= 35 && e10 <= 38 || e10 >= 42 && e10 <= 44 || 46 === e10 || e10 >= 58 && e10 <= 64 || 94 === e10 || 96 === e10 || 126 === e10;
        }
        function isClassSetSyntaxCharacter(e10) {
          return 40 === e10 || 41 === e10 || 45 === e10 || 47 === e10 || e10 >= 91 && e10 <= 93 || e10 >= 123 && e10 <= 125;
        }
        function isClassSetReservedPunctuator(e10) {
          return 33 === e10 || 35 === e10 || 37 === e10 || 38 === e10 || 44 === e10 || 45 === e10 || e10 >= 58 && e10 <= 62 || 64 === e10 || 96 === e10 || 126 === e10;
        }
        function isDecimalDigit(e10) {
          return e10 >= 48 && e10 <= 57;
        }
        function isHexDigit(e10) {
          return e10 >= 48 && e10 <= 57 || e10 >= 65 && e10 <= 70 || e10 >= 97 && e10 <= 102;
        }
        function hexToInt(e10) {
          return e10 >= 65 && e10 <= 70 ? 10 + (e10 - 65) : e10 >= 97 && e10 <= 102 ? 10 + (e10 - 97) : e10 - 48;
        }
        function isOctalDigit(e10) {
          return e10 >= 48 && e10 <= 55;
        }
        acorn_RegExpValidationState.prototype.reset = function(e10, t3, i2) {
          var s2 = -1 !== i2.indexOf("v"), r2 = -1 !== i2.indexOf("u");
          this.start = 0 | e10, this.source = t3 + "", this.flags = i2, s2 && this.parser.options.ecmaVersion >= 15 ? (this.switchU = true, this.switchV = true, this.switchN = true) : (this.switchU = r2 && this.parser.options.ecmaVersion >= 6, this.switchV = false, this.switchN = r2 && this.parser.options.ecmaVersion >= 9);
        }, acorn_RegExpValidationState.prototype.raise = function(e10) {
          this.parser.raiseRecoverable(this.start, "Invalid regular expression: /" + this.source + "/: " + e10);
        }, acorn_RegExpValidationState.prototype.at = function(e10, t3) {
          void 0 === t3 && (t3 = false);
          var i2 = this.source, s2 = i2.length;
          if (e10 >= s2) return -1;
          var r2 = i2.charCodeAt(e10);
          if (!(t3 || this.switchU) || r2 <= 55295 || r2 >= 57344 || e10 + 1 >= s2) return r2;
          var n2 = i2.charCodeAt(e10 + 1);
          return n2 >= 56320 && n2 <= 57343 ? (r2 << 10) + n2 - 56613888 : r2;
        }, acorn_RegExpValidationState.prototype.nextIndex = function(e10, t3) {
          void 0 === t3 && (t3 = false);
          var i2 = this.source, s2 = i2.length;
          if (e10 >= s2) return s2;
          var r2, n2 = i2.charCodeAt(e10);
          return !(t3 || this.switchU) || n2 <= 55295 || n2 >= 57344 || e10 + 1 >= s2 || (r2 = i2.charCodeAt(e10 + 1)) < 56320 || r2 > 57343 ? e10 + 1 : e10 + 2;
        }, acorn_RegExpValidationState.prototype.current = function(e10) {
          return void 0 === e10 && (e10 = false), this.at(this.pos, e10);
        }, acorn_RegExpValidationState.prototype.lookahead = function(e10) {
          return void 0 === e10 && (e10 = false), this.at(this.nextIndex(this.pos, e10), e10);
        }, acorn_RegExpValidationState.prototype.advance = function(e10) {
          void 0 === e10 && (e10 = false), this.pos = this.nextIndex(this.pos, e10);
        }, acorn_RegExpValidationState.prototype.eat = function(e10, t3) {
          return void 0 === t3 && (t3 = false), this.current(t3) === e10 && (this.advance(t3), true);
        }, acorn_RegExpValidationState.prototype.eatChars = function(e10, t3) {
          void 0 === t3 && (t3 = false);
          for (var i2 = this.pos, s2 = 0; s2 < e10.length; s2 += 1) {
            var r2 = e10[s2], n2 = this.at(i2, t3);
            if (-1 === n2 || n2 !== r2) return false;
            i2 = this.nextIndex(i2, t3);
          }
          return this.pos = i2, true;
        }, ep.validateRegExpFlags = function(e10) {
          for (var t3 = e10.validFlags, i2 = e10.flags, s2 = false, r2 = false, n2 = 0; n2 < i2.length; n2++) {
            var a2 = i2.charAt(n2);
            -1 === t3.indexOf(a2) && this.raise(e10.start, "Invalid regular expression flag"), i2.indexOf(a2, n2 + 1) > -1 && this.raise(e10.start, "Duplicate regular expression flag"), "u" === a2 && (s2 = true), "v" === a2 && (r2 = true);
          }
          this.options.ecmaVersion >= 15 && s2 && r2 && this.raise(e10.start, "Invalid regular expression flag");
        }, ep.validateRegExpPattern = function(e10) {
          this.regexp_pattern(e10), !e10.switchN && this.options.ecmaVersion >= 9 && hasProp(e10.groupNames) && (e10.switchN = true, this.regexp_pattern(e10));
        }, ep.regexp_pattern = function(e10) {
          e10.pos = 0, e10.lastIntValue = 0, e10.lastStringValue = "", e10.lastAssertionIsQuantifiable = false, e10.numCapturingParens = 0, e10.maxBackReference = 0, e10.groupNames = /* @__PURE__ */ Object.create(null), e10.backReferenceNames.length = 0, e10.branchID = null, this.regexp_disjunction(e10), e10.pos !== e10.source.length && (e10.eat(41) && e10.raise("Unmatched ')'"), (e10.eat(93) || e10.eat(125)) && e10.raise("Lone quantifier brackets")), e10.maxBackReference > e10.numCapturingParens && e10.raise("Invalid escape");
          for (var t3 = 0, i2 = e10.backReferenceNames; t3 < i2.length; t3 += 1) {
            var s2 = i2[t3];
            e10.groupNames[s2] || e10.raise("Invalid named capture referenced");
          }
        }, ep.regexp_disjunction = function(e10) {
          var t3 = this.options.ecmaVersion >= 16;
          for (t3 && (e10.branchID = new acorn_BranchID(e10.branchID, null)), this.regexp_alternative(e10); e10.eat(124); ) t3 && (e10.branchID = e10.branchID.sibling()), this.regexp_alternative(e10);
          t3 && (e10.branchID = e10.branchID.parent), this.regexp_eatQuantifier(e10, true) && e10.raise("Nothing to repeat"), e10.eat(123) && e10.raise("Lone quantifier brackets");
        }, ep.regexp_alternative = function(e10) {
          for (; e10.pos < e10.source.length && this.regexp_eatTerm(e10); ) ;
        }, ep.regexp_eatTerm = function(e10) {
          return this.regexp_eatAssertion(e10) ? (e10.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(e10) && e10.switchU && e10.raise("Invalid quantifier"), true) : (e10.switchU ? !!this.regexp_eatAtom(e10) : !!this.regexp_eatExtendedAtom(e10)) && (this.regexp_eatQuantifier(e10), true);
        }, ep.regexp_eatAssertion = function(e10) {
          var t3 = e10.pos;
          if (e10.lastAssertionIsQuantifiable = false, e10.eat(94) || e10.eat(36)) return true;
          if (e10.eat(92)) {
            if (e10.eat(66) || e10.eat(98)) return true;
            e10.pos = t3;
          }
          if (e10.eat(40) && e10.eat(63)) {
            var i2 = false;
            if (this.options.ecmaVersion >= 9 && (i2 = e10.eat(60)), e10.eat(61) || e10.eat(33)) return this.regexp_disjunction(e10), e10.eat(41) || e10.raise("Unterminated group"), e10.lastAssertionIsQuantifiable = !i2, true;
          }
          return e10.pos = t3, false;
        }, ep.regexp_eatQuantifier = function(e10, t3) {
          return void 0 === t3 && (t3 = false), !!this.regexp_eatQuantifierPrefix(e10, t3) && (e10.eat(63), true);
        }, ep.regexp_eatQuantifierPrefix = function(e10, t3) {
          return e10.eat(42) || e10.eat(43) || e10.eat(63) || this.regexp_eatBracedQuantifier(e10, t3);
        }, ep.regexp_eatBracedQuantifier = function(e10, t3) {
          var i2 = e10.pos;
          if (e10.eat(123)) {
            var s2 = 0, r2 = -1;
            if (this.regexp_eatDecimalDigits(e10) && (s2 = e10.lastIntValue, e10.eat(44) && this.regexp_eatDecimalDigits(e10) && (r2 = e10.lastIntValue), e10.eat(125))) return -1 !== r2 && r2 < s2 && !t3 && e10.raise("numbers out of order in {} quantifier"), true;
            e10.switchU && !t3 && e10.raise("Incomplete quantifier"), e10.pos = i2;
          }
          return false;
        }, ep.regexp_eatAtom = function(e10) {
          return this.regexp_eatPatternCharacters(e10) || e10.eat(46) || this.regexp_eatReverseSolidusAtomEscape(e10) || this.regexp_eatCharacterClass(e10) || this.regexp_eatUncapturingGroup(e10) || this.regexp_eatCapturingGroup(e10);
        }, ep.regexp_eatReverseSolidusAtomEscape = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(92)) {
            if (this.regexp_eatAtomEscape(e10)) return true;
            e10.pos = t3;
          }
          return false;
        }, ep.regexp_eatUncapturingGroup = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(40)) {
            if (e10.eat(63)) {
              if (this.options.ecmaVersion >= 16) {
                var i2 = this.regexp_eatModifiers(e10), s2 = e10.eat(45);
                if (i2 || s2) {
                  for (var r2 = 0; r2 < i2.length; r2++) {
                    var n2 = i2.charAt(r2);
                    i2.indexOf(n2, r2 + 1) > -1 && e10.raise("Duplicate regular expression modifiers");
                  }
                  if (s2) {
                    var a2 = this.regexp_eatModifiers(e10);
                    i2 || a2 || 58 !== e10.current() || e10.raise("Invalid regular expression modifiers");
                    for (var o2 = 0; o2 < a2.length; o2++) {
                      var h2 = a2.charAt(o2);
                      (a2.indexOf(h2, o2 + 1) > -1 || i2.indexOf(h2) > -1) && e10.raise("Duplicate regular expression modifiers");
                    }
                  }
                }
              }
              if (e10.eat(58)) {
                if (this.regexp_disjunction(e10), e10.eat(41)) return true;
                e10.raise("Unterminated group");
              }
            }
            e10.pos = t3;
          }
          return false;
        }, ep.regexp_eatCapturingGroup = function(e10) {
          if (e10.eat(40)) {
            if (this.options.ecmaVersion >= 9 ? this.regexp_groupSpecifier(e10) : 63 === e10.current() && e10.raise("Invalid group"), this.regexp_disjunction(e10), e10.eat(41)) return e10.numCapturingParens += 1, true;
            e10.raise("Unterminated group");
          }
          return false;
        }, ep.regexp_eatModifiers = function(e10) {
          for (var t3 = "", i2 = 0; -1 !== (i2 = e10.current()) && isRegularExpressionModifier(i2); ) t3 += codePointToString(i2), e10.advance();
          return t3;
        }, ep.regexp_eatExtendedAtom = function(e10) {
          return e10.eat(46) || this.regexp_eatReverseSolidusAtomEscape(e10) || this.regexp_eatCharacterClass(e10) || this.regexp_eatUncapturingGroup(e10) || this.regexp_eatCapturingGroup(e10) || this.regexp_eatInvalidBracedQuantifier(e10) || this.regexp_eatExtendedPatternCharacter(e10);
        }, ep.regexp_eatInvalidBracedQuantifier = function(e10) {
          return this.regexp_eatBracedQuantifier(e10, true) && e10.raise("Nothing to repeat"), false;
        }, ep.regexp_eatSyntaxCharacter = function(e10) {
          var t3 = e10.current();
          return !!isSyntaxCharacter(t3) && (e10.lastIntValue = t3, e10.advance(), true);
        }, ep.regexp_eatPatternCharacters = function(e10) {
          for (var t3 = e10.pos, i2 = 0; -1 !== (i2 = e10.current()) && !isSyntaxCharacter(i2); ) e10.advance();
          return e10.pos !== t3;
        }, ep.regexp_eatExtendedPatternCharacter = function(e10) {
          var t3 = e10.current();
          return -1 !== t3 && 36 !== t3 && (!(t3 >= 40) || !(t3 <= 43)) && 46 !== t3 && 63 !== t3 && 91 !== t3 && 94 !== t3 && 124 !== t3 && (e10.advance(), true);
        }, ep.regexp_groupSpecifier = function(e10) {
          if (e10.eat(63)) {
            this.regexp_eatGroupName(e10) || e10.raise("Invalid group");
            var t3 = this.options.ecmaVersion >= 16, i2 = e10.groupNames[e10.lastStringValue];
            if (i2) if (t3) for (var s2 = 0; s2 < i2.length; s2 += 1) i2[s2].separatedFrom(e10.branchID) || e10.raise("Duplicate capture group name");
            else e10.raise("Duplicate capture group name");
            t3 ? (i2 || (e10.groupNames[e10.lastStringValue] = [])).push(e10.branchID) : e10.groupNames[e10.lastStringValue] = true;
          }
        }, ep.regexp_eatGroupName = function(e10) {
          if (e10.lastStringValue = "", e10.eat(60)) {
            if (this.regexp_eatRegExpIdentifierName(e10) && e10.eat(62)) return true;
            e10.raise("Invalid capture group name");
          }
          return false;
        }, ep.regexp_eatRegExpIdentifierName = function(e10) {
          if (e10.lastStringValue = "", this.regexp_eatRegExpIdentifierStart(e10)) {
            for (e10.lastStringValue += codePointToString(e10.lastIntValue); this.regexp_eatRegExpIdentifierPart(e10); ) e10.lastStringValue += codePointToString(e10.lastIntValue);
            return true;
          }
          return false;
        }, ep.regexp_eatRegExpIdentifierStart = function(e10) {
          var t3 = e10.pos, i2 = this.options.ecmaVersion >= 11, s2 = e10.current(i2);
          return (e10.advance(i2), 92 === s2 && this.regexp_eatRegExpUnicodeEscapeSequence(e10, i2) && (s2 = e10.lastIntValue), isRegExpIdentifierStart(s2)) ? (e10.lastIntValue = s2, true) : (e10.pos = t3, false);
        }, ep.regexp_eatRegExpIdentifierPart = function(e10) {
          var t3 = e10.pos, i2 = this.options.ecmaVersion >= 11, s2 = e10.current(i2);
          return (e10.advance(i2), 92 === s2 && this.regexp_eatRegExpUnicodeEscapeSequence(e10, i2) && (s2 = e10.lastIntValue), isRegExpIdentifierPart(s2)) ? (e10.lastIntValue = s2, true) : (e10.pos = t3, false);
        }, ep.regexp_eatAtomEscape = function(e10) {
          return !!(this.regexp_eatBackReference(e10) || this.regexp_eatCharacterClassEscape(e10) || this.regexp_eatCharacterEscape(e10) || e10.switchN && this.regexp_eatKGroupName(e10)) || (e10.switchU && (99 === e10.current() && e10.raise("Invalid unicode escape"), e10.raise("Invalid escape")), false);
        }, ep.regexp_eatBackReference = function(e10) {
          var t3 = e10.pos;
          if (this.regexp_eatDecimalEscape(e10)) {
            var i2 = e10.lastIntValue;
            if (e10.switchU) return i2 > e10.maxBackReference && (e10.maxBackReference = i2), true;
            if (i2 <= e10.numCapturingParens) return true;
            e10.pos = t3;
          }
          return false;
        }, ep.regexp_eatKGroupName = function(e10) {
          if (e10.eat(107)) {
            if (this.regexp_eatGroupName(e10)) return e10.backReferenceNames.push(e10.lastStringValue), true;
            e10.raise("Invalid named reference");
          }
          return false;
        }, ep.regexp_eatCharacterEscape = function(e10) {
          return this.regexp_eatControlEscape(e10) || this.regexp_eatCControlLetter(e10) || this.regexp_eatZero(e10) || this.regexp_eatHexEscapeSequence(e10) || this.regexp_eatRegExpUnicodeEscapeSequence(e10, false) || !e10.switchU && this.regexp_eatLegacyOctalEscapeSequence(e10) || this.regexp_eatIdentityEscape(e10);
        }, ep.regexp_eatCControlLetter = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(99)) {
            if (this.regexp_eatControlLetter(e10)) return true;
            e10.pos = t3;
          }
          return false;
        }, ep.regexp_eatZero = function(e10) {
          return !(48 !== e10.current() || isDecimalDigit(e10.lookahead())) && (e10.lastIntValue = 0, e10.advance(), true);
        }, ep.regexp_eatControlEscape = function(e10) {
          var t3 = e10.current();
          return 116 === t3 ? (e10.lastIntValue = 9, e10.advance(), true) : 110 === t3 ? (e10.lastIntValue = 10, e10.advance(), true) : 118 === t3 ? (e10.lastIntValue = 11, e10.advance(), true) : 102 === t3 ? (e10.lastIntValue = 12, e10.advance(), true) : 114 === t3 && (e10.lastIntValue = 13, e10.advance(), true);
        }, ep.regexp_eatControlLetter = function(e10) {
          var t3 = e10.current();
          return !!isControlLetter(t3) && (e10.lastIntValue = t3 % 32, e10.advance(), true);
        }, ep.regexp_eatRegExpUnicodeEscapeSequence = function(e10, t3) {
          void 0 === t3 && (t3 = false);
          var i2 = e10.pos, s2 = t3 || e10.switchU;
          if (e10.eat(117)) {
            if (this.regexp_eatFixedHexDigits(e10, 4)) {
              var r2 = e10.lastIntValue;
              if (s2 && r2 >= 55296 && r2 <= 56319) {
                var n2 = e10.pos;
                if (e10.eat(92) && e10.eat(117) && this.regexp_eatFixedHexDigits(e10, 4)) {
                  var a2 = e10.lastIntValue;
                  if (a2 >= 56320 && a2 <= 57343) return e10.lastIntValue = (r2 - 55296) * 1024 + (a2 - 56320) + 65536, true;
                }
                e10.pos = n2, e10.lastIntValue = r2;
              }
              return true;
            }
            if (s2 && e10.eat(123) && this.regexp_eatHexDigits(e10) && e10.eat(125) && isValidUnicode(e10.lastIntValue)) return true;
            s2 && e10.raise("Invalid unicode escape"), e10.pos = i2;
          }
          return false;
        }, ep.regexp_eatIdentityEscape = function(e10) {
          if (e10.switchU) return !!this.regexp_eatSyntaxCharacter(e10) || !!e10.eat(47) && (e10.lastIntValue = 47, true);
          var t3 = e10.current();
          return 99 !== t3 && (!e10.switchN || 107 !== t3) && (e10.lastIntValue = t3, e10.advance(), true);
        }, ep.regexp_eatDecimalEscape = function(e10) {
          e10.lastIntValue = 0;
          var t3 = e10.current();
          if (t3 >= 49 && t3 <= 57) {
            do
              e10.lastIntValue = 10 * e10.lastIntValue + (t3 - 48), e10.advance();
            while ((t3 = e10.current()) >= 48 && t3 <= 57);
            return true;
          }
          return false;
        }, ep.regexp_eatCharacterClassEscape = function(e10) {
          var t3, i2 = e10.current();
          if (isCharacterClassEscape(i2)) return e10.lastIntValue = -1, e10.advance(), 1;
          var s2 = false;
          if (e10.switchU && this.options.ecmaVersion >= 9 && ((s2 = 80 === i2) || 112 === i2)) {
            if (e10.lastIntValue = -1, e10.advance(), e10.eat(123) && (t3 = this.regexp_eatUnicodePropertyValueExpression(e10)) && e10.eat(125)) return s2 && 2 === t3 && e10.raise("Invalid property name"), t3;
            e10.raise("Invalid property name");
          }
          return 0;
        }, ep.regexp_eatUnicodePropertyValueExpression = function(e10) {
          var t3 = e10.pos;
          if (this.regexp_eatUnicodePropertyName(e10) && e10.eat(61)) {
            var i2 = e10.lastStringValue;
            if (this.regexp_eatUnicodePropertyValue(e10)) {
              var s2 = e10.lastStringValue;
              return this.regexp_validateUnicodePropertyNameAndValue(e10, i2, s2), 1;
            }
          }
          if (e10.pos = t3, this.regexp_eatLoneUnicodePropertyNameOrValue(e10)) {
            var r2 = e10.lastStringValue;
            return this.regexp_validateUnicodePropertyNameOrValue(e10, r2);
          }
          return 0;
        }, ep.regexp_validateUnicodePropertyNameAndValue = function(e10, t3, i2) {
          w(e10.unicodeProperties.nonBinary, t3) || e10.raise("Invalid property name"), e10.unicodeProperties.nonBinary[t3].test(i2) || e10.raise("Invalid property value");
        }, ep.regexp_validateUnicodePropertyNameOrValue = function(e10, t3) {
          return e10.unicodeProperties.binary.test(t3) ? 1 : e10.switchV && e10.unicodeProperties.binaryOfStrings.test(t3) ? 2 : void e10.raise("Invalid property name");
        }, ep.regexp_eatUnicodePropertyName = function(e10) {
          var t3 = 0;
          for (e10.lastStringValue = ""; isUnicodePropertyNameCharacter(t3 = e10.current()); ) e10.lastStringValue += codePointToString(t3), e10.advance();
          return "" !== e10.lastStringValue;
        }, ep.regexp_eatUnicodePropertyValue = function(e10) {
          var t3 = 0;
          for (e10.lastStringValue = ""; isUnicodePropertyValueCharacter(t3 = e10.current()); ) e10.lastStringValue += codePointToString(t3), e10.advance();
          return "" !== e10.lastStringValue;
        }, ep.regexp_eatLoneUnicodePropertyNameOrValue = function(e10) {
          return this.regexp_eatUnicodePropertyValue(e10);
        }, ep.regexp_eatCharacterClass = function(e10) {
          if (e10.eat(91)) {
            var t3 = e10.eat(94), i2 = this.regexp_classContents(e10);
            return e10.eat(93) || e10.raise("Unterminated character class"), t3 && 2 === i2 && e10.raise("Negated character class may contain strings"), true;
          }
          return false;
        }, ep.regexp_classContents = function(e10) {
          return 93 === e10.current() ? 1 : e10.switchV ? this.regexp_classSetExpression(e10) : (this.regexp_nonEmptyClassRanges(e10), 1);
        }, ep.regexp_nonEmptyClassRanges = function(e10) {
          for (; this.regexp_eatClassAtom(e10); ) {
            var t3 = e10.lastIntValue;
            if (e10.eat(45) && this.regexp_eatClassAtom(e10)) {
              var i2 = e10.lastIntValue;
              e10.switchU && (-1 === t3 || -1 === i2) && e10.raise("Invalid character class"), -1 !== t3 && -1 !== i2 && t3 > i2 && e10.raise("Range out of order in character class");
            }
          }
        }, ep.regexp_eatClassAtom = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(92)) {
            if (this.regexp_eatClassEscape(e10)) return true;
            if (e10.switchU) {
              var i2 = e10.current();
              (99 === i2 || isOctalDigit(i2)) && e10.raise("Invalid class escape"), e10.raise("Invalid escape");
            }
            e10.pos = t3;
          }
          var s2 = e10.current();
          return 93 !== s2 && (e10.lastIntValue = s2, e10.advance(), true);
        }, ep.regexp_eatClassEscape = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(98)) return e10.lastIntValue = 8, true;
          if (e10.switchU && e10.eat(45)) return e10.lastIntValue = 45, true;
          if (!e10.switchU && e10.eat(99)) {
            if (this.regexp_eatClassControlLetter(e10)) return true;
            e10.pos = t3;
          }
          return this.regexp_eatCharacterClassEscape(e10) || this.regexp_eatCharacterEscape(e10);
        }, ep.regexp_classSetExpression = function(e10) {
          var t3, i2 = 1;
          if (this.regexp_eatClassSetRange(e10)) ;
          else if (t3 = this.regexp_eatClassSetOperand(e10)) {
            2 === t3 && (i2 = 2);
            for (var s2 = e10.pos; e10.eatChars([38, 38]); ) {
              if (38 !== e10.current() && (t3 = this.regexp_eatClassSetOperand(e10))) {
                2 !== t3 && (i2 = 1);
                continue;
              }
              e10.raise("Invalid character in character class");
            }
            if (s2 !== e10.pos) return i2;
            for (; e10.eatChars([45, 45]); ) this.regexp_eatClassSetOperand(e10) || e10.raise("Invalid character in character class");
            if (s2 !== e10.pos) return i2;
          } else e10.raise("Invalid character in character class");
          for (; ; ) if (!this.regexp_eatClassSetRange(e10)) {
            if (!(t3 = this.regexp_eatClassSetOperand(e10))) return i2;
            2 === t3 && (i2 = 2);
          }
        }, ep.regexp_eatClassSetRange = function(e10) {
          var t3 = e10.pos;
          if (this.regexp_eatClassSetCharacter(e10)) {
            var i2 = e10.lastIntValue;
            if (e10.eat(45) && this.regexp_eatClassSetCharacter(e10)) {
              var s2 = e10.lastIntValue;
              return -1 !== i2 && -1 !== s2 && i2 > s2 && e10.raise("Range out of order in character class"), true;
            }
            e10.pos = t3;
          }
          return false;
        }, ep.regexp_eatClassSetOperand = function(e10) {
          return this.regexp_eatClassSetCharacter(e10) ? 1 : this.regexp_eatClassStringDisjunction(e10) || this.regexp_eatNestedClass(e10);
        }, ep.regexp_eatNestedClass = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(91)) {
            var i2 = e10.eat(94), s2 = this.regexp_classContents(e10);
            if (e10.eat(93)) return i2 && 2 === s2 && e10.raise("Negated character class may contain strings"), s2;
            e10.pos = t3;
          }
          if (e10.eat(92)) {
            var r2 = this.regexp_eatCharacterClassEscape(e10);
            if (r2) return r2;
            e10.pos = t3;
          }
          return null;
        }, ep.regexp_eatClassStringDisjunction = function(e10) {
          var t3 = e10.pos;
          if (e10.eatChars([92, 113])) {
            if (e10.eat(123)) {
              var i2 = this.regexp_classStringDisjunctionContents(e10);
              if (e10.eat(125)) return i2;
            } else e10.raise("Invalid escape");
            e10.pos = t3;
          }
          return null;
        }, ep.regexp_classStringDisjunctionContents = function(e10) {
          for (var t3 = this.regexp_classString(e10); e10.eat(124); ) 2 === this.regexp_classString(e10) && (t3 = 2);
          return t3;
        }, ep.regexp_classString = function(e10) {
          for (var t3 = 0; this.regexp_eatClassSetCharacter(e10); ) t3++;
          return 1 === t3 ? 1 : 2;
        }, ep.regexp_eatClassSetCharacter = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(92)) return !!(this.regexp_eatCharacterEscape(e10) || this.regexp_eatClassSetReservedPunctuator(e10)) || (e10.eat(98) ? (e10.lastIntValue = 8, true) : (e10.pos = t3, false));
          var i2 = e10.current();
          return !(i2 < 0 || i2 === e10.lookahead() && isClassSetReservedDoublePunctuatorCharacter(i2) || isClassSetSyntaxCharacter(i2)) && (e10.advance(), e10.lastIntValue = i2, true);
        }, ep.regexp_eatClassSetReservedPunctuator = function(e10) {
          var t3 = e10.current();
          return !!isClassSetReservedPunctuator(t3) && (e10.lastIntValue = t3, e10.advance(), true);
        }, ep.regexp_eatClassControlLetter = function(e10) {
          var t3 = e10.current();
          return (!!isDecimalDigit(t3) || 95 === t3) && (e10.lastIntValue = t3 % 32, e10.advance(), true);
        }, ep.regexp_eatHexEscapeSequence = function(e10) {
          var t3 = e10.pos;
          if (e10.eat(120)) {
            if (this.regexp_eatFixedHexDigits(e10, 2)) return true;
            e10.switchU && e10.raise("Invalid escape"), e10.pos = t3;
          }
          return false;
        }, ep.regexp_eatDecimalDigits = function(e10) {
          var t3 = e10.pos, i2 = 0;
          for (e10.lastIntValue = 0; isDecimalDigit(i2 = e10.current()); ) e10.lastIntValue = 10 * e10.lastIntValue + (i2 - 48), e10.advance();
          return e10.pos !== t3;
        }, ep.regexp_eatHexDigits = function(e10) {
          var t3 = e10.pos, i2 = 0;
          for (e10.lastIntValue = 0; isHexDigit(i2 = e10.current()); ) e10.lastIntValue = 16 * e10.lastIntValue + hexToInt(i2), e10.advance();
          return e10.pos !== t3;
        }, ep.regexp_eatLegacyOctalEscapeSequence = function(e10) {
          if (this.regexp_eatOctalDigit(e10)) {
            var t3 = e10.lastIntValue;
            if (this.regexp_eatOctalDigit(e10)) {
              var i2 = e10.lastIntValue;
              t3 <= 3 && this.regexp_eatOctalDigit(e10) ? e10.lastIntValue = 64 * t3 + 8 * i2 + e10.lastIntValue : e10.lastIntValue = 8 * t3 + i2;
            } else e10.lastIntValue = t3;
            return true;
          }
          return false;
        }, ep.regexp_eatOctalDigit = function(e10) {
          var t3 = e10.current();
          return isOctalDigit(t3) ? (e10.lastIntValue = t3 - 48, e10.advance(), true) : (e10.lastIntValue = 0, false);
        }, ep.regexp_eatFixedHexDigits = function(e10, t3) {
          var i2 = e10.pos;
          e10.lastIntValue = 0;
          for (var s2 = 0; s2 < t3; ++s2) {
            var r2 = e10.current();
            if (!isHexDigit(r2)) return e10.pos = i2, false;
            e10.lastIntValue = 16 * e10.lastIntValue + hexToInt(r2), e10.advance();
          }
          return true;
        };
        var acorn_Token = function(e10) {
          this.type = e10.type, this.value = e10.value, this.start = e10.start, this.end = e10.end, e10.options.locations && (this.loc = new acorn_SourceLocation(e10, e10.startLoc, e10.endLoc)), e10.options.ranges && (this.range = [e10.start, e10.end]);
        }, el = acorn_Parser.prototype;
        function stringToNumber(e10, t3) {
          return t3 ? parseInt(e10, 8) : parseFloat(e10.replace(/_/g, ""));
        }
        function stringToBigInt(e10) {
          return "function" != typeof BigInt ? null : BigInt(e10.replace(/_/g, ""));
        }
        el.next = function(e10) {
          !e10 && this.type.keyword && this.containsEsc && this.raiseRecoverable(this.start, "Escape sequence in keyword " + this.type.keyword), this.options.onToken && this.options.onToken(new acorn_Token(this)), this.lastTokEnd = this.end, this.lastTokStart = this.start, this.lastTokEndLoc = this.endLoc, this.lastTokStartLoc = this.startLoc, this.nextToken();
        }, el.getToken = function() {
          return this.next(), new acorn_Token(this);
        }, "undefined" != typeof Symbol && (el[Symbol.iterator] = function() {
          var e10 = this;
          return { next: function() {
            var t3 = e10.getToken();
            return { done: t3.type === x.eof, value: t3 };
          } };
        }), el.nextToken = function() {
          var e10 = this.curContext();
          return (e10 && e10.preserveSpace || this.skipSpace(), this.start = this.pos, this.options.locations && (this.startLoc = this.curPosition()), this.pos >= this.input.length) ? this.finishToken(x.eof) : e10.override ? e10.override(this) : void this.readToken(this.fullCharCodeAtPos());
        }, el.readToken = function(e10) {
          return isIdentifierStart(e10, this.options.ecmaVersion >= 6) || 92 === e10 ? this.readWord() : this.getTokenFromCode(e10);
        }, el.fullCharCodeAtPos = function() {
          var e10 = this.input.charCodeAt(this.pos);
          if (e10 <= 55295 || e10 >= 56320) return e10;
          var t3 = this.input.charCodeAt(this.pos + 1);
          return t3 <= 56319 || t3 >= 57344 ? e10 : (e10 << 10) + t3 - 56613888;
        }, el.skipBlockComment = function() {
          var e10 = this.options.onComment && this.curPosition(), t3 = this.pos, i2 = this.input.indexOf("*/", this.pos += 2);
          if (-1 === i2 && this.raise(this.pos - 2, "Unterminated comment"), this.pos = i2 + 2, this.options.locations) for (var s2 = void 0, r2 = t3; (s2 = nextLineBreak(this.input, r2, this.pos)) > -1; ) ++this.curLine, r2 = this.lineStart = s2;
          this.options.onComment && this.options.onComment(true, this.input.slice(t3 + 2, i2), t3, this.pos, e10, this.curPosition());
        }, el.skipLineComment = function(e10) {
          for (var t3 = this.pos, i2 = this.options.onComment && this.curPosition(), s2 = this.input.charCodeAt(this.pos += e10); this.pos < this.input.length && !isNewLine(s2); ) s2 = this.input.charCodeAt(++this.pos);
          this.options.onComment && this.options.onComment(false, this.input.slice(t3 + e10, this.pos), t3, this.pos, i2, this.curPosition());
        }, el.skipSpace = function() {
          e: for (; this.pos < this.input.length; ) {
            var e10 = this.input.charCodeAt(this.pos);
            switch (e10) {
              case 32:
              case 160:
                ++this.pos;
                break;
              case 13:
                10 === this.input.charCodeAt(this.pos + 1) && ++this.pos;
              case 10:
              case 8232:
              case 8233:
                ++this.pos, this.options.locations && (++this.curLine, this.lineStart = this.pos);
                break;
              case 47:
                switch (this.input.charCodeAt(this.pos + 1)) {
                  case 42:
                    this.skipBlockComment();
                    break;
                  case 47:
                    this.skipLineComment(2);
                    break;
                  default:
                    break e;
                }
                break;
              default:
                if (e10 > 8 && e10 < 14 || e10 >= 5760 && b.test(String.fromCharCode(e10))) ++this.pos;
                else break e;
            }
          }
        }, el.finishToken = function(e10, t3) {
          this.end = this.pos, this.options.locations && (this.endLoc = this.curPosition());
          var i2 = this.type;
          this.type = e10, this.value = t3, this.updateContext(i2);
        }, el.readToken_dot = function() {
          var e10 = this.input.charCodeAt(this.pos + 1);
          if (e10 >= 48 && e10 <= 57) return this.readNumber(true);
          var t3 = this.input.charCodeAt(this.pos + 2);
          return this.options.ecmaVersion >= 6 && 46 === e10 && 46 === t3 ? (this.pos += 3, this.finishToken(x.ellipsis)) : (++this.pos, this.finishToken(x.dot));
        }, el.readToken_slash = function() {
          var e10 = this.input.charCodeAt(this.pos + 1);
          return this.exprAllowed ? (++this.pos, this.readRegexp()) : 61 === e10 ? this.finishOp(x.assign, 2) : this.finishOp(x.slash, 1);
        }, el.readToken_mult_modulo_exp = function(e10) {
          var t3 = this.input.charCodeAt(this.pos + 1), i2 = 1, s2 = 42 === e10 ? x.star : x.modulo;
          return (this.options.ecmaVersion >= 7 && 42 === e10 && 42 === t3 && (++i2, s2 = x.starstar, t3 = this.input.charCodeAt(this.pos + 2)), 61 === t3) ? this.finishOp(x.assign, i2 + 1) : this.finishOp(s2, i2);
        }, el.readToken_pipe_amp = function(e10) {
          var t3 = this.input.charCodeAt(this.pos + 1);
          if (t3 === e10) return this.options.ecmaVersion >= 12 && 61 === this.input.charCodeAt(this.pos + 2) ? this.finishOp(x.assign, 3) : this.finishOp(124 === e10 ? x.logicalOR : x.logicalAND, 2);
          return 61 === t3 ? this.finishOp(x.assign, 2) : this.finishOp(124 === e10 ? x.bitwiseOR : x.bitwiseAND, 1);
        }, el.readToken_caret = function() {
          return 61 === this.input.charCodeAt(this.pos + 1) ? this.finishOp(x.assign, 2) : this.finishOp(x.bitwiseXOR, 1);
        }, el.readToken_plus_min = function(e10) {
          var t3 = this.input.charCodeAt(this.pos + 1);
          return t3 === e10 ? 45 === t3 && !this.inModule && 62 === this.input.charCodeAt(this.pos + 2) && (0 === this.lastTokEnd || v.test(this.input.slice(this.lastTokEnd, this.pos))) ? (this.skipLineComment(3), this.skipSpace(), this.nextToken()) : this.finishOp(x.incDec, 2) : 61 === t3 ? this.finishOp(x.assign, 2) : this.finishOp(x.plusMin, 1);
        }, el.readToken_lt_gt = function(e10) {
          var t3 = this.input.charCodeAt(this.pos + 1), i2 = 1;
          return t3 === e10 ? (i2 = 62 === e10 && 62 === this.input.charCodeAt(this.pos + 2) ? 3 : 2, 61 === this.input.charCodeAt(this.pos + i2)) ? this.finishOp(x.assign, i2 + 1) : this.finishOp(x.bitShift, i2) : 33 !== t3 || 60 !== e10 || this.inModule || 45 !== this.input.charCodeAt(this.pos + 2) || 45 !== this.input.charCodeAt(this.pos + 3) ? (61 === t3 && (i2 = 2), this.finishOp(x.relational, i2)) : (this.skipLineComment(4), this.skipSpace(), this.nextToken());
        }, el.readToken_eq_excl = function(e10) {
          var t3 = this.input.charCodeAt(this.pos + 1);
          return 61 === t3 ? this.finishOp(x.equality, 61 === this.input.charCodeAt(this.pos + 2) ? 3 : 2) : 61 === e10 && 62 === t3 && this.options.ecmaVersion >= 6 ? (this.pos += 2, this.finishToken(x.arrow)) : this.finishOp(61 === e10 ? x.eq : x.prefix, 1);
        }, el.readToken_question = function() {
          var e10 = this.options.ecmaVersion;
          if (e10 >= 11) {
            var t3 = this.input.charCodeAt(this.pos + 1);
            if (46 === t3) {
              var i2 = this.input.charCodeAt(this.pos + 2);
              if (i2 < 48 || i2 > 57) return this.finishOp(x.questionDot, 2);
            }
            if (63 === t3) return e10 >= 12 && 61 === this.input.charCodeAt(this.pos + 2) ? this.finishOp(x.assign, 3) : this.finishOp(x.coalesce, 2);
          }
          return this.finishOp(x.question, 1);
        }, el.readToken_numberSign = function() {
          var e10 = this.options.ecmaVersion, t3 = 35;
          if (e10 >= 13 && (++this.pos, isIdentifierStart(t3 = this.fullCharCodeAtPos(), true) || 92 === t3)) return this.finishToken(x.privateId, this.readWord1());
          this.raise(this.pos, "Unexpected character '" + codePointToString(t3) + "'");
        }, el.getTokenFromCode = function(e10) {
          switch (e10) {
            case 46:
              return this.readToken_dot();
            case 40:
              return ++this.pos, this.finishToken(x.parenL);
            case 41:
              return ++this.pos, this.finishToken(x.parenR);
            case 59:
              return ++this.pos, this.finishToken(x.semi);
            case 44:
              return ++this.pos, this.finishToken(x.comma);
            case 91:
              return ++this.pos, this.finishToken(x.bracketL);
            case 93:
              return ++this.pos, this.finishToken(x.bracketR);
            case 123:
              return ++this.pos, this.finishToken(x.braceL);
            case 125:
              return ++this.pos, this.finishToken(x.braceR);
            case 58:
              return ++this.pos, this.finishToken(x.colon);
            case 96:
              if (this.options.ecmaVersion < 6) break;
              return ++this.pos, this.finishToken(x.backQuote);
            case 48:
              var t3 = this.input.charCodeAt(this.pos + 1);
              if (120 === t3 || 88 === t3) return this.readRadixNumber(16);
              if (this.options.ecmaVersion >= 6) {
                if (111 === t3 || 79 === t3) return this.readRadixNumber(8);
                if (98 === t3 || 66 === t3) return this.readRadixNumber(2);
              }
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
              return this.readNumber(false);
            case 34:
            case 39:
              return this.readString(e10);
            case 47:
              return this.readToken_slash();
            case 37:
            case 42:
              return this.readToken_mult_modulo_exp(e10);
            case 124:
            case 38:
              return this.readToken_pipe_amp(e10);
            case 94:
              return this.readToken_caret();
            case 43:
            case 45:
              return this.readToken_plus_min(e10);
            case 60:
            case 62:
              return this.readToken_lt_gt(e10);
            case 61:
            case 33:
              return this.readToken_eq_excl(e10);
            case 63:
              return this.readToken_question();
            case 126:
              return this.finishOp(x.prefix, 1);
            case 35:
              return this.readToken_numberSign();
          }
          this.raise(this.pos, "Unexpected character '" + codePointToString(e10) + "'");
        }, el.finishOp = function(e10, t3) {
          var i2 = this.input.slice(this.pos, this.pos + t3);
          return this.pos += t3, this.finishToken(e10, i2);
        }, el.readRegexp = function() {
          for (var e10, t3, i2 = this.pos; ; ) {
            this.pos >= this.input.length && this.raise(i2, "Unterminated regular expression");
            var s2 = this.input.charAt(this.pos);
            if (v.test(s2) && this.raise(i2, "Unterminated regular expression"), e10) e10 = false;
            else {
              if ("[" === s2) t3 = true;
              else if ("]" === s2 && t3) t3 = false;
              else if ("/" === s2 && !t3) break;
              e10 = "\\" === s2;
            }
            ++this.pos;
          }
          var r2 = this.input.slice(i2, this.pos);
          ++this.pos;
          var n2 = this.pos, a2 = this.readWord1();
          this.containsEsc && this.unexpected(n2);
          var o2 = this.regexpState || (this.regexpState = new acorn_RegExpValidationState(this));
          o2.reset(i2, r2, a2), this.validateRegExpFlags(o2), this.validateRegExpPattern(o2);
          var h2 = null;
          try {
            h2 = new RegExp(r2, a2);
          } catch (e11) {
          }
          return this.finishToken(x.regexp, { pattern: r2, flags: a2, value: h2 });
        }, el.readInt = function(e10, t3, i2) {
          for (var s2 = this.options.ecmaVersion >= 12 && void 0 === t3, r2 = i2 && 48 === this.input.charCodeAt(this.pos), n2 = this.pos, a2 = 0, o2 = 0, h2 = 0, c2 = null == t3 ? 1 / 0 : t3; h2 < c2; ++h2, ++this.pos) {
            var p2 = this.input.charCodeAt(this.pos), l2 = void 0;
            if (s2 && 95 === p2) {
              r2 && this.raiseRecoverable(this.pos, "Numeric separator is not allowed in legacy octal numeric literals"), 95 === o2 && this.raiseRecoverable(this.pos, "Numeric separator must be exactly one underscore"), 0 === h2 && this.raiseRecoverable(this.pos, "Numeric separator is not allowed at the first of digits"), o2 = p2;
              continue;
            }
            if ((l2 = p2 >= 97 ? p2 - 97 + 10 : p2 >= 65 ? p2 - 65 + 10 : p2 >= 48 && p2 <= 57 ? p2 - 48 : 1 / 0) >= e10) break;
            o2 = p2, a2 = a2 * e10 + l2;
          }
          return (s2 && 95 === o2 && this.raiseRecoverable(this.pos - 1, "Numeric separator is not allowed at the last of digits"), this.pos === n2 || null != t3 && this.pos - n2 !== t3) ? null : a2;
        }, el.readRadixNumber = function(e10) {
          var t3 = this.pos;
          this.pos += 2;
          var i2 = this.readInt(e10);
          return null == i2 && this.raise(this.start + 2, "Expected number in radix " + e10), this.options.ecmaVersion >= 11 && 110 === this.input.charCodeAt(this.pos) ? (i2 = stringToBigInt(this.input.slice(t3, this.pos)), ++this.pos) : isIdentifierStart(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(x.num, i2);
        }, el.readNumber = function(e10) {
          var t3 = this.pos;
          e10 || null !== this.readInt(10, void 0, true) || this.raise(t3, "Invalid number");
          var i2 = this.pos - t3 >= 2 && 48 === this.input.charCodeAt(t3);
          i2 && this.strict && this.raise(t3, "Invalid number");
          var s2 = this.input.charCodeAt(this.pos);
          if (!i2 && !e10 && this.options.ecmaVersion >= 11 && 110 === s2) {
            var r2 = stringToBigInt(this.input.slice(t3, this.pos));
            return ++this.pos, isIdentifierStart(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number"), this.finishToken(x.num, r2);
          }
          i2 && /[89]/.test(this.input.slice(t3, this.pos)) && (i2 = false), 46 !== s2 || i2 || (++this.pos, this.readInt(10), s2 = this.input.charCodeAt(this.pos)), 69 !== s2 && 101 !== s2 || i2 || ((43 === (s2 = this.input.charCodeAt(++this.pos)) || 45 === s2) && ++this.pos, null === this.readInt(10) && this.raise(t3, "Invalid number")), isIdentifierStart(this.fullCharCodeAtPos()) && this.raise(this.pos, "Identifier directly after number");
          var n2 = stringToNumber(this.input.slice(t3, this.pos), i2);
          return this.finishToken(x.num, n2);
        }, el.readCodePoint = function() {
          var e10;
          if (123 === this.input.charCodeAt(this.pos)) {
            this.options.ecmaVersion < 6 && this.unexpected();
            var t3 = ++this.pos;
            e10 = this.readHexChar(this.input.indexOf("}", this.pos) - this.pos), ++this.pos, e10 > 1114111 && this.invalidStringToken(t3, "Code point out of bounds");
          } else e10 = this.readHexChar(4);
          return e10;
        }, el.readString = function(e10) {
          for (var t3 = "", i2 = ++this.pos; ; ) {
            this.pos >= this.input.length && this.raise(this.start, "Unterminated string constant");
            var s2 = this.input.charCodeAt(this.pos);
            if (s2 === e10) break;
            92 === s2 ? (t3 += this.input.slice(i2, this.pos), t3 += this.readEscapedChar(false), i2 = this.pos) : 8232 === s2 || 8233 === s2 ? (this.options.ecmaVersion < 10 && this.raise(this.start, "Unterminated string constant"), ++this.pos, this.options.locations && (this.curLine++, this.lineStart = this.pos)) : (isNewLine(s2) && this.raise(this.start, "Unterminated string constant"), ++this.pos);
          }
          return t3 += this.input.slice(i2, this.pos++), this.finishToken(x.string, t3);
        };
        var eu = {};
        el.tryReadTemplateToken = function() {
          this.inTemplateElement = true;
          try {
            this.readTmplToken();
          } catch (e10) {
            if (e10 === eu) this.readInvalidTemplateToken();
            else throw e10;
          }
          this.inTemplateElement = false;
        }, el.invalidStringToken = function(e10, t3) {
          if (this.inTemplateElement && this.options.ecmaVersion >= 9) throw eu;
          this.raise(e10, t3);
        }, el.readTmplToken = function() {
          for (var e10 = "", t3 = this.pos; ; ) {
            this.pos >= this.input.length && this.raise(this.start, "Unterminated template");
            var i2 = this.input.charCodeAt(this.pos);
            if (96 === i2 || 36 === i2 && 123 === this.input.charCodeAt(this.pos + 1)) {
              if (this.pos === this.start && (this.type === x.template || this.type === x.invalidTemplate)) if (36 === i2) return this.pos += 2, this.finishToken(x.dollarBraceL);
              else return ++this.pos, this.finishToken(x.backQuote);
              return e10 += this.input.slice(t3, this.pos), this.finishToken(x.template, e10);
            }
            if (92 === i2) e10 += this.input.slice(t3, this.pos), e10 += this.readEscapedChar(true), t3 = this.pos;
            else if (isNewLine(i2)) {
              switch (e10 += this.input.slice(t3, this.pos), ++this.pos, i2) {
                case 13:
                  10 === this.input.charCodeAt(this.pos) && ++this.pos;
                case 10:
                  e10 += "\n";
                  break;
                default:
                  e10 += String.fromCharCode(i2);
              }
              this.options.locations && (++this.curLine, this.lineStart = this.pos), t3 = this.pos;
            } else ++this.pos;
          }
        }, el.readInvalidTemplateToken = function() {
          for (; this.pos < this.input.length; this.pos++) switch (this.input[this.pos]) {
            case "\\":
              ++this.pos;
              break;
            case "$":
              if ("{" !== this.input[this.pos + 1]) break;
            case "`":
              return this.finishToken(x.invalidTemplate, this.input.slice(this.start, this.pos));
            case "\r":
              "\n" === this.input[this.pos + 1] && ++this.pos;
            case "\n":
            case "\u2028":
            case "\u2029":
              ++this.curLine, this.lineStart = this.pos + 1;
          }
          this.raise(this.start, "Unterminated template");
        }, el.readEscapedChar = function(e10) {
          var t3 = this.input.charCodeAt(++this.pos);
          switch (++this.pos, t3) {
            case 110:
              return "\n";
            case 114:
              return "\r";
            case 120:
              return String.fromCharCode(this.readHexChar(2));
            case 117:
              return codePointToString(this.readCodePoint());
            case 116:
              return "	";
            case 98:
              return "\b";
            case 118:
              return "\v";
            case 102:
              return "\f";
            case 13:
              10 === this.input.charCodeAt(this.pos) && ++this.pos;
            case 10:
              return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
            case 56:
            case 57:
              if (this.strict && this.invalidStringToken(this.pos - 1, "Invalid escape sequence"), e10) {
                var i2 = this.pos - 1;
                this.invalidStringToken(i2, "Invalid escape sequence in template string");
              }
            default:
              if (t3 >= 48 && t3 <= 55) {
                var s2 = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0], r2 = parseInt(s2, 8);
                return r2 > 255 && (r2 = parseInt(s2 = s2.slice(0, -1), 8)), this.pos += s2.length - 1, t3 = this.input.charCodeAt(this.pos), ("0" !== s2 || 56 === t3 || 57 === t3) && (this.strict || e10) && this.invalidStringToken(this.pos - 1 - s2.length, e10 ? "Octal literal in template string" : "Octal literal in strict mode"), String.fromCharCode(r2);
              }
              if (isNewLine(t3)) return this.options.locations && (this.lineStart = this.pos, ++this.curLine), "";
              return String.fromCharCode(t3);
          }
        }, el.readHexChar = function(e10) {
          var t3 = this.pos, i2 = this.readInt(16, e10);
          return null === i2 && this.invalidStringToken(t3, "Bad character escape sequence"), i2;
        }, el.readWord1 = function() {
          this.containsEsc = false;
          for (var e10 = "", t3 = true, i2 = this.pos, s2 = this.options.ecmaVersion >= 6; this.pos < this.input.length; ) {
            var r2 = this.fullCharCodeAtPos();
            if (isIdentifierChar(r2, s2)) this.pos += r2 <= 65535 ? 1 : 2;
            else if (92 === r2) {
              this.containsEsc = true, e10 += this.input.slice(i2, this.pos);
              var n2 = this.pos;
              117 !== this.input.charCodeAt(++this.pos) && this.invalidStringToken(this.pos, "Expecting Unicode escape sequence \\uXXXX"), ++this.pos;
              var a2 = this.readCodePoint();
              (t3 ? isIdentifierStart : isIdentifierChar)(a2, s2) || this.invalidStringToken(n2, "Invalid Unicode escape"), e10 += codePointToString(a2), i2 = this.pos;
            } else break;
            t3 = false;
          }
          return e10 + this.input.slice(i2, this.pos);
        }, el.readWord = function() {
          var e10 = this.readWord1(), t3 = x.name;
          return this.keywords.test(e10) && (t3 = _[e10]), this.finishToken(t3, e10);
        }, acorn_Parser.acorn = { Parser: acorn_Parser, version: "8.15.0", defaultOptions: P, Position: acorn_Position, SourceLocation: acorn_SourceLocation, getLineInfo, Node: acorn_Node, TokenType: acorn_TokenType, tokTypes: x, keywordTypes: _, TokContext: acorn_TokContext, tokContexts: $, isIdentifierChar, isIdentifierStart, Token: acorn_Token, isNewLine, lineBreak: v, lineBreakG: y, nonASCIIwhitespace: b };
        let ed = require_node_module(), ef = require_node_fs(), em = /\/$|\/\?|\/#/, eg = /^\.?\//;
        function hasTrailingSlash(e10 = "", t3) {
          return t3 ? em.test(e10) : e10.endsWith("/");
        }
        function withTrailingSlash(e10 = "", t3) {
          if (!t3) return e10.endsWith("/") ? e10 : e10 + "/";
          if (hasTrailingSlash(e10, true)) return e10 || "/";
          let i2 = e10, s2 = "", r2 = e10.indexOf("#");
          if (-1 !== r2 && (i2 = e10.slice(0, r2), s2 = e10.slice(r2), !i2)) return s2;
          let [n2, ...a2] = i2.split("?");
          return n2 + "/" + (a2.length > 0 ? `?${a2.join("?")}` : "") + s2;
        }
        function isNonEmptyURL(e10) {
          return e10 && "/" !== e10;
        }
        function dist_joinURL(e10, ...t3) {
          let i2 = e10 || "";
          for (let e11 of t3.filter((e12) => isNonEmptyURL(e12))) if (i2) {
            let t4 = e11.replace(eg, "");
            i2 = withTrailingSlash(i2) + t4;
          } else i2 = e11;
          return i2;
        }
        Symbol.for("ufo:protocolRelative");
        let e_ = /^[A-Za-z]:\//;
        function pathe_M_eThtNZ_normalizeWindowsPath(e10 = "") {
          return e10 ? e10.replace(/\\/g, "/").replace(e_, (e11) => e11.toUpperCase()) : e10;
        }
        let ex = /^[/\\]{2}/, ev = /^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/, ey = /^[A-Za-z]:$/, eb = /.(\.[^./]+|\.)$/, pathe_M_eThtNZ_normalize = function(e10) {
          if (0 === e10.length) return ".";
          let t3 = (e10 = pathe_M_eThtNZ_normalizeWindowsPath(e10)).match(ex), i2 = isAbsolute(e10), s2 = "/" === e10[e10.length - 1];
          return 0 === (e10 = normalizeString(e10, !i2)).length ? i2 ? "/" : s2 ? "./" : "." : (s2 && (e10 += "/"), ey.test(e10) && (e10 += "/"), t3) ? i2 ? `//${e10}` : `//./${e10}` : i2 && !isAbsolute(e10) ? `/${e10}` : e10;
        }, pathe_M_eThtNZ_join = function(...e10) {
          let t3 = "";
          for (let i2 of e10) if (i2) if (t3.length > 0) {
            let e11 = "/" === t3[t3.length - 1], s2 = "/" === i2[0];
            e11 && s2 ? t3 += i2.slice(1) : t3 += e11 || s2 ? i2 : `/${i2}`;
          } else t3 += i2;
          return pathe_M_eThtNZ_normalize(t3);
        };
        function pathe_M_eThtNZ_cwd() {
          return "undefined" != typeof process && "function" == typeof process.cwd ? process.cwd().replace(/\\/g, "/") : "/";
        }
        let pathe_M_eThtNZ_resolve = function(...e10) {
          e10 = e10.map((e11) => pathe_M_eThtNZ_normalizeWindowsPath(e11));
          let t3 = "", i2 = false;
          for (let s2 = e10.length - 1; s2 >= -1 && !i2; s2--) {
            let r2 = s2 >= 0 ? e10[s2] : pathe_M_eThtNZ_cwd();
            r2 && 0 !== r2.length && (t3 = `${r2}/${t3}`, i2 = isAbsolute(r2));
          }
          return (t3 = normalizeString(t3, !i2), i2 && !isAbsolute(t3)) ? `/${t3}` : t3.length > 0 ? t3 : ".";
        };
        function normalizeString(e10, t3) {
          let i2 = "", s2 = 0, r2 = -1, n2 = 0, a2 = null;
          for (let o2 = 0; o2 <= e10.length; ++o2) {
            if (o2 < e10.length) a2 = e10[o2];
            else if ("/" === a2) break;
            else a2 = "/";
            if ("/" === a2) {
              if (r2 === o2 - 1 || 1 === n2) ;
              else if (2 === n2) {
                if (i2.length < 2 || 2 !== s2 || "." !== i2[i2.length - 1] || "." !== i2[i2.length - 2]) {
                  if (i2.length > 2) {
                    let e11 = i2.lastIndexOf("/");
                    -1 === e11 ? (i2 = "", s2 = 0) : s2 = (i2 = i2.slice(0, e11)).length - 1 - i2.lastIndexOf("/"), r2 = o2, n2 = 0;
                    continue;
                  } else if (i2.length > 0) {
                    i2 = "", s2 = 0, r2 = o2, n2 = 0;
                    continue;
                  }
                }
                t3 && (i2 += i2.length > 0 ? "/.." : "..", s2 = 2);
              } else i2.length > 0 ? i2 += `/${e10.slice(r2 + 1, o2)}` : i2 = e10.slice(r2 + 1, o2), s2 = o2 - r2 - 1;
              r2 = o2, n2 = 0;
            } else "." === a2 && -1 !== n2 ? ++n2 : n2 = -1;
          }
          return i2;
        }
        let isAbsolute = function(e10) {
          return ev.test(e10);
        }, extname = function(e10) {
          if (".." === e10) return "";
          let t3 = eb.exec(pathe_M_eThtNZ_normalizeWindowsPath(e10));
          return t3 && t3[1] || "";
        }, pathe_M_eThtNZ_dirname = function(e10) {
          let t3 = pathe_M_eThtNZ_normalizeWindowsPath(e10).replace(/\/$/, "").split("/").slice(0, -1);
          return 1 === t3.length && ey.test(t3[0]) && (t3[0] += "/"), t3.join("/") || (isAbsolute(e10) ? "/" : ".");
        }, basename = function(e10, t3) {
          let i2 = pathe_M_eThtNZ_normalizeWindowsPath(e10).split("/"), s2 = "";
          for (let e11 = i2.length - 1; e11 >= 0; e11--) {
            let t4 = i2[e11];
            if (t4) {
              s2 = t4;
              break;
            }
          }
          return t3 && s2.endsWith(t3) ? s2.slice(0, -t3.length) : s2;
        }, eE = require_node_url(), ek = require_node_assert(), eS = require_node_process(), eC = require_node_path(), ew = require_node_v8(), eT = require_node_util(), eI = new Set(ed.builtinModules);
        function normalizeSlash(e10) {
          return e10.replace(/\\/g, "/");
        }
        let eR = {}.hasOwnProperty, eP = /^([A-Z][a-z\d]*)+$/, eA = /* @__PURE__ */ new Set(["string", "function", "number", "object", "Function", "Object", "boolean", "bigint", "symbol"]), eN = {};
        function formatList(e10, t3 = "and") {
          return e10.length < 3 ? e10.join(` ${t3} `) : `${e10.slice(0, -1).join(", ")}, ${t3} ${e10[e10.length - 1]}`;
        }
        let eL = /* @__PURE__ */ new Map();
        function createError(e10, t3, i2) {
          return eL.set(e10, t3), makeNodeErrorWithCode(i2, e10);
        }
        function makeNodeErrorWithCode(e10, t3) {
          return NodeError;
          function NodeError(...i2) {
            let s2 = Error.stackTraceLimit;
            isErrorStackTraceLimitWritable() && (Error.stackTraceLimit = 0);
            let r2 = new e10();
            isErrorStackTraceLimitWritable() && (Error.stackTraceLimit = s2);
            let n2 = getMessage(t3, i2, r2);
            return Object.defineProperties(r2, { message: { value: n2, enumerable: false, writable: true, configurable: true }, toString: { value() {
              return `${this.name} [${t3}]: ${this.message}`;
            }, enumerable: false, writable: true, configurable: true } }), eD(r2), r2.code = t3, r2;
          }
        }
        function isErrorStackTraceLimitWritable() {
          try {
            if (ew.startupSnapshot.isBuildingSnapshot()) return false;
          } catch {
          }
          let e10 = Object.getOwnPropertyDescriptor(Error, "stackTraceLimit");
          return void 0 === e10 ? Object.isExtensible(Error) : eR.call(e10, "writable") && void 0 !== e10.writable ? e10.writable : void 0 !== e10.set;
        }
        eN.ERR_INVALID_ARG_TYPE = createError("ERR_INVALID_ARG_TYPE", (e10, t3, i2) => {
          ek("string" == typeof e10, "'name' must be a string"), Array.isArray(t3) || (t3 = [t3]);
          let s2 = "The ";
          if (e10.endsWith(" argument")) s2 += `${e10} `;
          else {
            let t4 = e10.includes(".") ? "property" : "argument";
            s2 += `"${e10}" ${t4} `;
          }
          s2 += "must be ";
          let r2 = [], n2 = [], a2 = [];
          for (let e11 of t3) ek("string" == typeof e11, "All expected entries have to be of type string"), eA.has(e11) ? r2.push(e11.toLowerCase()) : null === eP.exec(e11) ? (ek("object" !== e11, 'The value "object" should be written as "Object"'), a2.push(e11)) : n2.push(e11);
          if (n2.length > 0) {
            let e11 = r2.indexOf("object");
            -1 !== e11 && (r2.slice(e11, 1), n2.push("Object"));
          }
          return r2.length > 0 && (s2 += `${r2.length > 1 ? "one of type" : "of type"} ${formatList(r2, "or")}`, (n2.length > 0 || a2.length > 0) && (s2 += " or ")), n2.length > 0 && (s2 += `an instance of ${formatList(n2, "or")}`, a2.length > 0 && (s2 += " or ")), a2.length > 0 && (a2.length > 1 ? s2 += `one of ${formatList(a2, "or")}` : (a2[0].toLowerCase() !== a2[0] && (s2 += "an "), s2 += `${a2[0]}`)), s2 += `. Received ${determineSpecificType(i2)}`;
        }, TypeError), eN.ERR_INVALID_MODULE_SPECIFIER = createError("ERR_INVALID_MODULE_SPECIFIER", (e10, t3, i2) => `Invalid module "${e10}" ${t3}${i2 ? ` imported from ${i2}` : ""}`, TypeError), eN.ERR_INVALID_PACKAGE_CONFIG = createError("ERR_INVALID_PACKAGE_CONFIG", (e10, t3, i2) => `Invalid package config ${e10}${t3 ? ` while importing ${t3}` : ""}${i2 ? `. ${i2}` : ""}`, Error), eN.ERR_INVALID_PACKAGE_TARGET = createError("ERR_INVALID_PACKAGE_TARGET", (e10, t3, i2, s2 = false, r2) => {
          let n2 = "string" == typeof i2 && !s2 && i2.length > 0 && !i2.startsWith("./");
          return "." === t3 ? (ek(false === s2), `Invalid "exports" main target ${JSON.stringify(i2)} defined in the package config ${e10}package.json${r2 ? ` imported from ${r2}` : ""}${n2 ? '; targets must start with "./"' : ""}`) : `Invalid "${s2 ? "imports" : "exports"}" target ${JSON.stringify(i2)} defined for '${t3}' in the package config ${e10}package.json${r2 ? ` imported from ${r2}` : ""}${n2 ? '; targets must start with "./"' : ""}`;
        }, Error), eN.ERR_MODULE_NOT_FOUND = createError("ERR_MODULE_NOT_FOUND", (e10, t3, i2 = false) => `Cannot find ${i2 ? "module" : "package"} '${e10}' imported from ${t3}`, Error), eN.ERR_NETWORK_IMPORT_DISALLOWED = createError("ERR_NETWORK_IMPORT_DISALLOWED", "import of '%s' by %s is not supported: %s", Error), eN.ERR_PACKAGE_IMPORT_NOT_DEFINED = createError("ERR_PACKAGE_IMPORT_NOT_DEFINED", (e10, t3, i2) => `Package import specifier "${e10}" is not defined${t3 ? ` in package ${t3}package.json` : ""} imported from ${i2}`, TypeError), eN.ERR_PACKAGE_PATH_NOT_EXPORTED = createError("ERR_PACKAGE_PATH_NOT_EXPORTED", (e10, t3, i2) => "." === t3 ? `No "exports" main defined in ${e10}package.json${i2 ? ` imported from ${i2}` : ""}` : `Package subpath '${t3}' is not defined by "exports" in ${e10}package.json${i2 ? ` imported from ${i2}` : ""}`, Error), eN.ERR_UNSUPPORTED_DIR_IMPORT = createError("ERR_UNSUPPORTED_DIR_IMPORT", "Directory import '%s' is not supported resolving ES modules imported from %s", Error), eN.ERR_UNSUPPORTED_RESOLVE_REQUEST = createError("ERR_UNSUPPORTED_RESOLVE_REQUEST", 'Failed to resolve module specifier "%s" from "%s": Invalid relative URL or base scheme is not hierarchical.', TypeError), eN.ERR_UNKNOWN_FILE_EXTENSION = createError("ERR_UNKNOWN_FILE_EXTENSION", (e10, t3) => `Unknown file extension "${e10}" for ${t3}`, TypeError), eN.ERR_INVALID_ARG_VALUE = createError("ERR_INVALID_ARG_VALUE", (e10, t3, i2 = "is invalid") => {
          let s2 = (0, eT.inspect)(t3);
          s2.length > 128 && (s2 = `${s2.slice(0, 128)}...`);
          let r2 = e10.includes(".") ? "property" : "argument";
          return `The ${r2} '${e10}' ${i2}. Received ${s2}`;
        }, TypeError);
        let eD = (s = "__node_internal_" + (n = function(t3) {
          let i2 = isErrorStackTraceLimitWritable();
          return i2 && (e2 = Error.stackTraceLimit, Error.stackTraceLimit = 1 / 0), Error.captureStackTrace(t3), i2 && (Error.stackTraceLimit = e2), t3;
        }).name, Object.defineProperty(n, "name", { value: s }), n);
        function getMessage(e10, t3, i2) {
          let s2 = eL.get(e10);
          if (ek(void 0 !== s2, "expected `message` to be found"), "function" == typeof s2) return ek(s2.length <= t3.length, `Code: ${e10}; The provided arguments length (${t3.length}) does not match the required ones (${s2.length}).`), Reflect.apply(s2, i2, t3);
          let r2 = /%[dfijoOs]/g, n2 = 0;
          for (; null !== r2.exec(s2); ) n2++;
          return (ek(n2 === t3.length, `Code: ${e10}; The provided arguments length (${t3.length}) does not match the required ones (${n2}).`), 0 === t3.length) ? s2 : (t3.unshift(s2), Reflect.apply(eT.format, null, t3));
        }
        function determineSpecificType(e10) {
          if (null == e10) return String(e10);
          if ("function" == typeof e10 && e10.name) return `function ${e10.name}`;
          if ("object" == typeof e10) return e10.constructor && e10.constructor.name ? `an instance of ${e10.constructor.name}` : `${(0, eT.inspect)(e10, { depth: -1 })}`;
          let t3 = (0, eT.inspect)(e10, { colors: false });
          return t3.length > 28 && (t3 = `${t3.slice(0, 25)}...`), `type ${typeof e10} (${t3})`;
        }
        let eO = {}.hasOwnProperty, { ERR_INVALID_PACKAGE_CONFIG: eV } = eN, eU = /* @__PURE__ */ new Map();
        function read(e10, { base: t3, specifier: i2 }) {
          let s2, r2 = eU.get(e10);
          if (r2) return r2;
          try {
            s2 = ef.readFileSync(eC.toNamespacedPath(e10), "utf8");
          } catch (e11) {
            if ("ENOENT" !== e11.code) throw e11;
          }
          let n2 = { exists: false, pjsonPath: e10, main: void 0, name: void 0, type: "none", exports: void 0, imports: void 0 };
          if (void 0 !== s2) {
            let r3;
            try {
              r3 = JSON.parse(s2);
            } catch (r4) {
              let s3 = new eV(e10, (t3 ? `"${i2}" from ` : "") + (0, eE.fileURLToPath)(t3 || i2), r4.message);
              throw s3.cause = r4, s3;
            }
            n2.exists = true, eO.call(r3, "name") && "string" == typeof r3.name && (n2.name = r3.name), eO.call(r3, "main") && "string" == typeof r3.main && (n2.main = r3.main), eO.call(r3, "exports") && (n2.exports = r3.exports), eO.call(r3, "imports") && (n2.imports = r3.imports), eO.call(r3, "type") && ("commonjs" === r3.type || "module" === r3.type) && (n2.type = r3.type);
          }
          return eU.set(e10, n2), n2;
        }
        function getPackageScopeConfig(e10) {
          let t3 = new URL("package.json", e10);
          for (; !t3.pathname.endsWith("node_modules/package.json"); ) {
            let i2 = read((0, eE.fileURLToPath)(t3), { specifier: e10 });
            if (i2.exists) return i2;
            let s2 = t3;
            if ((t3 = new URL("../package.json", t3)).pathname === s2.pathname) break;
          }
          return { pjsonPath: (0, eE.fileURLToPath)(t3), exists: false, type: "none" };
        }
        let { ERR_UNKNOWN_FILE_EXTENSION: eM } = eN, ej = {}.hasOwnProperty, eB = { __proto__: null, ".cjs": "commonjs", ".js": "module", ".json": "json", ".mjs": "module" };
        function mimeToFormat(e10) {
          return e10 && /\s*(text|application)\/javascript\s*(;\s*charset=utf-?8\s*)?/i.test(e10) ? "module" : "application/json" === e10 ? "json" : null;
        }
        let eF = { __proto__: null, "data:": getDataProtocolModuleFormat, "file:": getFileProtocolModuleFormat, "http:": getHttpProtocolModuleFormat, "https:": getHttpProtocolModuleFormat, "node:": () => "builtin" };
        function getDataProtocolModuleFormat(e10) {
          let { 1: t3 } = /^([^/]+\/[^;,]+)[^,]*?(;base64)?,/.exec(e10.pathname) || [null, null, null];
          return mimeToFormat(t3);
        }
        function dist_extname(e10) {
          let t3 = e10.pathname, i2 = t3.length;
          for (; i2--; ) {
            let e11 = t3.codePointAt(i2);
            if (47 === e11) break;
            if (46 === e11) return 47 === t3.codePointAt(i2 - 1) ? "" : t3.slice(i2);
          }
          return "";
        }
        function getFileProtocolModuleFormat(e10, t3, i2) {
          let s2 = dist_extname(e10);
          if (".js" === s2) {
            let t4 = getPackageScopeConfig(e10).type;
            return "none" !== t4 ? t4 : "commonjs";
          }
          if ("" === s2) {
            let t4 = getPackageScopeConfig(e10).type;
            return "none" === t4 || "commonjs" === t4 ? "commonjs" : "module";
          }
          let r2 = eB[s2];
          if (r2) return r2;
          if (!i2) throw new eM(s2, (0, eE.fileURLToPath)(e10));
        }
        function getHttpProtocolModuleFormat() {
        }
        function defaultGetFormatWithoutErrors(e10, t3) {
          let i2 = e10.protocol;
          return ej.call(eF, i2) && eF[i2](e10, t3, true) || null;
        }
        let e$ = RegExp.prototype[Symbol.replace], { ERR_INVALID_MODULE_SPECIFIER: eq, ERR_INVALID_PACKAGE_CONFIG: eW, ERR_INVALID_PACKAGE_TARGET: eG, ERR_MODULE_NOT_FOUND: eH, ERR_PACKAGE_IMPORT_NOT_DEFINED: ez, ERR_PACKAGE_PATH_NOT_EXPORTED: eK, ERR_UNSUPPORTED_DIR_IMPORT: eZ, ERR_UNSUPPORTED_RESOLVE_REQUEST: eJ } = eN, eY = {}.hasOwnProperty, eQ = /(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\|\/|$)/i, eX = /(^|\\|\/)((\.|%2e)(\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\|\/|$)/i, e1 = /^\.|%|\\/, e0 = /\*/g, e22 = /%2f|%5c/i, e3 = /* @__PURE__ */ new Set(), e4 = /[/\\]{2}/;
        function emitInvalidSegmentDeprecation(e10, t3, i2, s2, r2, n2, a2) {
          if (eS.noDeprecation) return;
          let o2 = (0, eE.fileURLToPath)(s2), h2 = null !== e4.exec(a2 ? e10 : t3);
          eS.emitWarning(`Use of deprecated ${h2 ? "double slash" : "leading or trailing slash matching"} resolving "${e10}" for module request "${t3}" ${t3 === i2 ? "" : `matched to "${i2}" `}in the "${r2 ? "imports" : "exports"}" field module resolution of the package at ${o2}${n2 ? ` imported from ${(0, eE.fileURLToPath)(n2)}` : ""}.`, "DeprecationWarning", "DEP0166");
        }
        function emitLegacyIndexDeprecation(e10, t3, i2, s2) {
          if (eS.noDeprecation || "module" !== defaultGetFormatWithoutErrors(e10, { parentURL: i2.href })) return;
          let r2 = (0, eE.fileURLToPath)(e10.href), n2 = (0, eE.fileURLToPath)(new eE.URL(".", t3)), a2 = (0, eE.fileURLToPath)(i2);
          s2 ? eC.resolve(n2, s2) !== r2 && eS.emitWarning(`Package ${n2} has a "main" field set to "${s2}", excluding the full filename and extension to the resolved file at "${r2.slice(n2.length)}", imported from ${a2}.
 Automatic extension resolution of the "main" field is deprecated for ES modules.`, "DeprecationWarning", "DEP0151") : eS.emitWarning(`No "main" or "exports" field defined in the package.json for ${n2} resolving the main entry point "${r2.slice(n2.length)}", imported from ${a2}.
Default "index" lookups for the main are deprecated for ES modules.`, "DeprecationWarning", "DEP0151");
        }
        function tryStatSync(e10) {
          try {
            return (0, ef.statSync)(e10);
          } catch {
          }
        }
        function fileExists(e10) {
          let t3 = (0, ef.statSync)(e10, { throwIfNoEntry: false }), i2 = t3 ? t3.isFile() : void 0;
          return null != i2 && i2;
        }
        function legacyMainResolve(e10, t3, i2) {
          let s2;
          if (void 0 !== t3.main) {
            if (fileExists(s2 = new eE.URL(t3.main, e10))) return s2;
            let r3 = [`./${t3.main}.js`, `./${t3.main}.json`, `./${t3.main}.node`, `./${t3.main}/index.js`, `./${t3.main}/index.json`, `./${t3.main}/index.node`], n3 = -1;
            for (; ++n3 < r3.length && !fileExists(s2 = new eE.URL(r3[n3], e10)); ) s2 = void 0;
            if (s2) return emitLegacyIndexDeprecation(s2, e10, i2, t3.main), s2;
          }
          let r2 = ["./index.js", "./index.json", "./index.node"], n2 = -1;
          for (; ++n2 < r2.length && !fileExists(s2 = new eE.URL(r2[n2], e10)); ) s2 = void 0;
          if (s2) return emitLegacyIndexDeprecation(s2, e10, i2, t3.main), s2;
          throw new eH((0, eE.fileURLToPath)(new eE.URL(".", e10)), (0, eE.fileURLToPath)(i2));
        }
        function finalizeResolution(e10, t3, i2) {
          let s2;
          if (null !== e22.exec(e10.pathname)) throw new eq(e10.pathname, 'must not include encoded "/" or "\\" characters', (0, eE.fileURLToPath)(t3));
          try {
            s2 = (0, eE.fileURLToPath)(e10);
          } catch (i3) {
            throw Object.defineProperty(i3, "input", { value: String(e10) }), Object.defineProperty(i3, "module", { value: String(t3) }), i3;
          }
          let r2 = tryStatSync(s2.endsWith("/") ? s2.slice(-1) : s2);
          if (r2 && r2.isDirectory()) {
            let i3 = new eZ(s2, (0, eE.fileURLToPath)(t3));
            throw i3.url = String(e10), i3;
          }
          if (!r2 || !r2.isFile()) {
            let i3 = new eH(s2 || e10.pathname, t3 && (0, eE.fileURLToPath)(t3), true);
            throw i3.url = String(e10), i3;
          }
          {
            let t4 = (0, ef.realpathSync)(s2), { search: i3, hash: r3 } = e10;
            (e10 = (0, eE.pathToFileURL)(t4 + (s2.endsWith(eC.sep) ? "/" : ""))).search = i3, e10.hash = r3;
          }
          return e10;
        }
        function importNotDefined(e10, t3, i2) {
          return new ez(e10, t3 && (0, eE.fileURLToPath)(new eE.URL(".", t3)), (0, eE.fileURLToPath)(i2));
        }
        function exportsNotFound(e10, t3, i2) {
          return new eK((0, eE.fileURLToPath)(new eE.URL(".", t3)), e10, i2 && (0, eE.fileURLToPath)(i2));
        }
        function throwInvalidSubpath(e10, t3, i2, s2, r2) {
          throw new eq(e10, `request is not a valid match in pattern "${t3}" for the "${s2 ? "imports" : "exports"}" resolution of ${(0, eE.fileURLToPath)(i2)}`, r2 && (0, eE.fileURLToPath)(r2));
        }
        function invalidPackageTarget(e10, t3, i2, s2, r2) {
          return t3 = "object" == typeof t3 && null !== t3 ? JSON.stringify(t3, null, "") : `${t3}`, new eG((0, eE.fileURLToPath)(new eE.URL(".", i2)), e10, t3, s2, r2 && (0, eE.fileURLToPath)(r2));
        }
        function resolvePackageTargetString(e10, t3, i2, s2, r2, n2, a2, o2, h2) {
          if ("" !== t3 && !n2 && "/" !== e10[e10.length - 1]) throw invalidPackageTarget(i2, e10, s2, a2, r2);
          if (!e10.startsWith("./")) {
            if (a2 && !e10.startsWith("../") && !e10.startsWith("/")) {
              let i3 = false;
              try {
                new eE.URL(e10), i3 = true;
              } catch {
              }
              if (!i3) return packageResolve(n2 ? e$.call(e0, e10, () => t3) : e10 + t3, s2, h2);
            }
            throw invalidPackageTarget(i2, e10, s2, a2, r2);
          }
          if (null !== eQ.exec(e10.slice(2))) if (null === eX.exec(e10.slice(2))) {
            if (!o2) {
              let o3 = n2 ? i2.replace("*", () => t3) : i2 + t3;
              emitInvalidSegmentDeprecation(n2 ? e$.call(e0, e10, () => t3) : e10, o3, i2, s2, a2, r2, true);
            }
          } else throw invalidPackageTarget(i2, e10, s2, a2, r2);
          let c2 = new eE.URL(e10, s2), p2 = c2.pathname, l2 = new eE.URL(".", s2).pathname;
          if (!p2.startsWith(l2)) throw invalidPackageTarget(i2, e10, s2, a2, r2);
          if ("" === t3) return c2;
          if (null !== eQ.exec(t3)) {
            let h3 = n2 ? i2.replace("*", () => t3) : i2 + t3;
            null === eX.exec(t3) ? o2 || emitInvalidSegmentDeprecation(n2 ? e$.call(e0, e10, () => t3) : e10, h3, i2, s2, a2, r2, false) : throwInvalidSubpath(h3, i2, s2, a2, r2);
          }
          return n2 ? new eE.URL(e$.call(e0, c2.href, () => t3)) : new eE.URL(t3, c2);
        }
        function isArrayIndex(e10) {
          let t3 = Number(e10);
          return `${t3}` === e10 && t3 >= 0 && t3 < 4294967295;
        }
        function resolvePackageTarget(e10, t3, i2, s2, r2, n2, a2, o2, h2) {
          if ("string" == typeof t3) return resolvePackageTargetString(t3, i2, s2, e10, r2, n2, a2, o2, h2);
          if (Array.isArray(t3)) {
            let c2;
            if (0 === t3.length) return null;
            let p2 = -1;
            for (; ++p2 < t3.length; ) {
              let l2, u2 = t3[p2];
              try {
                l2 = resolvePackageTarget(e10, u2, i2, s2, r2, n2, a2, o2, h2);
              } catch (e11) {
                if (c2 = e11, "ERR_INVALID_PACKAGE_TARGET" === e11.code) continue;
                throw e11;
              }
              if (void 0 !== l2) {
                if (null === l2) {
                  c2 = null;
                  continue;
                }
                return l2;
              }
            }
            if (null == c2) return null;
            throw c2;
          }
          if ("object" == typeof t3 && null !== t3) {
            let c2 = Object.getOwnPropertyNames(t3), p2 = -1;
            for (; ++p2 < c2.length; ) if (isArrayIndex(c2[p2])) throw new eW((0, eE.fileURLToPath)(e10), r2, '"exports" cannot contain numeric property keys.');
            for (p2 = -1; ++p2 < c2.length; ) {
              let l2 = c2[p2];
              if ("default" === l2 || h2 && h2.has(l2)) {
                let c3 = resolvePackageTarget(e10, t3[l2], i2, s2, r2, n2, a2, o2, h2);
                if (void 0 === c3) continue;
                return c3;
              }
            }
            return null;
          }
          if (null === t3) return null;
          throw invalidPackageTarget(s2, t3, e10, a2, r2);
        }
        function isConditionalExportsMainSugar(e10, t3, i2) {
          if ("string" == typeof e10 || Array.isArray(e10)) return true;
          if ("object" != typeof e10 || null === e10) return false;
          let s2 = Object.getOwnPropertyNames(e10), r2 = false, n2 = 0, a2 = -1;
          for (; ++a2 < s2.length; ) {
            let e11 = s2[a2], o2 = "" === e11 || "." !== e11[0];
            if (0 == n2++) r2 = o2;
            else if (r2 !== o2) throw new eW((0, eE.fileURLToPath)(t3), i2, `"exports" cannot contain some keys starting with '.' and some not. The exports object must either be an object of package subpath keys or an object of main entry condition name keys only.`);
          }
          return r2;
        }
        function emitTrailingSlashPatternDeprecation(e10, t3, i2) {
          if (eS.noDeprecation) return;
          let s2 = (0, eE.fileURLToPath)(t3);
          e3.has(s2 + "|" + e10) || (e3.add(s2 + "|" + e10), eS.emitWarning(`Use of deprecated trailing slash pattern mapping "${e10}" in the "exports" field module resolution of the package at ${s2}${i2 ? ` imported from ${(0, eE.fileURLToPath)(i2)}` : ""}. Mapping specifiers ending in "/" is no longer supported.`, "DeprecationWarning", "DEP0155"));
        }
        function packageExportsResolve(e10, t3, i2, s2, r2) {
          let n2 = i2.exports;
          if (isConditionalExportsMainSugar(n2, e10, s2) && (n2 = { ".": n2 }), eY.call(n2, t3) && !t3.includes("*") && !t3.endsWith("/")) {
            let i3 = resolvePackageTarget(e10, n2[t3], "", t3, s2, false, false, false, r2);
            if (null == i3) throw exportsNotFound(t3, e10, s2);
            return i3;
          }
          let a2 = "", o2 = "", h2 = Object.getOwnPropertyNames(n2), c2 = -1;
          for (; ++c2 < h2.length; ) {
            let i3 = h2[c2], r3 = i3.indexOf("*");
            if (-1 !== r3 && t3.startsWith(i3.slice(0, r3))) {
              t3.endsWith("/") && emitTrailingSlashPatternDeprecation(t3, e10, s2);
              let n3 = i3.slice(r3 + 1);
              t3.length >= i3.length && t3.endsWith(n3) && 1 === patternKeyCompare(a2, i3) && i3.lastIndexOf("*") === r3 && (a2 = i3, o2 = t3.slice(r3, t3.length - n3.length));
            }
          }
          if (a2) {
            let i3 = resolvePackageTarget(e10, n2[a2], o2, a2, s2, true, false, t3.endsWith("/"), r2);
            if (null == i3) throw exportsNotFound(t3, e10, s2);
            return i3;
          }
          throw exportsNotFound(t3, e10, s2);
        }
        function patternKeyCompare(e10, t3) {
          let i2 = e10.indexOf("*"), s2 = t3.indexOf("*"), r2 = -1 === i2 ? e10.length : i2 + 1, n2 = -1 === s2 ? t3.length : s2 + 1;
          return r2 > n2 ? -1 : n2 > r2 || -1 === i2 ? 1 : -1 === s2 || e10.length > t3.length ? -1 : +(t3.length > e10.length);
        }
        function packageImportsResolve(e10, t3, i2) {
          let s2;
          if ("#" === e10 || e10.startsWith("#/") || e10.endsWith("/")) throw new eq(e10, "is not a valid internal imports specifier name", (0, eE.fileURLToPath)(t3));
          let r2 = getPackageScopeConfig(t3);
          if (r2.exists) {
            s2 = (0, eE.pathToFileURL)(r2.pjsonPath);
            let n2 = r2.imports;
            if (n2) if (eY.call(n2, e10) && !e10.includes("*")) {
              let r3 = resolvePackageTarget(s2, n2[e10], "", e10, t3, false, true, false, i2);
              if (null != r3) return r3;
            } else {
              let r3 = "", a2 = "", o2 = Object.getOwnPropertyNames(n2), h2 = -1;
              for (; ++h2 < o2.length; ) {
                let t4 = o2[h2], i3 = t4.indexOf("*");
                if (-1 !== i3 && e10.startsWith(t4.slice(0, -1))) {
                  let s3 = t4.slice(i3 + 1);
                  e10.length >= t4.length && e10.endsWith(s3) && 1 === patternKeyCompare(r3, t4) && t4.lastIndexOf("*") === i3 && (r3 = t4, a2 = e10.slice(i3, e10.length - s3.length));
                }
              }
              if (r3) {
                let e11 = resolvePackageTarget(s2, n2[r3], a2, r3, t3, true, true, false, i2);
                if (null != e11) return e11;
              }
            }
          }
          throw importNotDefined(e10, s2, t3);
        }
        function parsePackageName(e10, t3) {
          let i2 = e10.indexOf("/"), s2 = true, r2 = false;
          "@" === e10[0] && (r2 = true, -1 === i2 || 0 === e10.length ? s2 = false : i2 = e10.indexOf("/", i2 + 1));
          let n2 = -1 === i2 ? e10 : e10.slice(0, i2);
          if (null !== e1.exec(n2) && (s2 = false), !s2) throw new eq(e10, "is not a valid package name", (0, eE.fileURLToPath)(t3));
          return { packageName: n2, packageSubpath: "." + (-1 === i2 ? "" : e10.slice(i2)), isScoped: r2 };
        }
        function packageResolve(e10, t3, i2) {
          let s2;
          if (ed.builtinModules.includes(e10)) return new eE.URL("node:" + e10);
          let { packageName: r2, packageSubpath: n2, isScoped: a2 } = parsePackageName(e10, t3), o2 = getPackageScopeConfig(t3);
          if (o2.exists) {
            let e11 = (0, eE.pathToFileURL)(o2.pjsonPath);
            if (o2.name === r2 && void 0 !== o2.exports && null !== o2.exports) return packageExportsResolve(e11, n2, o2, t3, i2);
          }
          let h2 = new eE.URL("./node_modules/" + r2 + "/package.json", t3), c2 = (0, eE.fileURLToPath)(h2);
          do {
            let o3 = tryStatSync(c2.slice(0, -13));
            if (!o3 || !o3.isDirectory()) {
              s2 = c2, h2 = new eE.URL((a2 ? "../../../../node_modules/" : "../../../node_modules/") + r2 + "/package.json", h2), c2 = (0, eE.fileURLToPath)(h2);
              continue;
            }
            let p2 = read(c2, { base: t3, specifier: e10 });
            if (void 0 !== p2.exports && null !== p2.exports) return packageExportsResolve(h2, n2, p2, t3, i2);
            if ("." === n2) return legacyMainResolve(h2, p2, t3);
            return new eE.URL(n2, h2);
          } while (c2.length !== s2.length);
          throw new eH(r2, (0, eE.fileURLToPath)(t3), false);
        }
        function isRelativeSpecifier(e10) {
          return "." === e10[0] && (1 === e10.length || "/" === e10[1] || "." === e10[1] && (2 === e10.length || "/" === e10[2])) || false;
        }
        function shouldBeTreatedAsRelativeOrAbsolutePath(e10) {
          return "" !== e10 && ("/" === e10[0] || isRelativeSpecifier(e10));
        }
        function moduleResolve(e10, t3, i2, s2) {
          let r2, n2 = t3.protocol;
          if (shouldBeTreatedAsRelativeOrAbsolutePath(e10)) try {
            r2 = new eE.URL(e10, t3);
          } catch (s3) {
            let i3 = new eJ(e10, t3);
            throw i3.cause = s3, i3;
          }
          else if ("file:" === n2 && "#" === e10[0]) r2 = packageImportsResolve(e10, t3, i2);
          else try {
            r2 = new eE.URL(e10);
          } catch (s3) {
            if (("data:" === n2 || "http:" === n2 || "https:" === n2) && !ed.builtinModules.includes(e10)) {
              let i3 = new eJ(e10, t3);
              throw i3.cause = s3, i3;
            }
            r2 = packageResolve(e10, t3, i2);
          }
          return (ek(void 0 !== r2, "expected to be defined"), "file:" !== r2.protocol) ? r2 : finalizeResolution(r2, t3);
        }
        function fileURLToPath(e10) {
          return "string" != typeof e10 || e10.startsWith("file://") ? normalizeSlash((0, eE.fileURLToPath)(e10)) : normalizeSlash(e10);
        }
        function pathToFileURL(e10) {
          return (0, eE.pathToFileURL)(fileURLToPath(e10)).toString();
        }
        function normalizeid(e10) {
          return ("string" != typeof e10 && (e10 = e10.toString()), /(?:node|data|http|https|file):/.test(e10)) ? e10 : eI.has(e10) ? "node:" + e10 : "file://" + encodeURI(normalizeSlash(e10));
        }
        let e6 = /* @__PURE__ */ new Set(["node", "import"]), e5 = [".mjs", ".cjs", ".js", ".json"], e9 = /* @__PURE__ */ new Set(["ERR_MODULE_NOT_FOUND", "ERR_UNSUPPORTED_DIR_IMPORT", "MODULE_NOT_FOUND", "ERR_PACKAGE_PATH_NOT_EXPORTED"]);
        function _tryModuleResolve(e10, t3, i2) {
          try {
            return moduleResolve(e10, t3, i2);
          } catch (e11) {
            if (!e9.has(e11 == null ? void 0 : e11.code)) throw e11;
          }
        }
        function _resolve(e10, t3 = {}) {
          let i2;
          if ("string" != typeof e10) if (e10 instanceof URL) e10 = fileURLToPath(e10);
          else throw TypeError("input must be a `string` or `URL`");
          if (/(?:node|data|http|https):/.test(e10)) return e10;
          if (eI.has(e10)) return "node:" + e10;
          if (e10.startsWith("file://") && (e10 = fileURLToPath(e10)), isAbsolute(e10)) try {
            if ((0, ef.statSync)(e10).isFile()) return pathToFileURL(e10);
          } catch (e11) {
            if ((e11 == null ? void 0 : e11.code) !== "ENOENT") throw e11;
          }
          let s2 = t3.conditions ? new Set(t3.conditions) : e6, r2 = (Array.isArray(t3.url) ? t3.url : [t3.url]).filter(Boolean).map((e11) => new URL(normalizeid(e11.toString())));
          0 === r2.length && r2.push(new URL(pathToFileURL(process.cwd())));
          let n2 = [...r2];
          for (let e11 of r2) "file:" === e11.protocol && n2.push(new URL("./", e11), new URL(dist_joinURL(e11.pathname, "_index.js"), e11), new URL("node_modules", e11));
          for (let r3 of n2) {
            if (i2 = _tryModuleResolve(e10, r3, s2)) break;
            for (let n3 of ["", "/index"]) {
              for (let a2 of t3.extensions || e5) if (i2 = _tryModuleResolve(dist_joinURL(e10, n3) + a2, r3, s2)) break;
              if (i2) break;
            }
            if (i2) break;
          }
          if (!i2) {
            let t4 = Error(`Cannot find module ${e10} imported from ${n2.join(", ")}`);
            throw t4.code = "ERR_MODULE_NOT_FOUND", t4;
          }
          return pathToFileURL(i2);
        }
        function resolveSync(e10, t3) {
          return _resolve(e10, t3);
        }
        function resolvePathSync(e10, t3) {
          return fileURLToPath(resolveSync(e10, t3));
        }
        let e8 = /(?:[\s;]|^)(?:import[\s\w*,{}]*from|import\s*["'*{]|export\b\s*(?:[*{]|default|class|type|function|const|var|let|async function)|import\.meta\b)/m, e7 = /\/\*.+?\*\/|\/\/.*(?=[nr])/g;
        function hasESMSyntax(e10, t3 = {}) {
          return t3.stripComments && (e10 = e10.replace(e7, "")), e8.test(e10);
        }
        function escapeStringRegexp(e10) {
          if ("string" != typeof e10) throw TypeError("Expected a string");
          return e10.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
        }
        let te = /* @__PURE__ */ new Set(["/", "\\", void 0]), tt = Symbol.for("pathe:normalizedAlias"), ti = /[/\\]/;
        function normalizeAliases(e10) {
          var _a2;
          if (e10[tt]) return e10;
          let t3 = Object.fromEntries(Object.entries(e10).sort(([e11], [t4]) => _compareAliases(e11, t4)));
          for (let e11 in t3) for (let i2 in t3) !(i2 === e11 || e11.startsWith(i2)) && ((_a2 = t3[e11]) == null ? void 0 : _a2.startsWith(i2)) && te.has(t3[e11][i2.length]) && (t3[e11] = t3[i2] + t3[e11].slice(i2.length));
          return Object.defineProperty(t3, tt, { value: true, enumerable: false }), t3;
        }
        function resolveAlias(e10, t3) {
          let i2 = pathe_M_eThtNZ_normalizeWindowsPath(e10);
          for (let [e11, s2] of Object.entries(t3 = normalizeAliases(t3))) {
            if (!i2.startsWith(e11)) continue;
            let t4 = utils_hasTrailingSlash(e11) ? e11.slice(0, -1) : e11;
            if (utils_hasTrailingSlash(i2[t4.length])) return pathe_M_eThtNZ_join(s2, i2.slice(e11.length));
          }
          return i2;
        }
        function utils_filename(e10) {
          let t3 = e10.split(ti).pop();
          if (!t3) return;
          let i2 = t3.lastIndexOf(".");
          return i2 <= 0 ? t3 : t3.slice(0, i2);
        }
        function _compareAliases(e10, t3) {
          return t3.split("/").length - e10.split("/").length;
        }
        function utils_hasTrailingSlash(e10 = "/") {
          let t3 = e10[e10.length - 1];
          return "/" === t3 || "\\" === t3;
        }
        let ts = require_node_crypto();
        var tr = __webpack_require__.n(ts);
        let tn = /* @__PURE__ */ Object.create(null), dist_i = (e10) => {
          var _a2, _b2;
          return ((_a2 = globalThis.process) == null ? void 0 : _a2.env) || ((_b2 = globalThis.Deno) == null ? void 0 : _b2.env.toObject()) || globalThis.__env__ || (e10 ? tn : globalThis);
        }, ta = new Proxy(tn, { get: (e10, t3) => dist_i()[t3] ?? tn[t3], has: (e10, t3) => t3 in dist_i() || t3 in tn, set: (e10, t3, i2) => (dist_i(true)[t3] = i2, true), deleteProperty(e10, t3) {
          if (!t3) return false;
          let i2 = dist_i(true);
          return delete i2[t3], true;
        }, ownKeys: () => Object.keys(dist_i(true)) }), to = "u" > typeof process && process.env && "development" || "", th = [["APPVEYOR"], ["AWS_AMPLIFY", "AWS_APP_ID", { ci: true }], ["AZURE_PIPELINES", "SYSTEM_TEAMFOUNDATIONCOLLECTIONURI"], ["AZURE_STATIC", "INPUT_AZURE_STATIC_WEB_APPS_API_TOKEN"], ["APPCIRCLE", "AC_APPCIRCLE"], ["BAMBOO", "bamboo_planKey"], ["BITBUCKET", "BITBUCKET_COMMIT"], ["BITRISE", "BITRISE_IO"], ["BUDDY", "BUDDY_WORKSPACE_ID"], ["BUILDKITE"], ["CIRCLE", "CIRCLECI"], ["CIRRUS", "CIRRUS_CI"], ["CLOUDFLARE_PAGES", "CF_PAGES", { ci: true }], ["CLOUDFLARE_WORKERS", "WORKERS_CI", { ci: true }], ["CODEBUILD", "CODEBUILD_BUILD_ARN"], ["CODEFRESH", "CF_BUILD_ID"], ["DRONE"], ["DRONE", "DRONE_BUILD_EVENT"], ["DSARI"], ["GITHUB_ACTIONS"], ["GITLAB", "GITLAB_CI"], ["GITLAB", "CI_MERGE_REQUEST_ID"], ["GOCD", "GO_PIPELINE_LABEL"], ["LAYERCI"], ["HUDSON", "HUDSON_URL"], ["JENKINS", "JENKINS_URL"], ["MAGNUM"], ["NETLIFY"], ["NETLIFY", "NETLIFY_LOCAL", { ci: false }], ["NEVERCODE"], ["RENDER"], ["SAIL", "SAILCI"], ["SEMAPHORE"], ["SCREWDRIVER"], ["SHIPPABLE"], ["SOLANO", "TDDIUM"], ["STRIDER"], ["TEAMCITY", "TEAMCITY_VERSION"], ["TRAVIS"], ["VERCEL", "NOW_BUILDER"], ["VERCEL", "VERCEL", { ci: false }], ["VERCEL", "VERCEL_ENV", { ci: false }], ["APPCENTER", "APPCENTER_BUILD_ID"], ["CODESANDBOX", "CODESANDBOX_SSE", { ci: false }], ["CODESANDBOX", "CODESANDBOX_HOST", { ci: false }], ["STACKBLITZ"], ["STORMKIT"], ["CLEAVR"], ["ZEABUR"], ["CODESPHERE", "CODESPHERE_APP_ID", { ci: true }], ["RAILWAY", "RAILWAY_PROJECT_ID"], ["RAILWAY", "RAILWAY_SERVICE_ID"], ["DENO-DEPLOY", "DENO_DEPLOYMENT_ID"], ["FIREBASE_APP_HOSTING", "FIREBASE_APP_HOSTING", { ci: true }]], tc = (function() {
          var _a2, _b2, _c2, _d2, _e2, _f2;
          if ((_a2 = globalThis.process) == null ? void 0 : _a2.env) for (let e10 of th) {
            let t3 = e10[1] || e10[0];
            if ((_b2 = globalThis.process) == null ? void 0 : _b2.env[t3]) return { name: e10[0].toLowerCase(), ...e10[2] };
          }
          return ((_d2 = (_c2 = globalThis.process) == null ? void 0 : _c2.env) == null ? void 0 : _d2.SHELL) === "/bin/jsh" && ((_f2 = (_e2 = globalThis.process) == null ? void 0 : _e2.versions) == null ? void 0 : _f2.webcontainer) ? { name: "stackblitz", ci: false } : { name: "", ci: false };
        })();
        function std_env_dist_n(e10) {
          return !!e10 && "false" !== e10;
        }
        tc.name;
        let tp = ((_a = globalThis.process) == null ? void 0 : _a.platform) || "", tl = (std_env_dist_n(ta.CI) || tc.ci, std_env_dist_n(((_b = globalThis.process) == null ? void 0 : _b.stdout) && ((_c = globalThis.process) == null ? void 0 : _c.stdout.isTTY))), tu = (std_env_dist_n(ta.DEBUG), "test" === to || std_env_dist_n(ta.TEST), std_env_dist_n(ta.MINIMAL), /^win/i.test(tp)), td = (/^linux/i.test(tp), /^darwin/i.test(tp), !std_env_dist_n(ta.NO_COLOR) && (std_env_dist_n(ta.FORCE_COLOR) || (tl || tu) && ta.TERM), (((_e = (_d = globalThis.process) == null ? void 0 : _d.versions) == null ? void 0 : _e.node) || "").replace(/^v/, "") || null), tf = (td == null ? void 0 : td.split(".")[0], globalThis.process || /* @__PURE__ */ Object.create(null)), tm = { versions: {} }, tg = (new Proxy(tf, { get: (e10, t3) => "env" === t3 ? ta : t3 in e10 ? e10[t3] : t3 in tm ? tm[t3] : void 0 }), ((_g = (_f = globalThis.process) == null ? void 0 : _f.release) == null ? void 0 : _g.name) === "node"), t_ = !!globalThis.Bun || !!((_i = (_h = globalThis.process) == null ? void 0 : _h.versions) == null ? void 0 : _i.bun), tx = !!globalThis.Deno, tv = !!globalThis.fastly, ty = [[!!globalThis.Netlify, "netlify"], [!!globalThis.EdgeRuntime, "edge-light"], [((_j = globalThis.navigator) == null ? void 0 : _j.userAgent) === "Cloudflare-Workers", "workerd"], [tv, "fastly"], [tx, "deno"], [t_, "bun"], [tg, "node"]], tb = (function() {
          let e10 = ty.find((e11) => e11[0]);
          if (e10) return { name: e10[1] };
        })();
        tb == null ? void 0 : tb.name;
        let tE = require_node_tty(), tk = ((_m = (_l = (_k = tE == null ? void 0 : tE.WriteStream) == null ? void 0 : _k.prototype) == null ? void 0 : _l.hasColors) == null ? void 0 : _m.call(_l)) ?? false, base_format = (e10, t3) => {
          if (!tk) return (e11) => e11;
          let i2 = `\x1B[${e10}m`, s2 = `\x1B[${t3}m`;
          return (e11) => {
            let r2 = e11 + "", n2 = r2.indexOf(s2);
            if (-1 === n2) return i2 + r2 + s2;
            let a2 = i2, o2 = 0, h2 = (22 === t3 ? s2 : "") + i2;
            for (; -1 !== n2; ) a2 += r2.slice(o2, n2) + h2, o2 = n2 + s2.length, n2 = r2.indexOf(s2, o2);
            return a2 + (r2.slice(o2) + s2);
          };
        };
        base_format(0, 0), base_format(1, 22), base_format(2, 22), base_format(3, 23), base_format(4, 24), base_format(53, 55), base_format(7, 27), base_format(8, 28), base_format(9, 29), base_format(30, 39);
        let tS = base_format(31, 39), tC = base_format(32, 39), tw = base_format(33, 39), tT = base_format(34, 39);
        base_format(35, 39);
        let tI = base_format(36, 39);
        base_format(37, 39);
        let tR = base_format(90, 39);
        function isDir(e10) {
          if ("string" != typeof e10 || e10.startsWith("file://")) return false;
          try {
            return (0, ef.lstatSync)(e10).isDirectory();
          } catch {
            return false;
          }
        }
        function isWritable(e10) {
          try {
            return (0, ef.accessSync)(e10, ef.constants.W_OK), true;
          } catch {
            return false;
          }
        }
        function utils_hash(e10, t3 = 8) {
          return (isFipsMode() ? tr().createHash("sha256") : tr().createHash("md5")).update(e10).digest("hex").slice(0, t3);
        }
        function readNearestPackageJSON(e10) {
          for (; e10 && "." !== e10 && "/" !== e10; ) {
            e10 = pathe_M_eThtNZ_join(e10, "..");
            try {
              let t3 = (0, ef.readFileSync)(pathe_M_eThtNZ_join(e10, "package.json"), "utf8");
              try {
                return JSON.parse(t3);
              } catch {
              }
              break;
            } catch {
            }
          }
        }
        function wrapModule(e10, t3) {
          return `(${(t3 == null ? void 0 : t3.async) ? "async " : ""}function (exports, require, module, __filename, __dirname, jitiImport, jitiESMResolve) { ${e10}
});`;
        }
        base_format(40, 49), base_format(41, 49), base_format(42, 49), base_format(43, 49), base_format(44, 49), base_format(45, 49), base_format(46, 49), base_format(47, 49), base_format(100, 49), base_format(91, 39), base_format(92, 39), base_format(93, 39), base_format(94, 39), base_format(95, 39), base_format(96, 39), base_format(97, 39), base_format(101, 49), base_format(102, 49), base_format(103, 49), base_format(104, 49), base_format(105, 49), base_format(106, 49), base_format(107, 49);
        let tP = { true: tC("true"), false: tw("false"), "[rebuild]": tw("[rebuild]"), "[esm]": tT("[esm]"), "[cjs]": tC("[cjs]"), "[import]": tT("[import]"), "[require]": tC("[require]"), "[native]": tI("[native]"), "[transpile]": tw("[transpile]"), "[fallback]": tS("[fallback]"), "[unknown]": tS("[unknown]"), "[hit]": tC("[hit]"), "[miss]": tw("[miss]"), "[json]": tC("[json]"), "[data]": tC("[data]") };
        function debug(e10, ...t3) {
          if (!e10.opts.debug) return;
          let i2 = process.cwd();
          console.log(tR(["[jiti]", ...t3.map((e11) => e11 in tP ? tP[e11] : "string" != typeof e11 ? JSON.stringify(e11) : e11.replace(i2, "."))].join(" ")));
        }
        function jitiInteropDefault(e10, t3) {
          return e10.opts.interopDefault ? utils_interopDefault(t3) : t3;
        }
        function utils_interopDefault(e10) {
          let t3 = typeof e10;
          if (null === e10 || "object" !== t3 && "function" !== t3) return e10;
          let i2 = e10.default, s2 = typeof i2, r2 = null == i2, n2 = "object" === s2 || "function" === s2;
          return r2 && e10 instanceof Promise ? e10 : new Proxy(e10, { get(t4, s3, a2) {
            if ("__esModule" === s3) return true;
            if ("default" === s3) return r2 ? e10 : "function" == typeof (i2 == null ? void 0 : i2.default) && e10.__esModule ? i2.default : i2;
            if (Reflect.has(t4, s3)) return Reflect.get(t4, s3, a2);
            if (n2) {
              let e11 = Reflect.get(i2, s3, a2);
              return "function" == typeof e11 && (e11 = e11.bind(i2)), e11;
            }
          }, apply: (e11, t4, r3) => "function" == typeof e11 ? Reflect.apply(e11, t4, r3) : "function" === s2 ? Reflect.apply(i2, t4, r3) : void 0 });
        }
        function normalizeWindowsImportId(e10) {
          return tu && isAbsolute(e10) ? pathToFileURL(e10) : e10;
        }
        function isFipsMode() {
          var _a2, _b2;
          if (void 0 !== t2) return t2;
          try {
            return t2 = !!((_b2 = (_a2 = tr()).getFips) == null ? void 0 : _b2.call(_a2));
          } catch {
            return t2 = false;
          }
        }
        function resolveJitiOptions(e10) {
          let t3 = { fsCache: _booleanEnv("JITI_FS_CACHE", _booleanEnv("JITI_CACHE", true)), rebuildFsCache: _booleanEnv("JITI_REBUILD_FS_CACHE", false), moduleCache: _booleanEnv("JITI_MODULE_CACHE", _booleanEnv("JITI_REQUIRE_CACHE", true)), debug: _booleanEnv("JITI_DEBUG", false), sourceMaps: _booleanEnv("JITI_SOURCE_MAPS", false), interopDefault: _booleanEnv("JITI_INTEROP_DEFAULT", true), extensions: _jsonEnv("JITI_EXTENSIONS", [".js", ".mjs", ".cjs", ".ts", ".tsx", ".mts", ".cts", ".mtsx", ".ctsx"]), alias: _jsonEnv("JITI_ALIAS", {}), nativeModules: _jsonEnv("JITI_NATIVE_MODULES", []), transformModules: _jsonEnv("JITI_TRANSFORM_MODULES", []), tryNative: _jsonEnv("JITI_TRY_NATIVE", "Bun" in globalThis), jsx: _booleanEnv("JITI_JSX", false) };
          t3.jsx && t3.extensions.push(".jsx", ".tsx");
          let i2 = {};
          return void 0 !== e10.cache && (i2.fsCache = e10.cache), void 0 !== e10.requireCache && (i2.moduleCache = e10.requireCache), { ...t3, ...i2, ...e10 };
        }
        function _booleanEnv(e10, t3) {
          return !!_jsonEnv(e10, t3);
        }
        function _jsonEnv(e10, t3) {
          let i2 = process.env[e10];
          if (!(e10 in process.env)) return t3;
          try {
            return JSON.parse(i2);
          } catch {
            return t3;
          }
        }
        let tA = /\.(c|m)?j(sx?)$/, tN = /\.(c|m)?t(sx?)$/;
        function jitiResolve(e10, t3, i2) {
          var _a2;
          let s2, r2;
          if (e10.isNativeRe.test(t3)) return t3;
          e10.alias && (t3 = resolveAlias(t3, e10.alias));
          let n2 = (i2 == null ? void 0 : i2.parentURL) || e10.url;
          for (let a2 of (isDir(n2) && (n2 = pathe_M_eThtNZ_join(n2, "_index.js")), ((i2 == null ? void 0 : i2.async) ? [i2 == null ? void 0 : i2.conditions, ["node", "import"], ["node", "require"]] : [i2 == null ? void 0 : i2.conditions, ["node", "require"], ["node", "import"]]).filter(Boolean))) {
            try {
              s2 = resolvePathSync(t3, { url: n2, conditions: a2, extensions: e10.opts.extensions });
            } catch (e11) {
              r2 = e11;
            }
            if (s2) return s2;
          }
          try {
            return e10.nativeRequire.resolve(t3, { paths: i2.paths });
          } catch (e11) {
            r2 = e11;
          }
          for (let r3 of e10.additionalExts) if ((s2 = tryNativeRequireResolve(e10, t3 + r3, n2, i2) || tryNativeRequireResolve(e10, t3 + "/index" + r3, n2, i2)) || (tN.test(e10.filename) || tN.test(((_a2 = e10.parentModule) == null ? void 0 : _a2.filename) || "") || tA.test(t3)) && (s2 = tryNativeRequireResolve(e10, t3.replace(tA, ".$1t$2"), n2, i2))) return s2;
          if (!(i2 == null ? void 0 : i2.try)) throw r2;
        }
        function tryNativeRequireResolve(e10, t3, i2, s2) {
          try {
            return e10.nativeRequire.resolve(t3, { ...s2, paths: [pathe_M_eThtNZ_dirname(fileURLToPath(i2)), ...(s2 == null ? void 0 : s2.paths) || []] });
          } catch {
          }
        }
        let tL = require_node_perf_hooks(), tD = require_node_vm();
        var tO = __webpack_require__.n(tD);
        function jitiRequire(e10, t3, i2) {
          var _a2;
          let s2 = e10.parentCache || {};
          if (t3.startsWith("node:")) return nativeImportOrRequire(e10, t3, i2.async);
          if (t3.startsWith("file:")) t3 = (0, eE.fileURLToPath)(t3);
          else if (t3.startsWith("data:")) {
            if (!i2.async) throw Error("`data:` URLs are only supported in ESM context. Use `import` or `jiti.import` instead.");
            return debug(e10, "[native]", "[data]", "[import]", t3), nativeImportOrRequire(e10, t3, true);
          }
          if (ed.builtinModules.includes(t3) || ".pnp.js" === t3) return nativeImportOrRequire(e10, t3, i2.async);
          if (e10.opts.tryNative && !e10.opts.transformOptions) try {
            if (!(t3 = jitiResolve(e10, t3, i2)) && i2.try) return;
            if (debug(e10, "[try-native]", i2.async && e10.nativeImport ? "[import]" : "[require]", t3), i2.async && e10.nativeImport) return e10.nativeImport(t3).then((i3) => (false === e10.opts.moduleCache && delete e10.nativeRequire.cache[t3], jitiInteropDefault(e10, i3)));
            {
              let i3 = e10.nativeRequire(t3);
              return false === e10.opts.moduleCache && delete e10.nativeRequire.cache[t3], jitiInteropDefault(e10, i3);
            }
          } catch (i3) {
            debug(e10, `[try-native] Using fallback for ${t3} because of an error:`, i3);
          }
          let r2 = jitiResolve(e10, t3, i2);
          if (!r2 && i2.try) return;
          let n2 = extname(r2);
          if (".json" === n2) {
            debug(e10, "[json]", r2);
            let t4 = e10.nativeRequire(r2);
            return !t4 || "default" in t4 || Object.defineProperty(t4, "default", { value: t4, enumerable: false }), t4;
          }
          if (n2 && !e10.opts.extensions.includes(n2)) return debug(e10, "[native]", "[unknown]", i2.async ? "[import]" : "[require]", r2), nativeImportOrRequire(e10, r2, i2.async);
          if (e10.isNativeRe.test(r2)) return debug(e10, "[native]", i2.async ? "[import]" : "[require]", r2), nativeImportOrRequire(e10, r2, i2.async);
          if (s2[r2]) return jitiInteropDefault(e10, (_a2 = s2[r2]) == null ? void 0 : _a2.exports);
          if (e10.opts.moduleCache) {
            let t4 = e10.nativeRequire.cache[r2];
            if (t4 == null ? void 0 : t4.loaded) return jitiInteropDefault(e10, t4.exports);
          }
          return eval_evalModule(e10, (0, ef.readFileSync)(r2, "utf8"), { id: t3, filename: r2, ext: n2, cache: s2, async: i2.async });
        }
        function nativeImportOrRequire(e10, t3, i2) {
          return i2 && e10.nativeImport ? e10.nativeImport(normalizeWindowsImportId(t3)).then((t4) => jitiInteropDefault(e10, t4)) : jitiInteropDefault(e10, e10.nativeRequire(t3));
        }
        function getCache(e10, t3, i2) {
          if (!e10.opts.fsCache || !t3.filename) return i2();
          let s2 = ` /* v9-${utils_hash(t3.source, 16)} */
`, r2 = `${basename(pathe_M_eThtNZ_dirname(t3.filename))}-${utils_filename(t3.filename)}` + (e10.opts.sourceMaps ? "+map" : "") + (t3.interopDefault ? ".i" : "") + `.${utils_hash(t3.filename)}` + (t3.async ? ".mjs" : ".cjs");
          t3.jsx && t3.filename.endsWith("x") && (r2 += "x");
          let n2 = pathe_M_eThtNZ_join(e10.opts.fsCache, r2);
          if (!e10.opts.rebuildFsCache && (0, ef.existsSync)(n2)) {
            let i3 = (0, ef.readFileSync)(n2, "utf8");
            if (i3.endsWith(s2)) return debug(e10, "[cache]", "[hit]", t3.filename, "~>", n2), i3;
          }
          debug(e10, "[cache]", "[miss]", t3.filename);
          let a2 = i2();
          return a2.includes("__JITI_ERROR__") || ((0, ef.writeFileSync)(n2, a2 + s2, "utf8"), debug(e10, "[cache]", "[store]", t3.filename, "~>", n2)), a2;
        }
        function prepareCacheDir(e10) {
          if (true === e10.opts.fsCache && (e10.opts.fsCache = getCacheDir(e10)), e10.opts.fsCache) try {
            if ((0, ef.mkdirSync)(e10.opts.fsCache, { recursive: true }), !isWritable(e10.opts.fsCache)) throw Error("directory is not writable!");
          } catch (t3) {
            debug(e10, "Error creating cache directory at ", e10.opts.fsCache, t3), e10.opts.fsCache = false;
          }
        }
        function getCacheDir(e10) {
          let t3 = e10.filename && pathe_M_eThtNZ_resolve(e10.filename, "../node_modules");
          if (t3 && (0, ef.existsSync)(t3)) return pathe_M_eThtNZ_join(t3, ".cache/jiti");
          let i2 = (0, r.tmpdir)();
          if (process.env.TMPDIR && i2 === process.cwd() && !process.env.JITI_RESPECT_TMPDIR_ENV) {
            let e11 = process.env.TMPDIR;
            delete process.env.TMPDIR, i2 = (0, r.tmpdir)(), process.env.TMPDIR = e11;
          }
          return pathe_M_eThtNZ_join(i2, "jiti");
        }
        function transform(e10, t3) {
          let i2 = getCache(e10, t3, () => {
            var _a2;
            let i3 = e10.opts.transform({ ...e10.opts.transformOptions, babel: { ...e10.opts.sourceMaps ? { sourceFileName: t3.filename, sourceMaps: "inline" } : {}, ...(_a2 = e10.opts.transformOptions) == null ? void 0 : _a2.babel }, interopDefault: e10.opts.interopDefault, ...t3 });
            return i3.error && e10.opts.debug && debug(e10, i3.error), i3.code;
          });
          return i2.startsWith("#!") && (i2 = "// " + i2), i2;
        }
        function eval_evalModule(e10, t3, i2 = {}) {
          var _a2;
          let s2, r2, n2 = i2.id || (i2.filename ? basename(i2.filename) : `_jitiEval.${i2.ext || (i2.async ? "mjs" : "js")}`), a2 = i2.filename || jitiResolve(e10, n2, { async: i2.async }), o2 = i2.ext || extname(a2), h2 = i2.cache || e10.parentCache || {}, c2 = /\.[cm]?tsx?$/.test(o2), p2 = ".mjs" === o2 || ".js" === o2 && ((_a2 = readNearestPackageJSON(a2)) == null ? void 0 : _a2.type) === "module", l2 = ".cjs" === o2, u2 = i2.forceTranspile ?? (!l2 && !(p2 && i2.async) && (c2 || p2 || e10.isTransformRe.test(a2) || hasESMSyntax(t3))), d2 = tL.performance.now();
          if (u2) {
            t3 = transform(e10, { filename: a2, source: t3, ts: c2, async: i2.async ?? false, jsx: e10.opts.jsx });
            let s3 = Math.round((tL.performance.now() - d2) * 1e3) / 1e3;
            debug(e10, "[transpile]", i2.async ? "[esm]" : "[cjs]", a2, `(${s3}ms)`);
          } else {
            if (debug(e10, "[native]", i2.async ? "[import]" : "[require]", a2), i2.async) return Promise.resolve(nativeImportOrRequire(e10, a2, i2.async)).catch((s3) => (debug(e10, "Native import error:", s3), debug(e10, "[fallback]", a2), eval_evalModule(e10, t3, { ...i2, forceTranspile: true })));
            try {
              return nativeImportOrRequire(e10, a2, i2.async);
            } catch (s3) {
              debug(e10, "Native require error:", s3), debug(e10, "[fallback]", a2), t3 = transform(e10, { filename: a2, source: t3, ts: c2, async: i2.async ?? false, jsx: e10.opts.jsx });
            }
          }
          let f2 = new ed.Module(a2);
          f2.filename = a2, e10.parentModule && (f2.parent = e10.parentModule, Array.isArray(e10.parentModule.children) && !e10.parentModule.children.includes(f2) && e10.parentModule.children.push(f2));
          let m2 = createJiti2(a2, e10.opts, { parentModule: f2, parentCache: h2, nativeImport: e10.nativeImport, onError: e10.onError, createRequire: e10.createRequire }, true);
          f2.require = m2, f2.path = pathe_M_eThtNZ_dirname(a2), f2.paths = ed.Module._nodeModulePaths(f2.path), h2[a2] = f2, e10.opts.moduleCache && (e10.nativeRequire.cache[a2] = f2);
          let g2 = wrapModule(t3, { async: i2.async });
          try {
            s2 = tO().runInThisContext(g2, { filename: a2, lineOffset: 0, displayErrors: false });
          } catch (t4) {
            "SyntaxError" === t4.name && i2.async && e10.nativeImport ? (debug(e10, "[esm]", "[import]", "[fallback]", a2), s2 = esmEval(g2, e10.nativeImport)) : (e10.opts.moduleCache && delete e10.nativeRequire.cache[a2], e10.onError(t4));
          }
          try {
            r2 = s2(f2.exports, f2.require, f2, f2.filename, pathe_M_eThtNZ_dirname(f2.filename), m2.import, m2.esmResolve);
          } catch (t4) {
            e10.opts.moduleCache && delete e10.nativeRequire.cache[a2], e10.onError(t4);
          }
          function next() {
            if (f2.exports && f2.exports.__JITI_ERROR__) {
              let { filename: t4, line: i3, column: s3, code: r3, message: n3 } = f2.exports.__JITI_ERROR__, a3 = `${t4}:${i3}:${s3}`, o3 = Error(`${r3}: ${n3} 
 ${a3}`);
              Error.captureStackTrace(o3, jitiRequire), e10.onError(o3);
            }
            return f2.loaded = true, jitiInteropDefault(e10, f2.exports);
          }
          return i2.async ? Promise.resolve(r2).then(next) : next();
        }
        function esmEval(e10, t3) {
          let i2 = `data:text/javascript;base64,${Buffer.from(`export default ${e10}`).toString("base64")}`;
          return (...e11) => t3(i2).then((t4) => t4.default(...e11));
        }
        let tV = "win32" === (0, r.platform)();
        function createJiti2(e10, t3 = {}, i2, s2 = false) {
          let r2 = s2 ? t3 : resolveJitiOptions(t3), n2 = r2.alias && Object.keys(r2.alias).length > 0 ? normalizeAliases(r2.alias || {}) : void 0, a2 = ["typescript", "jiti", ...r2.nativeModules || []], o2 = RegExp(`node_modules/(${a2.map((e11) => escapeStringRegexp(e11)).join("|")})/`), h2 = [...r2.transformModules || []], c2 = RegExp(`node_modules/(${h2.map((e11) => escapeStringRegexp(e11)).join("|")})/`);
          e10 || (e10 = process.cwd()), !s2 && isDir(e10) && (e10 = pathe_M_eThtNZ_join(e10, "_index.js"));
          let p2 = pathToFileURL(e10), l2 = [...r2.extensions].filter((e11) => ".js" !== e11), u2 = i2.createRequire(tV ? e10.replace(/\//g, "\\") : e10), d2 = { filename: e10, url: p2, opts: r2, alias: n2, nativeModules: a2, transformModules: h2, isNativeRe: o2, isTransformRe: c2, additionalExts: l2, nativeRequire: u2, onError: i2.onError, parentModule: i2.parentModule, parentCache: i2.parentCache, nativeImport: i2.nativeImport, createRequire: i2.createRequire };
          return s2 || debug(d2, "[init]", ...[["version:", "2.6.0"], ["module-cache:", r2.moduleCache], ["fs-cache:", r2.fsCache], ["rebuild-fs-cache:", r2.rebuildFsCache], ["interop-defaults:", r2.interopDefault]].flat()), s2 || prepareCacheDir(d2), Object.assign(function(e11) {
            return jitiRequire(d2, e11, { async: false });
          }, { cache: r2.moduleCache ? u2.cache : /* @__PURE__ */ Object.create(null), extensions: u2.extensions, main: u2.main, options: r2, resolve: Object.assign(function(e11) {
            return jitiResolve(d2, e11, { async: false });
          }, { paths: u2.resolve.paths }), transform: (e11) => transform(d2, e11), evalModule: (e11, t4) => eval_evalModule(d2, e11, t4), async import(e11, t4) {
            let i3 = await jitiRequire(d2, e11, { ...t4, async: true });
            return (t4 == null ? void 0 : t4.default) ? (i3 == null ? void 0 : i3.default) ?? i3 : i3;
          }, esmResolve(e11, t4) {
            "string" == typeof t4 && (t4 = { parentURL: t4 });
            let i3 = jitiResolve(d2, e11, { parentURL: p2, ...t4, async: true });
            return !i3 || "string" != typeof i3 || i3.startsWith("file://") ? i3 : pathToFileURL(i3);
          } });
        }
      })(), module.exports = i.default;
    })();
  }
});

// node_modules/jiti/lib/jiti.mjs
var import_node_module = __toESM(require_node_module(), 1);
var import_jiti = __toESM(require_jiti(), 1);
function onError(err) {
  throw err;
}
var nativeImport = (id) => import(id);
var _transform;
function lazyTransform(...args) {
  if (!_transform) {
    _transform = (0, import_node_module.createRequire)(import.meta.url)("../dist/babel.cjs");
  }
  return _transform(...args);
}
function createJiti(id, opts = {}) {
  if (!opts.transform) {
    opts = { ...opts, transform: lazyTransform };
  }
  return (0, import_jiti.default)(id, opts, {
    onError,
    nativeImport,
    createRequire: import_node_module.createRequire
  });
}
var jiti_default = createJiti;
export {
  createJiti,
  jiti_default as default
};
//# sourceMappingURL=jiti-PVH7MOS7.js.map
